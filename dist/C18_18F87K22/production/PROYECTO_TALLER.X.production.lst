

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sat Nov 11 21:09:20 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F252
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 1.42
    38                           ; Generated 13/04/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F252 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     
    72                           	psect	idataCOMRAM
    73  0019C8                     __pidataCOMRAM:
    74                           	opt stack 0
    75                           
    76                           ;initializer for _ytrue
    77  0019C8  0001               	dw	1
    78                           
    79                           ;initializer for _xtrue
    80  0019CA  0001               	dw	1
    81                           
    82                           ;initializer for _numSteps
    83  0019CC  0008               	dw	8
    84                           
    85                           ;initializer for _vel
    86  0019CE  0032               	dw	50
    87                           
    88                           ;initializer for _stepsPerRev
    89  0019D0  0FEC               	dw	4076
    90                           
    91                           	psect	smallconst
    92  000600                     __psmallconst:
    93                           	opt stack 0
    94  000600  00                 	db	0
    95  000601                     _dpowers:
    96                           	opt stack 0
    97  000601  0001               	dw	1
    98  000603  000A               	dw	10
    99  000605  0064               	dw	100
   100  000607  03E8               	dw	1000
   101  000609  2710               	dw	10000
   102  00060B                     __end_of_dpowers:
   103                           	opt stack 0
   104  00060B                     _comandonoreconocido:
   105                           	opt stack 0
   106  00060B  43                 	db	67
   107  00060C  6F                 	db	111
   108  00060D  6D                 	db	109
   109  00060E  61                 	db	97
   110  00060F  6E                 	db	110
   111  000610  64                 	db	100
   112  000611  6F                 	db	111
   113  000612  20                 	db	32
   114  000613  6E                 	db	110
   115  000614  6F                 	db	111
   116  000615  20                 	db	32
   117  000616  52                 	db	82
   118  000617  65                 	db	101
   119  000618  63                 	db	99
   120  000619  6F                 	db	111
   121  00061A  6E                 	db	110
   122  00061B  6F                 	db	111
   123  00061C  63                 	db	99
   124  00061D  69                 	db	105
   125  00061E  64                 	db	100
   126  00061F  6F                 	db	111
   127  000620  00                 	db	0
   128  000621                     __end_of_comandonoreconocido:
   129                           	opt stack 0
   130  000621                     _saludo:
   131                           	opt stack 0
   132  000621  62                 	db	98
   133  000622  69                 	db	105
   134  000623  65                 	db	101
   135  000624  6E                 	db	110
   136  000625  76                 	db	118
   137  000626  65                 	db	101
   138  000627  6E                 	db	110
   139  000628  69                 	db	105
   140  000629  64                 	db	100
   141  00062A  6F                 	db	111
   142  00062B  00                 	db	0
   143  00062C                     __end_of_saludo:
   144                           	opt stack 0
   145  00062C                     _movery:
   146                           	opt stack 0
   147  00062C  4D                 	db	77
   148  00062D  4F                 	db	79
   149  00062E  56                 	db	86
   150  00062F  45                 	db	69
   151  000630  52                 	db	82
   152  000631  59                 	db	89
   153  000632  00                 	db	0
   154  000633                     __end_of_movery:
   155                           	opt stack 0
   156  000633                     _moverx:
   157                           	opt stack 0
   158  000633  4D                 	db	77
   159  000634  4F                 	db	79
   160  000635  56                 	db	86
   161  000636  45                 	db	69
   162  000637  52                 	db	82
   163  000638  58                 	db	88
   164  000639  00                 	db	0
   165  00063A                     __end_of_moverx:
   166                           	opt stack 0
   167  0000                     _TMR1	set	4046
   168  0000                     _RCSTAbits	set	4011
   169  0000                     _SPBRG	set	4015
   170  0000                     _TRISCbits	set	3988
   171  0000                     _INTCONbits	set	4082
   172  0000                     _IPR1bits	set	3999
   173  0000                     _PIE1bits	set	3997
   174  0000                     _T1CONbits	set	4045
   175  0000                     _TRISA	set	3986
   176  0000                     _TRISBbits	set	3987
   177  0000                     _PORTC	set	3970
   178  0000                     _PORTB	set	3969
   179  0000                     _PORTA	set	3968
   180  0000                     _LATB	set	3978
   181  0000                     _LATA	set	3977
   182  0000                     _TXSTAbits	set	4012
   183  0000                     _TXREG	set	4013
   184  0000                     _PORTBbits	set	3969
   185  0000                     _LATBbits	set	3978
   186  0000                     _RCREG	set	4014
   187  0000                     _PIR1bits	set	3998
   188  00063A                     STR_1:
   189  00063A  73                 	db	115	;'s'
   190  00063B  74                 	db	116	;'t'
   191  00063C  65                 	db	101	;'e'
   192  00063D  70                 	db	112	;'p'
   193  00063E  63                 	db	99	;'c'
   194  00063F  6F                 	db	111	;'o'
   195  000640  75                 	db	117	;'u'
   196  000641  6E                 	db	110	;'n'
   197  000642  74                 	db	116	;'t'
   198  000643  20                 	db	32
   199  000644  3A                 	db	58	;':'
   200  000645  20                 	db	32
   201  000646  25                 	db	37
   202  000647  64                 	db	100	;'d'
   203  000648  20                 	db	32
   204  000649  00                 	db	0
   205  0000                     
   206                           ; #config settings
   207  00064A  00                 	db	0	; dummy byte at the end
   208  0000                     
   209                           	psect	cinit
   210  00193A                     __pcinit:
   211                           	opt stack 0
   212  00193A                     start_initialization:
   213                           	opt stack 0
   214  00193A                     __initialization:
   215                           	opt stack 0
   216                           
   217                           ; Initialize objects allocated to COMRAM (10 bytes)
   218                           ; load TBLPTR registers with __pidataCOMRAM
   219  00193A  0EC8               	movlw	low __pidataCOMRAM
   220  00193C  6EF6               	movwf	tblptrl,c
   221  00193E  0E19               	movlw	high __pidataCOMRAM
   222  001940  6EF7               	movwf	tblptrh,c
   223  001942  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   224  001944  6EF8               	movwf	tblptru,c
   225  001946  EE00  F055         	lfsr	0,__pdataCOMRAM
   226  00194A  EE10 F00A          	lfsr	1,10
   227  00194E                     copy_data0:
   228  00194E  0009               	tblrd		*+
   229  001950  CFF5 FFEE          	movff	tablat,postinc0
   230  001954  50E5               	movf	postdec1,w,c
   231  001956  50E1               	movf	fsr1l,w,c
   232  001958  E1FA               	bnz	copy_data0
   233                           
   234                           ; Clear objects allocated to BANK0 (98 bytes)
   235  00195A  EE00  F080         	lfsr	0,__pbssBANK0
   236  00195E  0E62               	movlw	98
   237  001960                     clear_0:
   238  001960  6AEE               	clrf	postinc0,c
   239  001962  06E8               	decf	wreg,f,c
   240  001964  E1FD               	bnz	clear_0
   241                           
   242                           ; Clear objects allocated to COMRAM (51 bytes)
   243  001966  EE00  F001         	lfsr	0,__pbssCOMRAM
   244  00196A  0E33               	movlw	51
   245  00196C                     clear_1:
   246  00196C  6AEE               	clrf	postinc0,c
   247  00196E  06E8               	decf	wreg,f,c
   248  001970  E1FD               	bnz	clear_1
   249  001972                     end_of_initialization:
   250                           	opt stack 0
   251  001972                     __end_of__initialization:
   252                           	opt stack 0
   253  001972  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   254  001974  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   255  001976  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256  001978  6EF8               	movwf	tblptru,c
   257  00197A  0100               	movlb	0
   258  00197C  EF26  F003         	goto	_main	;jump to C main() function
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           postinc0	equ	0xFEE
   264                           wreg	equ	0xFE8
   265                           postdec1	equ	0xFE5
   266                           fsr1l	equ	0xFE1
   267                           
   268                           	psect	bssCOMRAM
   269  000001                     __pbssCOMRAM:
   270                           	opt stack 0
   271  000001                     _ptr_llegada:
   272                           	opt stack 0
   273  000001                     	ds	2
   274  000003                     _lleg:
   275                           	opt stack 0
   276  000003                     	ds	2
   277  000005                     _i:
   278                           	opt stack 0
   279  000005                     	ds	2
   280  000007                     _tama2:
   281                           	opt stack 0
   282  000007                     	ds	2
   283  000009                     _tama1:
   284                           	opt stack 0
   285  000009                     	ds	2
   286  00000B                     _r:
   287                           	opt stack 0
   288  00000B                     	ds	2
   289  00000D                     _help:
   290                           	opt stack 0
   291  00000D                     	ds	2
   292  00000F                     _p:
   293                           	opt stack 0
   294  00000F                     	ds	2
   295  000011                     _o:
   296                           	opt stack 0
   297  000011                     	ds	2
   298  000013                     _h:
   299                           	opt stack 0
   300  000013                     	ds	2
   301  000015                     _actualstep:
   302                           	opt stack 0
   303  000015                     	ds	2
   304  000017                     _stepcont:
   305                           	opt stack 0
   306  000017                     	ds	2
   307  000019                     _c:
   308                           	opt stack 0
   309  000019                     	ds	2
   310  00001B                     _cont_led:
   311                           	opt stack 0
   312  00001B                     	ds	2
   313  00001D                     _contadorled:
   314                           	opt stack 0
   315  00001D                     	ds	2
   316  00001F                     _visualizacion:
   317                           	opt stack 0
   318  00001F                     	ds	2
   319  000021                     _muestreo:
   320                           	opt stack 0
   321  000021                     	ds	2
   322  000023                     _g:
   323                           	opt stack 0
   324  000023                     	ds	2
   325  000025                     _StepCounter:
   326                           	opt stack 0
   327  000025                     	ds	2
   328  000027                     _n:
   329                           	opt stack 0
   330  000027                     	ds	2
   331  000029                     _movimiento:
   332                           	opt stack 0
   333  000029                     	ds	2
   334  00002B                     _led:
   335                           	opt stack 0
   336  00002B                     	ds	2
   337  00002D                     _enter:
   338                           	opt stack 0
   339  00002D                     	ds	2
   340  00002F                     _tama:
   341                           	opt stack 0
   342  00002F                     	ds	2
   343  000031                     _dato:
   344                           	opt stack 0
   345  000031                     	ds	1
   346  000032                     _steps:
   347                           	opt stack 0
   348  000032                     	ds	2
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           postinc0	equ	0xFEE
   354                           wreg	equ	0xFE8
   355                           postdec1	equ	0xFE5
   356                           fsr1l	equ	0xFE1
   357                           
   358                           	psect	dataCOMRAM
   359  000055                     __pdataCOMRAM:
   360                           	opt stack 0
   361  000055                     _ytrue:
   362                           	opt stack 0
   363  000055                     	ds	2
   364  000057                     _xtrue:
   365                           	opt stack 0
   366  000057                     	ds	2
   367  000059                     _numSteps:
   368                           	opt stack 0
   369  000059                     	ds	2
   370  00005B                     _vel:
   371                           	opt stack 0
   372  00005B                     	ds	2
   373  00005D                     _stepsPerRev:
   374                           	opt stack 0
   375  00005D                     	ds	2
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385                           	psect	bssBANK0
   386  000080                     __pbssBANK0:
   387                           	opt stack 0
   388  000080                     _digitos:
   389                           	opt stack 0
   390  000080                     	ds	3
   391  000083                     _entrada:
   392                           	opt stack 0
   393  000083                     	ds	25
   394  00009C                     _salida:
   395                           	opt stack 0
   396  00009C                     	ds	25
   397  0000B5                     _comando:
   398                           	opt stack 0
   399  0000B5                     	ds	25
   400  0000CE                     _tam:
   401                           	opt stack 0
   402  0000CE                     	ds	20
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           postinc0	equ	0xFEE
   408                           wreg	equ	0xFE8
   409                           postdec1	equ	0xFE5
   410                           fsr1l	equ	0xFE1
   411                           
   412                           	psect	cstackBANK0
   413  0000E2                     __pcstackBANK0:
   414                           	opt stack 0
   415  0000E2                     ?_strcmp:
   416                           	opt stack 0
   417  0000E2                     ?___wmul:
   418                           	opt stack 0
   419  0000E2                     ?___lwdiv:
   420                           	opt stack 0
   421  0000E2                     enviarTrama@datos:
   422                           	opt stack 0
   423  0000E2                     ledestado@tiempoled:
   424                           	opt stack 0
   425  0000E2                     ___wmul@multiplier:
   426                           	opt stack 0
   427  0000E2                     ___lwdiv@dividend:
   428                           	opt stack 0
   429  0000E2                     strcmp@s1:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x0
   433  0000E2                     	ds	2
   434  0000E4                     ___wmul@multiplicand:
   435                           	opt stack 0
   436  0000E4                     ___lwdiv@divisor:
   437                           	opt stack 0
   438  0000E4                     strcmp@s2:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x2
   442  0000E4                     	ds	2
   443  0000E6                     ___lwdiv@counter:
   444                           	opt stack 0
   445  0000E6                     strcmp@r:
   446                           	opt stack 0
   447  0000E6                     ___wmul@product:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x4
   451  0000E6                     	ds	1
   452  0000E7                     ___lwdiv@quotient:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x5
   456  0000E7                     	ds	1
   457  0000E8                     ?_stringtoint:
   458                           	opt stack 0
   459  0000E8                     stringtoint@string:
   460                           	opt stack 0
   461                           
   462                           ; 2 bytes @ 0x6
   463  0000E8                     	ds	1
   464  0000E9                     ?___lwmod:
   465                           	opt stack 0
   466  0000E9                     ___lwmod@dividend:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x7
   470  0000E9                     	ds	1
   471  0000EA                     stringtoint@tamanio:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x8
   475  0000EA                     	ds	1
   476  0000EB                     ___lwmod@divisor:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x9
   480  0000EB                     	ds	2
   481  0000ED                     ?_sprintf:
   482                           	opt stack 0
   483  0000ED                     sprintf@sp:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0xB
   487  0000ED                     	ds	2
   488  0000EF                     sprintf@f:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0xD
   492  0000EF                     	ds	4
   493  0000F3                     ??_sprintf:
   494                           
   495                           ; 1 bytes @ 0x11
   496  0000F3                     	ds	1
   497  0000F4                     sprintf@ap:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x12
   501  0000F4                     	ds	2
   502  0000F6                     sprintf@flag:
   503                           	opt stack 0
   504                           
   505                           ; 1 bytes @ 0x14
   506  0000F6                     	ds	1
   507  0000F7                     sprintf@prec:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x15
   511  0000F7                     	ds	1
   512  0000F8                     sprintf@val:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x16
   516  0000F8                     	ds	2
   517  0000FA                     sprintf@c:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x18
   521  0000FA                     	ds	1
   522  0000FB                     ejexpositivo@paso:
   523                           	opt stack 0
   524  0000FB                     ejexnegativo@paso2:
   525                           	opt stack 0
   526  0000FB                     ejeypositivo@paso3:
   527                           	opt stack 0
   528  0000FB                     ejeynegativo@paso4:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x19
   532  0000FB                     	ds	2
   533  0000FD                     ??_ejexpositivo:
   534  0000FD                     ??_ejexnegativo:
   535  0000FD                     ??_ejeypositivo:
   536  0000FD                     ??_ejeynegativo:
   537                           
   538                           ; 1 bytes @ 0x1B
   539  0000FD                     	ds	2
   540  0000FF                     
   541                           ; 1 bytes @ 0x1D
   542  0000FF                     	ds	1
   543                           tblptru	equ	0xFF8
   544                           tblptrh	equ	0xFF7
   545                           tblptrl	equ	0xFF6
   546                           tablat	equ	0xFF5
   547                           postinc0	equ	0xFEE
   548                           wreg	equ	0xFE8
   549                           postdec1	equ	0xFE5
   550                           fsr1l	equ	0xFE1
   551                           
   552                           	psect	cstackCOMRAM
   553  000034                     __pcstackCOMRAM:
   554                           	opt stack 0
   555  000034                     ??_high_isr:
   556  000034                     
   557                           ; 1 bytes @ 0x0
   558  000034                     	ds	15
   559  000043                     ??_low_isr:
   560                           
   561                           ; 1 bytes @ 0xF
   562  000043                     	ds	17
   563  000054                     ??_ledestado:
   564  000054                     ??_strcmp:
   565  000054                     ??_stringtoint:
   566  000054                     ___lwmod@counter:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x20
   570  000054                     	ds	1
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           postdec1	equ	0xFE5
   578                           fsr1l	equ	0xFE1
   579                           
   580 ;;
   581 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   582 ;;
   583 ;; *************** function _main *****************
   584 ;; Defined at:
   585 ;;		line 86 in file "main.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;		None
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   599 ;;      Params:         0       0       0       0       0       0       0
   600 ;;      Locals:         0       0       0       0       0       0       0
   601 ;;      Temps:          0       1       0       0       0       0       0
   602 ;;      Totals:         0       1       0       0       0       0       0
   603 ;;Total ram usage:        1 bytes
   604 ;; Hardware stack levels required when called:    5
   605 ;; This function calls:
   606 ;;		_ConfigureOscillator
   607 ;;		_InitApp
   608 ;;		_apagarM1
   609 ;;		_apagarM2
   610 ;;		_ejexnegativo
   611 ;;		_ejexpositivo
   612 ;;		_ejeynegativo
   613 ;;		_ejeypositivo
   614 ;;		_enviarTrama
   615 ;;		_ledestado
   616 ;;		_strcmp
   617 ;;		_stringtoint
   618 ;; This function is called by:
   619 ;;		Startup code after reset
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           	psect	text0
   624  00064C                     __ptext0:
   625                           	opt stack 0
   626  00064C                     _main:
   627                           	opt stack 0
   628  00064C  FFFF               	dw	65535	; assembler added errata NOP
   629                           
   630                           ;main.c: 88: ConfigureOscillator();
   631                           
   632                           ;incstack = 0
   633  00064E  ECEE  F00C         	call	_ConfigureOscillator	;wreg free
   634                           
   635                           ;main.c: 91: InitApp();
   636  000652  EC74  F00C         	call	_InitApp	;wreg free
   637                           
   638                           ;main.c: 95: enviarTrama(saludo);
   639  000656  0E21               	movlw	low _saludo
   640  000658  0100               	movlb	0	; () banked
   641  00065A  6FE2               	movwf	enviarTrama@datos& (0+255),b
   642  00065C  0E06               	movlw	high _saludo
   643  00065E  0100               	movlb	0	; () banked
   644  000660  6FE3               	movwf	(enviarTrama@datos+1)& (0+255),b
   645  000662  ECA8  F00B         	call	_enviarTrama	;wreg free
   646  000666                     l3137:
   647  000666  FFFF               	dw	65535	; assembler added errata NOP
   648                           
   649                           ;main.c: 98: if (led == 1 && movimiento == 0) {
   650  000668  042B               	decf	_led,w,c
   651  00066A  102C               	iorwf	_led+1,w,c
   652  00066C  A4D8               	btfss	status,2,c
   653  00066E  D00C               	goto	l3145
   654  000670  5029               	movf	_movimiento,w,c
   655  000672  102A               	iorwf	_movimiento+1,w,c
   656  000674  A4D8               	btfss	status,2,c
   657  000676  D008               	goto	l3145
   658                           
   659                           ;main.c: 99: __nop();
   660  000678  F000               	nop	
   661                           
   662                           ;main.c: 100: ledestado(6);
   663  00067A  0E00               	movlw	0
   664  00067C  0100               	movlb	0	; () banked
   665  00067E  6FE3               	movwf	(ledestado@tiempoled+1)& (0+255),b
   666  000680  0E06               	movlw	6
   667  000682  6FE2               	movwf	ledestado@tiempoled& (0+255),b
   668  000684  EC4A  F00C         	call	_ledestado	;wreg free
   669  000688                     l3145:
   670  000688  FFFF               	dw	65535	; assembler added errata NOP
   671                           
   672                           ;main.c: 101: }
   673                           ;main.c: 104: if (enter == 1) {
   674  00068A  042D               	decf	_enter,w,c
   675  00068C  102E               	iorwf	_enter+1,w,c
   676  00068E  A4D8               	btfss	status,2,c
   677  000690  D11F               	goto	l3241
   678                           
   679                           ;main.c: 106: __nop();
   680  000692  F000               	nop	
   681                           
   682                           ;main.c: 107: for (r = 0; r <= 5; r++) {
   683  000694  0E00               	movlw	0
   684  000696  6E0C               	movwf	_r+1,c
   685  000698  0E00               	movlw	0
   686  00069A  6E0B               	movwf	_r,c
   687  00069C                     l3151:
   688  00069C  FFFF               	dw	65535	; assembler added errata NOP
   689  00069E  BE0C               	btfsc	_r+1,7,c
   690  0006A0  D006               	goto	l3155
   691  0006A2  500C               	movf	_r+1,w,c
   692  0006A4  E116               	bnz	l3161
   693  0006A6  0E06               	movlw	6
   694  0006A8  5C0B               	subwf	_r,w,c
   695  0006AA  B0D8               	btfsc	status,0,c
   696  0006AC  D012               	goto	l3161
   697  0006AE                     l3155:
   698  0006AE  FFFF               	dw	65535	; assembler added errata NOP
   699                           
   700                           ;main.c: 108: tam[r] = comando[r];
   701  0006B0  0EB5               	movlw	low _comando
   702  0006B2  240B               	addwf	_r,w,c
   703  0006B4  6ED9               	movwf	fsr2l,c
   704  0006B6  0E00               	movlw	high _comando
   705  0006B8  200C               	addwfc	_r+1,w,c
   706  0006BA  6EDA               	movwf	fsr2h,c
   707  0006BC  0ECE               	movlw	low _tam
   708  0006BE  240B               	addwf	_r,w,c
   709  0006C0  6EE1               	movwf	fsr1l,c
   710  0006C2  0E00               	movlw	high _tam
   711  0006C4  200C               	addwfc	_r+1,w,c
   712  0006C6  6EE2               	movwf	fsr1h,c
   713  0006C8  CFDF FFE7          	movff	indf2,indf1
   714  0006CC  4A0B               	infsnz	_r,f,c
   715  0006CE  2A0C               	incf	_r+1,f,c
   716  0006D0  D7E5               	goto	l3151
   717  0006D2                     l3161:
   718  0006D2  FFFF               	dw	65535	; assembler added errata NOP
   719                           
   720                           ;main.c: 109: }
   721                           ;main.c: 110: xtrue = strcmp(tam, moverx);
   722  0006D4  0ECE               	movlw	low _tam
   723  0006D6  0100               	movlb	0	; () banked
   724  0006D8  6FE2               	movwf	strcmp@s1& (0+255),b
   725  0006DA  0E00               	movlw	high _tam
   726  0006DC  0100               	movlb	0	; () banked
   727  0006DE  6FE3               	movwf	(strcmp@s1+1)& (0+255),b
   728  0006E0  0E33               	movlw	low _moverx
   729  0006E2  0100               	movlb	0	; () banked
   730  0006E4  6FE4               	movwf	strcmp@s2& (0+255),b
   731  0006E6  0E06               	movlw	high _moverx
   732  0006E8  0100               	movlb	0	; () banked
   733  0006EA  6FE5               	movwf	(strcmp@s2+1)& (0+255),b
   734  0006EC  EC1A  F00C         	call	_strcmp	;wreg free
   735  0006F0  C0E2  F057         	movff	?_strcmp,_xtrue
   736  0006F4  C0E3  F058         	movff	?_strcmp+1,_xtrue+1
   737                           
   738                           ;main.c: 111: ytrue = strcmp(tam, movery);
   739  0006F8  0ECE               	movlw	low _tam
   740  0006FA  0100               	movlb	0	; () banked
   741  0006FC  6FE2               	movwf	strcmp@s1& (0+255),b
   742  0006FE  0E00               	movlw	high _tam
   743  000700  0100               	movlb	0	; () banked
   744  000702  6FE3               	movwf	(strcmp@s1+1)& (0+255),b
   745  000704  0E2C               	movlw	low _movery
   746  000706  0100               	movlb	0	; () banked
   747  000708  6FE4               	movwf	strcmp@s2& (0+255),b
   748  00070A  0E06               	movlw	high _movery
   749  00070C  0100               	movlb	0	; () banked
   750  00070E  6FE5               	movwf	(strcmp@s2+1)& (0+255),b
   751  000710  EC1A  F00C         	call	_strcmp	;wreg free
   752  000714  C0E2  F055         	movff	?_strcmp,_ytrue
   753  000718  C0E3  F056         	movff	?_strcmp+1,_ytrue+1
   754                           
   755                           ;main.c: 112: enviarTrama(comando);
   756  00071C  0EB5               	movlw	low _comando
   757  00071E  0100               	movlb	0	; () banked
   758  000720  6FE2               	movwf	enviarTrama@datos& (0+255),b
   759  000722  0E00               	movlw	high _comando
   760  000724  0100               	movlb	0	; () banked
   761  000726  6FE3               	movwf	(enviarTrama@datos+1)& (0+255),b
   762  000728  ECA8  F00B         	call	_enviarTrama	;wreg free
   763                           
   764                           ;main.c: 113: ptr_llegada = &comando[6];
   765  00072C  0EBB               	movlw	low (_comando+6)
   766  00072E  6E01               	movwf	_ptr_llegada,c
   767  000730  0E00               	movlw	high (_comando+6)
   768  000732  6E02               	movwf	_ptr_llegada+1,c
   769                           
   770                           ;main.c: 114: if (*ptr_llegada == '-') {
   771  000734  C001  FFD9         	movff	_ptr_llegada,fsr2l
   772  000738  C002  FFDA         	movff	_ptr_llegada+1,fsr2h
   773  00073C  0E2D               	movlw	45
   774  00073E  18DE               	xorwf	postinc2,w,c
   775  000740  A4D8               	btfss	status,2,c
   776  000742  D056               	goto	l3197
   777                           
   778                           ;main.c: 115: ptr_llegada = &comando[7];
   779  000744  0EBC               	movlw	low (_comando+7)
   780  000746  6E01               	movwf	_ptr_llegada,c
   781  000748  0E00               	movlw	high (_comando+7)
   782  00074A  6E02               	movwf	_ptr_llegada+1,c
   783                           
   784                           ;main.c: 116: while (*ptr_llegada != 0) {
   785  00074C  D011               	goto	l3177
   786  00074E                     l3171:
   787  00074E  FFFF               	dw	65535	; assembler added errata NOP
   788                           
   789                           ;main.c: 117: entrada[lleg] = *ptr_llegada;
   790  000750  C001  FFD9         	movff	_ptr_llegada,fsr2l
   791  000754  C002  FFDA         	movff	_ptr_llegada+1,fsr2h
   792  000758  0E83               	movlw	low _entrada
   793  00075A  2403               	addwf	_lleg,w,c
   794  00075C  6EE1               	movwf	fsr1l,c
   795  00075E  0E00               	movlw	high _entrada
   796  000760  2004               	addwfc	_lleg+1,w,c
   797  000762  6EE2               	movwf	fsr1h,c
   798  000764  CFDF FFE7          	movff	indf2,indf1
   799                           
   800                           ;main.c: 118: ptr_llegada++;
   801  000768  4A01               	infsnz	_ptr_llegada,f,c
   802  00076A  2A02               	incf	_ptr_llegada+1,f,c
   803                           
   804                           ;main.c: 119: lleg++;
   805  00076C  4A03               	infsnz	_lleg,f,c
   806  00076E  2A04               	incf	_lleg+1,f,c
   807  000770                     l3177:
   808  000770  FFFF               	dw	65535	; assembler added errata NOP
   809  000772  C001  FFD9         	movff	_ptr_llegada,fsr2l
   810  000776  C002  FFDA         	movff	_ptr_llegada+1,fsr2h
   811  00077A  50DF               	movf	indf2,w,c
   812  00077C  A4D8               	btfss	status,2,c
   813  00077E  D7E7               	goto	l3171
   814                           
   815                           ;main.c: 120: }
   816                           ;main.c: 121: lleg = 0;
   817  000780  0E00               	movlw	0
   818  000782  6E04               	movwf	_lleg+1,c
   819  000784  0E00               	movlw	0
   820  000786  6E03               	movwf	_lleg,c
   821                           
   822                           ;main.c: 123: tama1 = tama - 7;
   823  000788  0EF9               	movlw	249
   824  00078A  242F               	addwf	_tama,w,c
   825  00078C  6E09               	movwf	_tama1,c
   826  00078E  0EFF               	movlw	255
   827  000790  2030               	addwfc	_tama+1,w,c
   828  000792  6E0A               	movwf	_tama1+1,c
   829                           
   830                           ;main.c: 124: steps = stringtoint(entrada, tama1);
   831  000794  0E83               	movlw	low _entrada
   832  000796  0100               	movlb	0	; () banked
   833  000798  6FE8               	movwf	stringtoint@string& (0+255),b
   834  00079A  0E00               	movlw	high _entrada
   835  00079C  0100               	movlb	0	; () banked
   836  00079E  6FE9               	movwf	(stringtoint@string+1)& (0+255),b
   837  0007A0  C009  F0EA         	movff	_tama1,stringtoint@tamanio
   838  0007A4  C00A  F0EB         	movff	_tama1+1,stringtoint@tamanio+1
   839  0007A8  EC10  F00B         	call	_stringtoint	;wreg free
   840  0007AC  C0E8  F032         	movff	?_stringtoint,_steps
   841  0007B0  C0E9  F033         	movff	?_stringtoint+1,_steps+1
   842                           
   843                           ;main.c: 125: steps = (-1) * steps;
   844  0007B4  6C32               	negf	_steps,c
   845  0007B6  1E33               	comf	_steps+1,f,c
   846  0007B8  B0D8               	btfsc	status,0,c
   847  0007BA  2A33               	incf	_steps+1,f,c
   848                           
   849                           ;main.c: 126: enter = 0;
   850  0007BC  0E00               	movlw	0
   851  0007BE  6E2E               	movwf	_enter+1,c
   852  0007C0  0E00               	movlw	0
   853  0007C2  6E2D               	movwf	_enter,c
   854                           
   855                           ;main.c: 127: tama = 0;
   856  0007C4  0E00               	movlw	0
   857  0007C6  6E30               	movwf	_tama+1,c
   858  0007C8  0E00               	movlw	0
   859  0007CA  6E2F               	movwf	_tama,c
   860                           
   861                           ;main.c: 129: } else {
   862  0007CC  D03C               	goto	l3211
   863  0007CE                     l3191:
   864  0007CE  FFFF               	dw	65535	; assembler added errata NOP
   865                           
   866                           ;main.c: 131: entrada[lleg] = *ptr_llegada;
   867  0007D0  C001  FFD9         	movff	_ptr_llegada,fsr2l
   868  0007D4  C002  FFDA         	movff	_ptr_llegada+1,fsr2h
   869  0007D8  0E83               	movlw	low _entrada
   870  0007DA  2403               	addwf	_lleg,w,c
   871  0007DC  6EE1               	movwf	fsr1l,c
   872  0007DE  0E00               	movlw	high _entrada
   873  0007E0  2004               	addwfc	_lleg+1,w,c
   874  0007E2  6EE2               	movwf	fsr1h,c
   875  0007E4  CFDF FFE7          	movff	indf2,indf1
   876                           
   877                           ;main.c: 132: ptr_llegada++;
   878  0007E8  4A01               	infsnz	_ptr_llegada,f,c
   879  0007EA  2A02               	incf	_ptr_llegada+1,f,c
   880                           
   881                           ;main.c: 133: lleg++;
   882  0007EC  4A03               	infsnz	_lleg,f,c
   883  0007EE  2A04               	incf	_lleg+1,f,c
   884  0007F0                     l3197:
   885  0007F0  FFFF               	dw	65535	; assembler added errata NOP
   886  0007F2  C001  FFD9         	movff	_ptr_llegada,fsr2l
   887  0007F6  C002  FFDA         	movff	_ptr_llegada+1,fsr2h
   888  0007FA  50DF               	movf	indf2,w,c
   889  0007FC  A4D8               	btfss	status,2,c
   890  0007FE  D7E7               	goto	l3191
   891                           
   892                           ;main.c: 134: }
   893                           ;main.c: 135: lleg = 0;
   894  000800  0E00               	movlw	0
   895  000802  6E04               	movwf	_lleg+1,c
   896  000804  0E00               	movlw	0
   897  000806  6E03               	movwf	_lleg,c
   898                           
   899                           ;main.c: 136: tama2 = tama - 6;
   900  000808  0EFA               	movlw	250
   901  00080A  242F               	addwf	_tama,w,c
   902  00080C  6E07               	movwf	_tama2,c
   903  00080E  0EFF               	movlw	255
   904  000810  2030               	addwfc	_tama+1,w,c
   905  000812  6E08               	movwf	_tama2+1,c
   906                           
   907                           ;main.c: 137: steps = stringtoint(entrada, tama2);
   908  000814  0E83               	movlw	low _entrada
   909  000816  0100               	movlb	0	; () banked
   910  000818  6FE8               	movwf	stringtoint@string& (0+255),b
   911  00081A  0E00               	movlw	high _entrada
   912  00081C  0100               	movlb	0	; () banked
   913  00081E  6FE9               	movwf	(stringtoint@string+1)& (0+255),b
   914  000820  C007  F0EA         	movff	_tama2,stringtoint@tamanio
   915  000824  C008  F0EB         	movff	_tama2+1,stringtoint@tamanio+1
   916  000828  EC10  F00B         	call	_stringtoint	;wreg free
   917  00082C  C0E8  F032         	movff	?_stringtoint,_steps
   918  000830  C0E9  F033         	movff	?_stringtoint+1,_steps+1
   919                           
   920                           ;main.c: 139: enter = 0;
   921  000834  0E00               	movlw	0
   922  000836  6E2E               	movwf	_enter+1,c
   923  000838  0E00               	movlw	0
   924  00083A  6E2D               	movwf	_enter,c
   925                           
   926                           ;main.c: 140: tama = 0;
   927  00083C  0E00               	movlw	0
   928  00083E  6E30               	movwf	_tama+1,c
   929  000840  0E00               	movlw	0
   930  000842  6E2F               	movwf	_tama,c
   931                           
   932                           ;main.c: 141: __nop();
   933  000844  F000               	nop	
   934  000846                     l3211:
   935  000846  FFFF               	dw	65535	; assembler added errata NOP
   936                           
   937                           ;main.c: 142: }
   938                           ;main.c: 143: for (i = 0; i < 25; i++) {
   939  000848  0E00               	movlw	0
   940  00084A  6E06               	movwf	_i+1,c
   941  00084C  0E00               	movlw	0
   942  00084E  6E05               	movwf	_i,c
   943  000850                     l3213:
   944  000850  FFFF               	dw	65535	; assembler added errata NOP
   945  000852  BE06               	btfsc	_i+1,7,c
   946  000854  D006               	goto	l3217
   947  000856  5006               	movf	_i+1,w,c
   948  000858  E110               	bnz	l3223
   949  00085A  0E19               	movlw	25
   950  00085C  5C05               	subwf	_i,w,c
   951  00085E  B0D8               	btfsc	status,0,c
   952  000860  D00C               	goto	l3223
   953  000862                     l3217:
   954  000862  FFFF               	dw	65535	; assembler added errata NOP
   955                           
   956                           ;main.c: 144: comando[i] = '\0';
   957  000864  0EB5               	movlw	low _comando
   958  000866  2405               	addwf	_i,w,c
   959  000868  6ED9               	movwf	fsr2l,c
   960  00086A  0E00               	movlw	high _comando
   961  00086C  2006               	addwfc	_i+1,w,c
   962  00086E  6EDA               	movwf	fsr2h,c
   963  000870  0E00               	movlw	0
   964  000872  6EDF               	movwf	indf2,c
   965  000874  4A05               	infsnz	_i,f,c
   966  000876  2A06               	incf	_i+1,f,c
   967  000878  D7EB               	goto	l3213
   968  00087A                     l3223:
   969  00087A  FFFF               	dw	65535	; assembler added errata NOP
   970                           
   971                           ;main.c: 145: }
   972                           ;main.c: 146: for (i = 0; i < 25; i++) {
   973  00087C  0E00               	movlw	0
   974  00087E  6E06               	movwf	_i+1,c
   975  000880  0E00               	movlw	0
   976  000882  6E05               	movwf	_i,c
   977  000884                     l3225:
   978  000884  FFFF               	dw	65535	; assembler added errata NOP
   979  000886  BE06               	btfsc	_i+1,7,c
   980  000888  D006               	goto	l3229
   981  00088A  5006               	movf	_i+1,w,c
   982  00088C  E110               	bnz	l3235
   983  00088E  0E19               	movlw	25
   984  000890  5C05               	subwf	_i,w,c
   985  000892  B0D8               	btfsc	status,0,c
   986  000894  D00C               	goto	l3235
   987  000896                     l3229:
   988  000896  FFFF               	dw	65535	; assembler added errata NOP
   989                           
   990                           ;main.c: 147: entrada[i] = '\0';
   991  000898  0E83               	movlw	low _entrada
   992  00089A  2405               	addwf	_i,w,c
   993  00089C  6ED9               	movwf	fsr2l,c
   994  00089E  0E00               	movlw	high _entrada
   995  0008A0  2006               	addwfc	_i+1,w,c
   996  0008A2  6EDA               	movwf	fsr2h,c
   997  0008A4  0E00               	movlw	0
   998  0008A6  6EDF               	movwf	indf2,c
   999  0008A8  4A05               	infsnz	_i,f,c
  1000  0008AA  2A06               	incf	_i+1,f,c
  1001  0008AC  D7EB               	goto	l3225
  1002  0008AE                     l3235:
  1003  0008AE  FFFF               	dw	65535	; assembler added errata NOP
  1004                           
  1005                           ;main.c: 148: }
  1006                           ;main.c: 149: if (xtrue != 0 && ytrue != 0) {
  1007  0008B0  5057               	movf	_xtrue,w,c
  1008  0008B2  1058               	iorwf	_xtrue+1,w,c
  1009  0008B4  B4D8               	btfsc	status,2,c
  1010  0008B6  D00C               	goto	l3241
  1011  0008B8  5055               	movf	_ytrue,w,c
  1012  0008BA  1056               	iorwf	_ytrue+1,w,c
  1013  0008BC  B4D8               	btfsc	status,2,c
  1014  0008BE  D008               	goto	l3241
  1015                           
  1016                           ;main.c: 150: enviarTrama(comandonoreconocido);
  1017  0008C0  0E0B               	movlw	low _comandonoreconocido
  1018  0008C2  0100               	movlb	0	; () banked
  1019  0008C4  6FE2               	movwf	enviarTrama@datos& (0+255),b
  1020  0008C6  0E06               	movlw	high _comandonoreconocido
  1021  0008C8  0100               	movlb	0	; () banked
  1022  0008CA  6FE3               	movwf	(enviarTrama@datos+1)& (0+255),b
  1023  0008CC  ECA8  F00B         	call	_enviarTrama	;wreg free
  1024  0008D0                     l3241:
  1025  0008D0  FFFF               	dw	65535	; assembler added errata NOP
  1026                           
  1027                           ;main.c: 151: }
  1028                           ;main.c: 153: }
  1029                           ;main.c: 157: if (xtrue == 0) {
  1030  0008D2  5057               	movf	_xtrue,w,c
  1031  0008D4  1058               	iorwf	_xtrue+1,w,c
  1032  0008D6  A4D8               	btfss	status,2,c
  1033  0008D8  D02D               	goto	l3269
  1034                           
  1035                           ;main.c: 159: if (steps > 0) {
  1036  0008DA  BE33               	btfsc	_steps+1,7,c
  1037  0008DC  D015               	goto	l3257
  1038  0008DE  5033               	movf	_steps+1,w,c
  1039  0008E0  E103               	bnz	u2670
  1040  0008E2  0432               	decf	_steps,w,c
  1041  0008E4  A0D8               	btfss	status,0,c
  1042  0008E6  D010               	goto	l3257
  1043  0008E8                     u2670:
  1044                           
  1045                           ;main.c: 160: __nop();
  1046  0008E8  F000               	nop	
  1047                           
  1048                           ;main.c: 161: ejexpositivo(steps);
  1049  0008EA  C032  F0FB         	movff	_steps,ejexpositivo@paso
  1050  0008EE  C033  F0FC         	movff	_steps+1,ejexpositivo@paso+1
  1051  0008F2  EC05  F006         	call	_ejexpositivo	;wreg free
  1052                           
  1053                           ;main.c: 163: apagarM1();
  1054  0008F6  ECE9  F00C         	call	_apagarM1	;wreg free
  1055  0008FA  D011               	goto	l3263
  1056  0008FC                     l3253:
  1057  0008FC  FFFF               	dw	65535	; assembler added errata NOP
  1058                           
  1059                           ;main.c: 165: steps = 0;
  1060  0008FE  0E00               	movlw	0
  1061  000900  6E33               	movwf	_steps+1,c
  1062  000902  0E00               	movlw	0
  1063  000904  6E32               	movwf	_steps,c
  1064  000906  D011               	goto	l3267
  1065  000908                     l3257:
  1066  000908  FFFF               	dw	65535	; assembler added errata NOP
  1067                           
  1068                           ;main.c: 168: else if (steps < 0) {
  1069  00090A  AE33               	btfss	_steps+1,7,c
  1070  00090C  D013               	goto	l3269
  1071                           
  1072                           ;main.c: 169: ejexnegativo(steps);
  1073  00090E  C032  F0FB         	movff	_steps,ejexnegativo@paso2
  1074  000912  C033  F0FC         	movff	_steps+1,ejexnegativo@paso2+1
  1075  000916  EC70  F008         	call	_ejexnegativo	;wreg free
  1076                           
  1077                           ;main.c: 172: apagarM1();
  1078  00091A  ECE9  F00C         	call	_apagarM1	;wreg free
  1079  00091E                     l3263:
  1080  00091E  FFFF               	dw	65535	; assembler added errata NOP
  1081                           
  1082                           ;main.c: 173: stepcont = 0;
  1083  000920  0E00               	movlw	0
  1084  000922  6E18               	movwf	_stepcont+1,c
  1085  000924  0E00               	movlw	0
  1086  000926  6E17               	movwf	_stepcont,c
  1087  000928  D7E9               	goto	l3253
  1088  00092A                     l3267:
  1089  00092A  FFFF               	dw	65535	; assembler added errata NOP
  1090                           
  1091                           ;main.c: 175: movimiento = 0;
  1092  00092C  0E00               	movlw	0
  1093  00092E  6E2A               	movwf	_movimiento+1,c
  1094  000930  0E00               	movlw	0
  1095  000932  6E29               	movwf	_movimiento,c
  1096  000934                     l3269:
  1097  000934  FFFF               	dw	65535	; assembler added errata NOP
  1098                           
  1099                           ;main.c: 176: }
  1100                           ;main.c: 177: }
  1101                           ;main.c: 178: if (ytrue == 0) {
  1102  000936  5055               	movf	_ytrue,w,c
  1103  000938  1056               	iorwf	_ytrue+1,w,c
  1104  00093A  A4D8               	btfss	status,2,c
  1105  00093C  D694               	goto	l3137
  1106                           
  1107                           ;main.c: 180: if (steps > 0) {
  1108  00093E  BE33               	btfsc	_steps+1,7,c
  1109  000940  D015               	goto	l3285
  1110  000942  5033               	movf	_steps+1,w,c
  1111  000944  E103               	bnz	u2700
  1112  000946  0432               	decf	_steps,w,c
  1113  000948  A0D8               	btfss	status,0,c
  1114  00094A  D010               	goto	l3285
  1115  00094C                     u2700:
  1116                           
  1117                           ;main.c: 181: __nop();
  1118  00094C  F000               	nop	
  1119                           
  1120                           ;main.c: 182: ejeypositivo(steps);
  1121  00094E  C032  F0FB         	movff	_steps,ejeypositivo@paso3
  1122  000952  C033  F0FC         	movff	_steps+1,ejeypositivo@paso3+1
  1123  000956  ECCD  F004         	call	_ejeypositivo	;wreg free
  1124                           
  1125                           ;main.c: 184: apagarM2();
  1126  00095A  ECDD  F00C         	call	_apagarM2	;wreg free
  1127  00095E  D011               	goto	l3291
  1128  000960                     l3281:
  1129  000960  FFFF               	dw	65535	; assembler added errata NOP
  1130                           
  1131                           ;main.c: 186: steps = 0;
  1132  000962  0E00               	movlw	0
  1133  000964  6E33               	movwf	_steps+1,c
  1134  000966  0E00               	movlw	0
  1135  000968  6E32               	movwf	_steps,c
  1136  00096A  D011               	goto	l3295
  1137  00096C                     l3285:
  1138  00096C  FFFF               	dw	65535	; assembler added errata NOP
  1139                           
  1140                           ;main.c: 189: else if (steps < 0) {
  1141  00096E  AE33               	btfss	_steps+1,7,c
  1142  000970  D67A               	goto	l3137
  1143                           
  1144                           ;main.c: 191: ejeynegativo(steps);
  1145  000972  C032  F0FB         	movff	_steps,ejeynegativo@paso4
  1146  000976  C033  F0FC         	movff	_steps+1,ejeynegativo@paso4+1
  1147  00097A  EC3D  F007         	call	_ejeynegativo	;wreg free
  1148                           
  1149                           ;main.c: 193: apagarM2();
  1150  00097E  ECDD  F00C         	call	_apagarM2	;wreg free
  1151  000982                     l3291:
  1152  000982  FFFF               	dw	65535	; assembler added errata NOP
  1153                           
  1154                           ;main.c: 194: stepcont = 0;
  1155  000984  0E00               	movlw	0
  1156  000986  6E18               	movwf	_stepcont+1,c
  1157  000988  0E00               	movlw	0
  1158  00098A  6E17               	movwf	_stepcont,c
  1159  00098C  D7E9               	goto	l3281
  1160  00098E                     l3295:
  1161  00098E  FFFF               	dw	65535	; assembler added errata NOP
  1162                           
  1163                           ;main.c: 196: movimiento = 0;
  1164  000990  0E00               	movlw	0
  1165  000992  6E2A               	movwf	_movimiento+1,c
  1166  000994  0E00               	movlw	0
  1167  000996  6E29               	movwf	_movimiento,c
  1168  000998  D666               	goto	l3137
  1169  00099A                     __end_of_main:
  1170                           	opt stack 0
  1171                           tblptru	equ	0xFF8
  1172                           tblptrh	equ	0xFF7
  1173                           tblptrl	equ	0xFF6
  1174                           tablat	equ	0xFF5
  1175                           postinc0	equ	0xFEE
  1176                           wreg	equ	0xFE8
  1177                           indf1	equ	0xFE7
  1178                           postdec1	equ	0xFE5
  1179                           fsr1h	equ	0xFE2
  1180                           fsr1l	equ	0xFE1
  1181                           indf2	equ	0xFDF
  1182                           postinc2	equ	0xFDE
  1183                           fsr2h	equ	0xFDA
  1184                           fsr2l	equ	0xFD9
  1185                           status	equ	0xFD8
  1186                           
  1187 ;; *************** function _stringtoint *****************
  1188 ;; Defined at:
  1189 ;;		line 230 in file "main.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  string          2    6[BANK0 ] PTR unsigned char 
  1192 ;;		 -> entrada(25), 
  1193 ;;  tamanio         2    8[BANK0 ] int 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  2    6[BANK0 ] int 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1205 ;;      Params:         0       4       0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0       0       0
  1207 ;;      Temps:          1       0       0       0       0       0       0
  1208 ;;      Totals:         1       4       0       0       0       0       0
  1209 ;;Total ram usage:        5 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    3
  1212 ;; This function calls:
  1213 ;;		___wmul
  1214 ;; This function is called by:
  1215 ;;		_main
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	text1
  1220  001620                     __ptext1:
  1221                           	opt stack 0
  1222  001620                     _stringtoint:
  1223                           	opt stack 0
  1224  001620  FFFF               	dw	65535	; assembler added errata NOP
  1225                           
  1226                           ;main.c: 231: h = 0;
  1227                           
  1228                           ;incstack = 0
  1229  001622  0E00               	movlw	0
  1230  001624  6E14               	movwf	_h+1,c
  1231  001626  0E00               	movlw	0
  1232  001628  6E13               	movwf	_h,c
  1233                           
  1234                           ;main.c: 232: o = 1;
  1235  00162A  0E00               	movlw	0
  1236  00162C  6E12               	movwf	_o+1,c
  1237  00162E  0E01               	movlw	1
  1238  001630  6E11               	movwf	_o,c
  1239                           
  1240                           ;main.c: 233: p = tamanio - 1;
  1241  001632  0EFF               	movlw	255
  1242  001634  0100               	movlb	0	; () banked
  1243  001636  25EA               	addwf	stringtoint@tamanio& (0+255),w,b
  1244  001638  6E0F               	movwf	_p,c
  1245  00163A  0EFF               	movlw	255
  1246  00163C  0100               	movlb	0	; () banked
  1247  00163E  21EB               	addwfc	(stringtoint@tamanio+1)& (0+255),w,b
  1248  001640  6E10               	movwf	_p+1,c
  1249                           
  1250                           ;main.c: 235: while (p >= 0) {
  1251  001642  D03A               	goto	l2773
  1252  001644                     l2763:
  1253  001644  FFFF               	dw	65535	; assembler added errata NOP
  1254                           
  1255                           ;main.c: 236: help = string[p] - '0';
  1256  001646  500F               	movf	_p,w,c
  1257  001648  0100               	movlb	0	; () banked
  1258  00164A  25E8               	addwf	stringtoint@string& (0+255),w,b
  1259  00164C  6ED9               	movwf	fsr2l,c
  1260  00164E  5010               	movf	_p+1,w,c
  1261  001650  0100               	movlb	0	; () banked
  1262  001652  21E9               	addwfc	(stringtoint@string+1)& (0+255),w,b
  1263  001654  6EDA               	movwf	fsr2h,c
  1264  001656  50DF               	movf	indf2,w,c
  1265  001658  6E54               	movwf	??_stringtoint& (0+255),c
  1266  00165A  0ED0               	movlw	208
  1267  00165C  2454               	addwf	??_stringtoint,w,c
  1268  00165E  6E0D               	movwf	_help,c
  1269  001660  6A0E               	clrf	_help+1,c
  1270  001662  0EFF               	movlw	255
  1271  001664  220E               	addwfc	_help+1,f,c
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;main.c: 237: help = help*o;
  1275  001666  C00D  F0E2         	movff	_help,___wmul@multiplier
  1276  00166A  C00E  F0E3         	movff	_help+1,___wmul@multiplier+1
  1277  00166E  C011  F0E4         	movff	_o,___wmul@multiplicand
  1278  001672  C012  F0E5         	movff	_o+1,___wmul@multiplicand+1
  1279  001676  ECC0  F00C         	call	___wmul	;wreg free
  1280  00167A  C0E2  F00D         	movff	?___wmul,_help
  1281  00167E  C0E3  F00E         	movff	?___wmul+1,_help+1
  1282                           
  1283                           ;main.c: 238: h = h + help;
  1284  001682  500D               	movf	_help,w,c
  1285  001684  2413               	addwf	_h,w,c
  1286  001686  6E13               	movwf	_h,c
  1287  001688  500E               	movf	_help+1,w,c
  1288  00168A  2014               	addwfc	_h+1,w,c
  1289  00168C  6E14               	movwf	_h+1,c
  1290                           
  1291                           ;main.c: 239: p = p - 1;
  1292  00168E  0EFF               	movlw	255
  1293  001690  240F               	addwf	_p,w,c
  1294  001692  6E0F               	movwf	_p,c
  1295  001694  0EFF               	movlw	255
  1296  001696  2010               	addwfc	_p+1,w,c
  1297  001698  6E10               	movwf	_p+1,c
  1298                           
  1299                           ;main.c: 240: o = o * 10;
  1300  00169A  C011  F0E2         	movff	_o,___wmul@multiplier
  1301  00169E  C012  F0E3         	movff	_o+1,___wmul@multiplier+1
  1302  0016A2  0E00               	movlw	0
  1303  0016A4  0100               	movlb	0	; () banked
  1304  0016A6  6FE5               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1305  0016A8  0E0A               	movlw	10
  1306  0016AA  6FE4               	movwf	___wmul@multiplicand& (0+255),b
  1307  0016AC  ECC0  F00C         	call	___wmul	;wreg free
  1308  0016B0  C0E2  F011         	movff	?___wmul,_o
  1309  0016B4  C0E3  F012         	movff	?___wmul+1,_o+1
  1310  0016B8                     l2773:
  1311  0016B8  FFFF               	dw	65535	; assembler added errata NOP
  1312  0016BA  AE10               	btfss	_p+1,7,c
  1313  0016BC  D7C3               	goto	l2763
  1314                           
  1315                           ;main.c: 241: }
  1316                           ;main.c: 242: return h;
  1317  0016BE  C013  F0E8         	movff	_h,?_stringtoint
  1318  0016C2  C014  F0E9         	movff	_h+1,?_stringtoint+1
  1319  0016C6  0012               	return		;funcret
  1320  0016C8  FFFF               	dw	65535	; errata NOP
  1321  0016CA                     __end_of_stringtoint:
  1322                           	opt stack 0
  1323                           tblptru	equ	0xFF8
  1324                           tblptrh	equ	0xFF7
  1325                           tblptrl	equ	0xFF6
  1326                           tablat	equ	0xFF5
  1327                           postinc0	equ	0xFEE
  1328                           wreg	equ	0xFE8
  1329                           indf1	equ	0xFE7
  1330                           postdec1	equ	0xFE5
  1331                           fsr1h	equ	0xFE2
  1332                           fsr1l	equ	0xFE1
  1333                           indf2	equ	0xFDF
  1334                           postinc2	equ	0xFDE
  1335                           fsr2h	equ	0xFDA
  1336                           fsr2l	equ	0xFD9
  1337                           status	equ	0xFD8
  1338                           
  1339 ;; *************** function ___wmul *****************
  1340 ;; Defined at:
  1341 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\Umul16.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1344 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  product         2    4[BANK0 ] unsigned int 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  2    0[BANK0 ] unsigned int 
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0, prodl, prodh
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1356 ;;      Params:         0       4       0       0       0       0       0
  1357 ;;      Locals:         0       2       0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0       0       0
  1359 ;;      Totals:         0       6       0       0       0       0       0
  1360 ;;Total ram usage:        6 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    2
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_stringtoint
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text2
  1371  001980                     __ptext2:
  1372                           	opt stack 0
  1373  001980                     ___wmul:
  1374                           	opt stack 0
  1375  001980  FFFF               	dw	65535	; assembler added errata NOP
  1376                           
  1377                           ;incstack = 0
  1378  001982  0100               	movlb	0	; () banked
  1379  001984  51E2               	movf	___wmul@multiplier& (0+255),w,b
  1380  001986  0100               	movlb	0	; () banked
  1381  001988  03E4               	mulwf	___wmul@multiplicand& (0+255),b
  1382  00198A  CFF3 F0E6          	movff	prodl,___wmul@product
  1383  00198E  CFF4 F0E7          	movff	prodh,___wmul@product+1
  1384  001992  0100               	movlb	0	; () banked
  1385  001994  51E2               	movf	___wmul@multiplier& (0+255),w,b
  1386  001996  0100               	movlb	0	; () banked
  1387  001998  03E5               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1388  00199A  50F3               	movf	prodl,w,c
  1389  00199C  0100               	movlb	0	; () banked
  1390  00199E  27E7               	addwf	(___wmul@product+1)& (0+255),f,b
  1391  0019A0  0100               	movlb	0	; () banked
  1392  0019A2  51E3               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1393  0019A4  0100               	movlb	0	; () banked
  1394  0019A6  03E4               	mulwf	___wmul@multiplicand& (0+255),b
  1395  0019A8  50F3               	movf	prodl,w,c
  1396  0019AA  0100               	movlb	0	; () banked
  1397  0019AC  27E7               	addwf	(___wmul@product+1)& (0+255),f,b
  1398                           
  1399                           ; BSR set to: 0
  1400  0019AE  C0E6  F0E2         	movff	___wmul@product,?___wmul
  1401  0019B2  C0E7  F0E3         	movff	___wmul@product+1,?___wmul+1
  1402                           
  1403                           ; BSR set to: 0
  1404                           
  1405                           ; BSR set to: 0
  1406  0019B6  0012               	return		;funcret
  1407  0019B8  FFFF               	dw	65535	; errata NOP
  1408  0019BA                     __end_of___wmul:
  1409                           	opt stack 0
  1410                           tblptru	equ	0xFF8
  1411                           tblptrh	equ	0xFF7
  1412                           tblptrl	equ	0xFF6
  1413                           tablat	equ	0xFF5
  1414                           prodh	equ	0xFF4
  1415                           prodl	equ	0xFF3
  1416                           postinc0	equ	0xFEE
  1417                           wreg	equ	0xFE8
  1418                           indf1	equ	0xFE7
  1419                           postdec1	equ	0xFE5
  1420                           fsr1h	equ	0xFE2
  1421                           fsr1l	equ	0xFE1
  1422                           indf2	equ	0xFDF
  1423                           postinc2	equ	0xFDE
  1424                           fsr2h	equ	0xFDA
  1425                           fsr2l	equ	0xFD9
  1426                           status	equ	0xFD8
  1427                           
  1428 ;; *************** function _strcmp *****************
  1429 ;; Defined at:
  1430 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\strcmp.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
  1433 ;;		 -> tam(20), 
  1434 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
  1435 ;;		 -> movery(7), moverx(7), 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  r               1    4[BANK0 ] char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  2    0[BANK0 ] int 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1447 ;;      Params:         0       4       0       0       0       0       0
  1448 ;;      Locals:         0       1       0       0       0       0       0
  1449 ;;      Temps:          1       0       0       0       0       0       0
  1450 ;;      Totals:         1       5       0       0       0       0       0
  1451 ;;Total ram usage:        6 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    2
  1454 ;; This function calls:
  1455 ;;		Nothing
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461                           	psect	text3
  1462  001834                     __ptext3:
  1463                           	opt stack 0
  1464  001834                     _strcmp:
  1465                           	opt stack 0
  1466  001834  FFFF               	dw	65535	; assembler added errata NOP
  1467                           
  1468                           ; BSR set to: 0
  1469                           ;incstack = 0
  1470  001836  D007               	goto	l2751
  1471  001838                     l2749:
  1472  001838  FFFF               	dw	65535	; assembler added errata NOP
  1473  00183A  0100               	movlb	0	; () banked
  1474  00183C  4BE2               	infsnz	strcmp@s1& (0+255),f,b
  1475  00183E  2BE3               	incf	(strcmp@s1+1)& (0+255),f,b
  1476  001840  0100               	movlb	0	; () banked
  1477  001842  4BE4               	infsnz	strcmp@s2& (0+255),f,b
  1478  001844  2BE5               	incf	(strcmp@s2+1)& (0+255),f,b
  1479  001846                     l2751:
  1480  001846  FFFF               	dw	65535	; assembler added errata NOP
  1481  001848  C0E2  FFD9         	movff	strcmp@s1,fsr2l
  1482  00184C  C0E3  FFDA         	movff	strcmp@s1+1,fsr2h
  1483  001850  50DF               	movf	indf2,w,c
  1484  001852  6E54               	movwf	??_strcmp& (0+255),c
  1485  001854  C0E4  FFF6         	movff	strcmp@s2,tblptrl
  1486  001858  C0E5  FFF7         	movff	strcmp@s2+1,tblptrh
  1487  00185C                     	if	0	;tblptru may be non-zero
  1488  00185C                     	endif
  1489  00185C                     	if	0	;tblptru may be non-zero
  1490  00185C                     	endif
  1491  00185C  0008               	tblrd		*
  1492  00185E  FFFF               	dw	65535	; errata NOP
  1493  001860  50F5               	movf	tablat,w,c
  1494  001862  0800               	sublw	0
  1495  001864  2454               	addwf	??_strcmp,w,c
  1496  001866  0100               	movlb	0	; () banked
  1497  001868  6FE6               	movwf	strcmp@r& (0+255),b
  1498  00186A  0100               	movlb	0	; () banked
  1499  00186C  51E6               	movf	strcmp@r& (0+255),w,b
  1500  00186E  A4D8               	btfss	status,2,c
  1501  001870  D007               	goto	l2755
  1502                           
  1503                           ; BSR set to: 0
  1504  001872  C0E2  FFD9         	movff	strcmp@s1,fsr2l
  1505  001876  C0E3  FFDA         	movff	strcmp@s1+1,fsr2h
  1506  00187A  50DF               	movf	indf2,w,c
  1507  00187C  A4D8               	btfss	status,2,c
  1508  00187E  D7DC               	goto	l2749
  1509  001880                     l2755:
  1510  001880  FFFF               	dw	65535	; assembler added errata NOP
  1511                           
  1512                           ; BSR set to: 0
  1513  001882  0100               	movlb	0	; () banked
  1514  001884  51E6               	movf	strcmp@r& (0+255),w,b
  1515  001886  0100               	movlb	0	; () banked
  1516  001888  6FE2               	movwf	?_strcmp& (0+255),b
  1517  00188A  6BE3               	clrf	(?_strcmp+1)& (0+255),b
  1518  00188C  BFE2               	btfsc	?_strcmp& (0+255),7,b
  1519  00188E  07E3               	decf	(?_strcmp+1)& (0+255),f,b
  1520                           
  1521                           ; BSR set to: 0
  1522                           
  1523                           ; BSR set to: 0
  1524  001890  0012               	return		;funcret
  1525  001892  FFFF               	dw	65535	; errata NOP
  1526  001894                     __end_of_strcmp:
  1527                           	opt stack 0
  1528                           tblptru	equ	0xFF8
  1529                           tblptrh	equ	0xFF7
  1530                           tblptrl	equ	0xFF6
  1531                           tablat	equ	0xFF5
  1532                           prodh	equ	0xFF4
  1533                           prodl	equ	0xFF3
  1534                           postinc0	equ	0xFEE
  1535                           wreg	equ	0xFE8
  1536                           indf1	equ	0xFE7
  1537                           postdec1	equ	0xFE5
  1538                           fsr1h	equ	0xFE2
  1539                           fsr1l	equ	0xFE1
  1540                           indf2	equ	0xFDF
  1541                           postinc2	equ	0xFDE
  1542                           fsr2h	equ	0xFDA
  1543                           fsr2l	equ	0xFD9
  1544                           status	equ	0xFD8
  1545                           
  1546 ;; *************** function _ledestado *****************
  1547 ;; Defined at:
  1548 ;;		line 221 in file "main.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  tiempoled       2    0[BANK0 ] int 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1562 ;;      Params:         0       2       0       0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0       0       0
  1564 ;;      Temps:          1       0       0       0       0       0       0
  1565 ;;      Totals:         1       2       0       0       0       0       0
  1566 ;;Total ram usage:        3 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    2
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text4
  1577  001894                     __ptext4:
  1578                           	opt stack 0
  1579  001894                     _ledestado:
  1580                           	opt stack 0
  1581  001894  FFFF               	dw	65535	; assembler added errata NOP
  1582                           
  1583                           ;main.c: 222: cont_led++;
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;incstack = 0
  1587  001896  4A1B               	infsnz	_cont_led,f,c
  1588  001898  2A1C               	incf	_cont_led+1,f,c
  1589                           
  1590                           ;main.c: 223: if (cont_led >= tiempoled) {
  1591  00189A  0100               	movlb	0	; () banked
  1592  00189C  51E2               	movf	ledestado@tiempoled& (0+255),w,b
  1593  00189E  5C1B               	subwf	_cont_led,w,c
  1594  0018A0  501C               	movf	_cont_led+1,w,c
  1595  0018A2  0A80               	xorlw	128
  1596  0018A4  6E54               	movwf	??_ledestado& (0+255),c
  1597  0018A6  0100               	movlb	0	; () banked
  1598  0018A8  51E3               	movf	(ledestado@tiempoled+1)& (0+255),w,b
  1599  0018AA  0A80               	xorlw	128
  1600  0018AC  5854               	subwfb	??_ledestado& (0+255),w,c
  1601  0018AE  A0D8               	btfss	status,0,c
  1602  0018B0  D014               	goto	l2745
  1603                           
  1604                           ; BSR set to: 0
  1605                           ;main.c: 224: LATBbits.LB7 = ~PORTBbits.RB7;
  1606  0018B2  AE81               	btfss	3969,7,c	;volatile
  1607  0018B4  D002               	goto	u2080
  1608  0018B6  0E01               	movlw	1
  1609  0018B8  D002               	goto	u2086
  1610  0018BA                     u2080:
  1611  0018BA  FFFF               	dw	65535	; assembler added errata NOP
  1612  0018BC  0E00               	movlw	0
  1613  0018BE                     u2086:
  1614  0018BE  FFFF               	dw	65535	; assembler added errata NOP
  1615  0018C0  0AFF               	xorlw	255
  1616  0018C2  6E54               	movwf	??_ledestado& (0+255),c
  1617  0018C4  3254               	rrcf	??_ledestado,f,c
  1618  0018C6  3254               	rrcf	??_ledestado,f,c
  1619  0018C8  508A               	movf	3978,w,c	;volatile
  1620  0018CA  1854               	xorwf	??_ledestado,w,c
  1621  0018CC  0B7F               	andlw	-129
  1622  0018CE  1854               	xorwf	??_ledestado,w,c
  1623  0018D0  6E8A               	movwf	3978,c	;volatile
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;main.c: 225: cont_led = 0;
  1627  0018D2  0E00               	movlw	0
  1628  0018D4  6E1C               	movwf	_cont_led+1,c
  1629  0018D6  0E00               	movlw	0
  1630  0018D8  6E1B               	movwf	_cont_led,c
  1631  0018DA                     l2745:
  1632  0018DA  FFFF               	dw	65535	; assembler added errata NOP
  1633                           
  1634                           ; BSR set to: 0
  1635                           ;main.c: 226: }
  1636                           ;main.c: 227: led = 0;
  1637  0018DC  0E00               	movlw	0
  1638  0018DE  6E2C               	movwf	_led+1,c
  1639  0018E0  0E00               	movlw	0
  1640  0018E2  6E2B               	movwf	_led,c
  1641                           
  1642                           ; BSR set to: 0
  1643  0018E4  0012               	return		;funcret
  1644  0018E6  FFFF               	dw	65535	; errata NOP
  1645  0018E8                     __end_of_ledestado:
  1646                           	opt stack 0
  1647                           tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           prodh	equ	0xFF4
  1652                           prodl	equ	0xFF3
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           indf1	equ	0xFE7
  1656                           postdec1	equ	0xFE5
  1657                           fsr1h	equ	0xFE2
  1658                           fsr1l	equ	0xFE1
  1659                           indf2	equ	0xFDF
  1660                           postinc2	equ	0xFDE
  1661                           fsr2h	equ	0xFDA
  1662                           fsr2l	equ	0xFD9
  1663                           status	equ	0xFD8
  1664                           
  1665 ;; *************** function _ejeypositivo *****************
  1666 ;; Defined at:
  1667 ;;		line 388 in file "main.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  paso3           2   25[BANK0 ] int 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1681 ;;      Params:         0       2       0       0       0       0       0
  1682 ;;      Locals:         0       0       0       0       0       0       0
  1683 ;;      Temps:          0       2       0       0       0       0       0
  1684 ;;      Totals:         0       4       0       0       0       0       0
  1685 ;;Total ram usage:        4 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    4
  1688 ;; This function calls:
  1689 ;;		_enviarTrama
  1690 ;;		_sprintf
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text5
  1697  00099A                     __ptext5:
  1698                           	opt stack 0
  1699  00099A                     _ejeypositivo:
  1700                           	opt stack 0
  1701  00099A  FFFF               	dw	65535	; assembler added errata NOP
  1702                           
  1703                           ;main.c: 389: while (stepcont <= paso3) {
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;incstack = 0
  1707  00099C  D124               	goto	l3035
  1708  00099E                     l2955:
  1709  00099E  FFFF               	dw	65535	; assembler added errata NOP
  1710                           
  1711                           ;main.c: 390: movimiento = 1 ;
  1712  0009A0  0E00               	movlw	0
  1713  0009A2  6E2A               	movwf	_movimiento+1,c
  1714  0009A4  0E01               	movlw	1
  1715  0009A6  6E29               	movwf	_movimiento,c
  1716                           
  1717                           ;main.c: 391: if (actualstep > 7) {
  1718  0009A8  BE16               	btfsc	_actualstep+1,7,c
  1719  0009AA  D00A               	goto	l2961
  1720  0009AC  5016               	movf	_actualstep+1,w,c
  1721  0009AE  E104               	bnz	u2320
  1722  0009B0  0E08               	movlw	8
  1723  0009B2  5C15               	subwf	_actualstep,w,c
  1724  0009B4  A0D8               	btfss	status,0,c
  1725  0009B6  D004               	goto	l2961
  1726  0009B8                     u2320:
  1727                           
  1728                           ;main.c: 392: actualstep = 0;
  1729  0009B8  0E00               	movlw	0
  1730  0009BA  6E16               	movwf	_actualstep+1,c
  1731  0009BC  0E00               	movlw	0
  1732  0009BE  6E15               	movwf	_actualstep,c
  1733  0009C0                     l2961:
  1734  0009C0  FFFF               	dw	65535	; assembler added errata NOP
  1735                           
  1736                           ;main.c: 393: }
  1737                           ;main.c: 394: sprintf(salida, "stepcount : %d ", stepcont);
  1738  0009C2  0E9C               	movlw	low _salida
  1739  0009C4  0100               	movlb	0	; () banked
  1740  0009C6  6FED               	movwf	sprintf@sp& (0+255),b
  1741  0009C8  0E00               	movlw	high _salida
  1742  0009CA  0100               	movlb	0	; () banked
  1743  0009CC  6FEE               	movwf	(sprintf@sp+1)& (0+255),b
  1744  0009CE  0E3A               	movlw	low STR_1
  1745  0009D0  0100               	movlb	0	; () banked
  1746  0009D2  6FEF               	movwf	sprintf@f& (0+255),b
  1747  0009D4  0E06               	movlw	high STR_1
  1748  0009D6  0100               	movlb	0	; () banked
  1749  0009D8  6FF0               	movwf	(sprintf@f+1)& (0+255),b
  1750  0009DA  C017  F0F1         	movff	_stepcont,?_sprintf+4
  1751  0009DE  C018  F0F2         	movff	_stepcont+1,?_sprintf+5
  1752  0009E2  ECA3  F009         	call	_sprintf	;wreg free
  1753                           
  1754                           ;main.c: 395: enviarTrama(salida);
  1755  0009E6  0E9C               	movlw	low _salida
  1756  0009E8  0100               	movlb	0	; () banked
  1757  0009EA  6FE2               	movwf	enviarTrama@datos& (0+255),b
  1758  0009EC  0E00               	movlw	high _salida
  1759  0009EE  0100               	movlb	0	; () banked
  1760  0009F0  6FE3               	movwf	(enviarTrama@datos+1)& (0+255),b
  1761  0009F2  ECA8  F00B         	call	_enviarTrama	;wreg free
  1762                           
  1763                           ;main.c: 397: switch (actualstep) {
  1764  0009F6  D0D3               	goto	l3033
  1765  0009F8                     l2965:
  1766  0009F8  FFFF               	dw	65535	; assembler added errata NOP
  1767                           
  1768                           ;main.c: 399: LATB = 0b0001;
  1769  0009FA  0E01               	movlw	1
  1770  0009FC  6E8A               	movwf	3978,c	;volatile
  1771                           
  1772                           ;main.c: 400: for (i = 0; i <= vel; i++);
  1773  0009FE  0E00               	movlw	0
  1774  000A00  6E06               	movwf	_i+1,c
  1775  000A02  0E00               	movlw	0
  1776  000A04  6E05               	movwf	_i,c
  1777  000A06  D003               	goto	l2969
  1778  000A08                     l2967:
  1779  000A08  FFFF               	dw	65535	; assembler added errata NOP
  1780  000A0A  4A05               	infsnz	_i,f,c
  1781  000A0C  2A06               	incf	_i+1,f,c
  1782  000A0E                     l2969:
  1783  000A0E  FFFF               	dw	65535	; assembler added errata NOP
  1784  000A10  5005               	movf	_i,w,c
  1785  000A12  5C5B               	subwf	_vel,w,c
  1786  000A14  505C               	movf	_vel+1,w,c
  1787  000A16  0A80               	xorlw	128
  1788  000A18  0100               	movlb	0	; () banked
  1789  000A1A  6FFD               	movwf	??_ejeypositivo& (0+255),b
  1790  000A1C  5006               	movf	_i+1,w,c
  1791  000A1E  0A80               	xorlw	128
  1792  000A20  0100               	movlb	0	; () banked
  1793  000A22  59FD               	subwfb	??_ejeypositivo& (0+255),w,b
  1794  000A24  B0D8               	btfsc	status,0,c
  1795  000A26  D7F0               	goto	l2967
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;main.c: 401: __nop();
  1799  000A28  F000               	nop	
  1800                           
  1801                           ;main.c: 402: stepcont++;
  1802  000A2A  4A17               	infsnz	_stepcont,f,c
  1803  000A2C  2A18               	incf	_stepcont+1,f,c
  1804                           
  1805                           ;main.c: 403: __nop();
  1806  000A2E  F000               	nop	
  1807  000A30  D019               	goto	L1
  1808  000A32                     l2975:
  1809  000A32  FFFF               	dw	65535	; assembler added errata NOP
  1810                           
  1811                           ;main.c: 407: LATB = 0b0011;
  1812  000A34  0E03               	movlw	3
  1813  000A36  6E8A               	movwf	3978,c	;volatile
  1814                           
  1815                           ;main.c: 408: for (i = 0; i <= vel; i++);
  1816  000A38  0E00               	movlw	0
  1817  000A3A  6E06               	movwf	_i+1,c
  1818  000A3C  0E00               	movlw	0
  1819  000A3E  6E05               	movwf	_i,c
  1820  000A40  D003               	goto	l2979
  1821  000A42                     l2977:
  1822  000A42  FFFF               	dw	65535	; assembler added errata NOP
  1823  000A44  4A05               	infsnz	_i,f,c
  1824  000A46  2A06               	incf	_i+1,f,c
  1825  000A48                     l2979:
  1826  000A48  FFFF               	dw	65535	; assembler added errata NOP
  1827  000A4A  5005               	movf	_i,w,c
  1828  000A4C  5C5B               	subwf	_vel,w,c
  1829  000A4E  505C               	movf	_vel+1,w,c
  1830  000A50  0A80               	xorlw	128
  1831  000A52  0100               	movlb	0	; () banked
  1832  000A54  6FFD               	movwf	??_ejeypositivo& (0+255),b
  1833  000A56  5006               	movf	_i+1,w,c
  1834  000A58  0A80               	xorlw	128
  1835  000A5A  0100               	movlb	0	; () banked
  1836  000A5C  59FD               	subwfb	??_ejeypositivo& (0+255),w,b
  1837  000A5E  A0D8               	btfss	status,0,c
  1838  000A60  D09A               	goto	l3029
  1839  000A62  D7EF               	goto	l2977
  1840  000A64                     L1:
  1841  000A64  FFFF               	dw	65535	; assembler added errata NOP
  1842                           
  1843                           ;main.c: 410: actualstep++;
  1844  000A66  4A15               	infsnz	_actualstep,f,c
  1845  000A68  2A16               	incf	_actualstep+1,f,c
  1846                           
  1847                           ;main.c: 411: break;
  1848  000A6A  D0BD               	goto	l3035
  1849  000A6C                     l2983:
  1850  000A6C  FFFF               	dw	65535	; assembler added errata NOP
  1851                           
  1852                           ; BSR set to: 0
  1853                           ;main.c: 413: LATB = 0b0010;
  1854  000A6E  0E02               	movlw	2
  1855  000A70  6E8A               	movwf	3978,c	;volatile
  1856                           
  1857                           ;main.c: 414: for (i = 0; i <= vel; i++);
  1858  000A72  0E00               	movlw	0
  1859  000A74  6E06               	movwf	_i+1,c
  1860  000A76  0E00               	movlw	0
  1861  000A78  6E05               	movwf	_i,c
  1862  000A7A  D003               	goto	l2987
  1863  000A7C                     l2985:
  1864  000A7C  FFFF               	dw	65535	; assembler added errata NOP
  1865                           
  1866                           ; BSR set to: 0
  1867  000A7E  4A05               	infsnz	_i,f,c
  1868  000A80  2A06               	incf	_i+1,f,c
  1869  000A82                     l2987:
  1870  000A82  FFFF               	dw	65535	; assembler added errata NOP
  1871                           
  1872                           ; BSR set to: 0
  1873  000A84  5005               	movf	_i,w,c
  1874  000A86  5C5B               	subwf	_vel,w,c
  1875  000A88  505C               	movf	_vel+1,w,c
  1876  000A8A  0A80               	xorlw	128
  1877  000A8C  0100               	movlb	0	; () banked
  1878  000A8E  6FFD               	movwf	??_ejeypositivo& (0+255),b
  1879  000A90  5006               	movf	_i+1,w,c
  1880  000A92  0A80               	xorlw	128
  1881  000A94  0100               	movlb	0	; () banked
  1882  000A96  59FD               	subwfb	??_ejeypositivo& (0+255),w,b
  1883  000A98  A0D8               	btfss	status,0,c
  1884  000A9A  D07D               	goto	l3029
  1885  000A9C  D7EF               	goto	l2985
  1886  000A9E                     l2991:
  1887  000A9E  FFFF               	dw	65535	; assembler added errata NOP
  1888                           
  1889                           ; BSR set to: 0
  1890                           ;main.c: 419: LATB = 0b0110;
  1891  000AA0  0E06               	movlw	6
  1892  000AA2  6E8A               	movwf	3978,c	;volatile
  1893                           
  1894                           ;main.c: 420: for (i = 0; i <= vel; i++);
  1895  000AA4  0E00               	movlw	0
  1896  000AA6  6E06               	movwf	_i+1,c
  1897  000AA8  0E00               	movlw	0
  1898  000AAA  6E05               	movwf	_i,c
  1899  000AAC  D003               	goto	l2995
  1900  000AAE                     l2993:
  1901  000AAE  FFFF               	dw	65535	; assembler added errata NOP
  1902                           
  1903                           ; BSR set to: 0
  1904  000AB0  4A05               	infsnz	_i,f,c
  1905  000AB2  2A06               	incf	_i+1,f,c
  1906  000AB4                     l2995:
  1907  000AB4  FFFF               	dw	65535	; assembler added errata NOP
  1908                           
  1909                           ; BSR set to: 0
  1910  000AB6  5005               	movf	_i,w,c
  1911  000AB8  5C5B               	subwf	_vel,w,c
  1912  000ABA  505C               	movf	_vel+1,w,c
  1913  000ABC  0A80               	xorlw	128
  1914  000ABE  0100               	movlb	0	; () banked
  1915  000AC0  6FFD               	movwf	??_ejeypositivo& (0+255),b
  1916  000AC2  5006               	movf	_i+1,w,c
  1917  000AC4  0A80               	xorlw	128
  1918  000AC6  0100               	movlb	0	; () banked
  1919  000AC8  59FD               	subwfb	??_ejeypositivo& (0+255),w,b
  1920  000ACA  A0D8               	btfss	status,0,c
  1921  000ACC  D064               	goto	l3029
  1922  000ACE  D7EF               	goto	l2993
  1923  000AD0                     l2999:
  1924  000AD0  FFFF               	dw	65535	; assembler added errata NOP
  1925                           
  1926                           ; BSR set to: 0
  1927                           ;main.c: 425: LATB = 0b0100;
  1928  000AD2  0E04               	movlw	4
  1929  000AD4  6E8A               	movwf	3978,c	;volatile
  1930                           
  1931                           ;main.c: 426: for (i = 0; i <= vel; i++);
  1932  000AD6  0E00               	movlw	0
  1933  000AD8  6E06               	movwf	_i+1,c
  1934  000ADA  0E00               	movlw	0
  1935  000ADC  6E05               	movwf	_i,c
  1936  000ADE  D003               	goto	l3003
  1937  000AE0                     l3001:
  1938  000AE0  FFFF               	dw	65535	; assembler added errata NOP
  1939                           
  1940                           ; BSR set to: 0
  1941  000AE2  4A05               	infsnz	_i,f,c
  1942  000AE4  2A06               	incf	_i+1,f,c
  1943  000AE6                     l3003:
  1944  000AE6  FFFF               	dw	65535	; assembler added errata NOP
  1945                           
  1946                           ; BSR set to: 0
  1947  000AE8  5005               	movf	_i,w,c
  1948  000AEA  5C5B               	subwf	_vel,w,c
  1949  000AEC  505C               	movf	_vel+1,w,c
  1950  000AEE  0A80               	xorlw	128
  1951  000AF0  0100               	movlb	0	; () banked
  1952  000AF2  6FFD               	movwf	??_ejeypositivo& (0+255),b
  1953  000AF4  5006               	movf	_i+1,w,c
  1954  000AF6  0A80               	xorlw	128
  1955  000AF8  0100               	movlb	0	; () banked
  1956  000AFA  59FD               	subwfb	??_ejeypositivo& (0+255),w,b
  1957  000AFC  A0D8               	btfss	status,0,c
  1958  000AFE  D04B               	goto	l3029
  1959  000B00  D7EF               	goto	l3001
  1960  000B02                     l3007:
  1961  000B02  FFFF               	dw	65535	; assembler added errata NOP
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;main.c: 431: LATB = 0b1100;
  1965  000B04  0E0C               	movlw	12
  1966  000B06  6E8A               	movwf	3978,c	;volatile
  1967                           
  1968                           ;main.c: 432: for (i = 0; i <= vel; i++);
  1969  000B08  0E00               	movlw	0
  1970  000B0A  6E06               	movwf	_i+1,c
  1971  000B0C  0E00               	movlw	0
  1972  000B0E  6E05               	movwf	_i,c
  1973  000B10  D003               	goto	l3011
  1974  000B12                     l3009:
  1975  000B12  FFFF               	dw	65535	; assembler added errata NOP
  1976                           
  1977                           ; BSR set to: 0
  1978  000B14  4A05               	infsnz	_i,f,c
  1979  000B16  2A06               	incf	_i+1,f,c
  1980  000B18                     l3011:
  1981  000B18  FFFF               	dw	65535	; assembler added errata NOP
  1982                           
  1983                           ; BSR set to: 0
  1984  000B1A  5005               	movf	_i,w,c
  1985  000B1C  5C5B               	subwf	_vel,w,c
  1986  000B1E  505C               	movf	_vel+1,w,c
  1987  000B20  0A80               	xorlw	128
  1988  000B22  0100               	movlb	0	; () banked
  1989  000B24  6FFD               	movwf	??_ejeypositivo& (0+255),b
  1990  000B26  5006               	movf	_i+1,w,c
  1991  000B28  0A80               	xorlw	128
  1992  000B2A  0100               	movlb	0	; () banked
  1993  000B2C  59FD               	subwfb	??_ejeypositivo& (0+255),w,b
  1994  000B2E  A0D8               	btfss	status,0,c
  1995  000B30  D032               	goto	l3029
  1996  000B32  D7EF               	goto	l3009
  1997  000B34                     l3015:
  1998  000B34  FFFF               	dw	65535	; assembler added errata NOP
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;main.c: 438: LATB = 0b1000;
  2002  000B36  0E08               	movlw	8
  2003  000B38  6E8A               	movwf	3978,c	;volatile
  2004                           
  2005                           ;main.c: 439: for (i = 0; i <= vel; i++);
  2006  000B3A  0E00               	movlw	0
  2007  000B3C  6E06               	movwf	_i+1,c
  2008  000B3E  0E00               	movlw	0
  2009  000B40  6E05               	movwf	_i,c
  2010  000B42  D003               	goto	l3019
  2011  000B44                     l3017:
  2012  000B44  FFFF               	dw	65535	; assembler added errata NOP
  2013                           
  2014                           ; BSR set to: 0
  2015  000B46  4A05               	infsnz	_i,f,c
  2016  000B48  2A06               	incf	_i+1,f,c
  2017  000B4A                     l3019:
  2018  000B4A  FFFF               	dw	65535	; assembler added errata NOP
  2019                           
  2020                           ; BSR set to: 0
  2021  000B4C  5005               	movf	_i,w,c
  2022  000B4E  5C5B               	subwf	_vel,w,c
  2023  000B50  505C               	movf	_vel+1,w,c
  2024  000B52  0A80               	xorlw	128
  2025  000B54  0100               	movlb	0	; () banked
  2026  000B56  6FFD               	movwf	??_ejeypositivo& (0+255),b
  2027  000B58  5006               	movf	_i+1,w,c
  2028  000B5A  0A80               	xorlw	128
  2029  000B5C  0100               	movlb	0	; () banked
  2030  000B5E  59FD               	subwfb	??_ejeypositivo& (0+255),w,b
  2031  000B60  A0D8               	btfss	status,0,c
  2032  000B62  D019               	goto	l3029
  2033  000B64  D7EF               	goto	l3017
  2034  000B66                     l3023:
  2035  000B66  FFFF               	dw	65535	; assembler added errata NOP
  2036                           
  2037                           ; BSR set to: 0
  2038                           ;main.c: 444: LATB = 0b1001;
  2039  000B68  0E09               	movlw	9
  2040  000B6A  6E8A               	movwf	3978,c	;volatile
  2041                           
  2042                           ;main.c: 445: for (i = 0; i <= vel; i++);
  2043  000B6C  0E00               	movlw	0
  2044  000B6E  6E06               	movwf	_i+1,c
  2045  000B70  0E00               	movlw	0
  2046  000B72  6E05               	movwf	_i,c
  2047  000B74  D003               	goto	l3027
  2048  000B76                     l3025:
  2049  000B76  FFFF               	dw	65535	; assembler added errata NOP
  2050                           
  2051                           ; BSR set to: 0
  2052  000B78  4A05               	infsnz	_i,f,c
  2053  000B7A  2A06               	incf	_i+1,f,c
  2054  000B7C                     l3027:
  2055  000B7C  FFFF               	dw	65535	; assembler added errata NOP
  2056                           
  2057                           ; BSR set to: 0
  2058  000B7E  5005               	movf	_i,w,c
  2059  000B80  5C5B               	subwf	_vel,w,c
  2060  000B82  505C               	movf	_vel+1,w,c
  2061  000B84  0A80               	xorlw	128
  2062  000B86  0100               	movlb	0	; () banked
  2063  000B88  6FFD               	movwf	??_ejeypositivo& (0+255),b
  2064  000B8A  5006               	movf	_i+1,w,c
  2065  000B8C  0A80               	xorlw	128
  2066  000B8E  0100               	movlb	0	; () banked
  2067  000B90  59FD               	subwfb	??_ejeypositivo& (0+255),w,b
  2068  000B92  B0D8               	btfsc	status,0,c
  2069  000B94  D7F0               	goto	l3025
  2070  000B96                     l3029:
  2071  000B96  FFFF               	dw	65535	; assembler added errata NOP
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;main.c: 446: stepcont++;
  2075  000B98  4A17               	infsnz	_stepcont,f,c
  2076  000B9A  2A18               	incf	_stepcont+1,f,c
  2077  000B9C  D763               	goto	L1
  2078  000B9E                     l3033:
  2079  000B9E  FFFF               	dw	65535	; assembler added errata NOP
  2080  000BA0  C015  F0FD         	movff	_actualstep,??_ejeypositivo
  2081  000BA4  C016  F0FE         	movff	_actualstep+1,??_ejeypositivo+1
  2082                           
  2083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2084                           ; Switch size 1, requested type "space"
  2085                           ; Number of cases is 1, Range of values is 0 to 0
  2086                           ; switch strategies available:
  2087                           ; Name         Instructions Cycles
  2088                           ; simple_byte            4     3 (average)
  2089                           ;	Chosen strategy is simple_byte
  2090  000BA8  0100               	movlb	0	; () banked
  2091  000BAA  51FE               	movf	(??_ejeypositivo+1)& (0+255),w,b
  2092  000BAC  0A00               	xorlw	0	; case 0
  2093  000BAE  A4D8               	btfss	status,2,c
  2094  000BB0  D01A               	goto	l3035
  2095                           
  2096                           ; BSR set to: 0
  2097                           ; Switch size 1, requested type "space"
  2098                           ; Number of cases is 8, Range of values is 0 to 7
  2099                           ; switch strategies available:
  2100                           ; Name         Instructions Cycles
  2101                           ; simple_byte           25    13 (average)
  2102                           ;	Chosen strategy is simple_byte
  2103  000BB2  0100               	movlb	0	; () banked
  2104  000BB4  51FD               	movf	??_ejeypositivo& (0+255),w,b
  2105  000BB6  0A00               	xorlw	0	; case 0
  2106  000BB8  B4D8               	btfsc	status,2,c
  2107  000BBA  D71E               	goto	l2965
  2108  000BBC  0A01               	xorlw	1	; case 1
  2109  000BBE  B4D8               	btfsc	status,2,c
  2110  000BC0  D738               	goto	l2975
  2111  000BC2  0A03               	xorlw	3	; case 2
  2112  000BC4  B4D8               	btfsc	status,2,c
  2113  000BC6  D752               	goto	l2983
  2114  000BC8  0A01               	xorlw	1	; case 3
  2115  000BCA  B4D8               	btfsc	status,2,c
  2116  000BCC  D768               	goto	l2991
  2117  000BCE  0A07               	xorlw	7	; case 4
  2118  000BD0  B4D8               	btfsc	status,2,c
  2119  000BD2  D77E               	goto	l2999
  2120  000BD4  0A01               	xorlw	1	; case 5
  2121  000BD6  B4D8               	btfsc	status,2,c
  2122  000BD8  D794               	goto	l3007
  2123  000BDA  0A03               	xorlw	3	; case 6
  2124  000BDC  B4D8               	btfsc	status,2,c
  2125  000BDE  D7AA               	goto	l3015
  2126  000BE0  0A01               	xorlw	1	; case 7
  2127  000BE2  B4D8               	btfsc	status,2,c
  2128  000BE4  D7C0               	goto	l3023
  2129  000BE6                     l3035:
  2130  000BE6  FFFF               	dw	65535	; assembler added errata NOP
  2131  000BE8  5017               	movf	_stepcont,w,c
  2132  000BEA  0100               	movlb	0	; () banked
  2133  000BEC  5DFB               	subwf	ejeypositivo@paso3& (0+255),w,b
  2134  000BEE  0100               	movlb	0	; () banked
  2135  000BF0  51FC               	movf	(ejeypositivo@paso3+1)& (0+255),w,b
  2136  000BF2  0A80               	xorlw	128
  2137  000BF4  0100               	movlb	0	; () banked
  2138  000BF6  6FFD               	movwf	??_ejeypositivo& (0+255),b
  2139  000BF8  5018               	movf	_stepcont+1,w,c
  2140  000BFA  0A80               	xorlw	128
  2141  000BFC  0100               	movlb	0	; () banked
  2142  000BFE  59FD               	subwfb	??_ejeypositivo& (0+255),w,b
  2143  000C00  A0D8               	btfss	status,0,c
  2144                           
  2145                           ; BSR set to: 0
  2146                           
  2147                           ; BSR set to: 0
  2148  000C02  0012               	return		;funcret
  2149  000C04  FFFF               	dw	65535	; assembler added errata NOP
  2150  000C06  D6CB               	goto	l2955
  2151  000C08  FFFF               	dw	65535	; errata NOP
  2152  000C0A                     __end_of_ejeypositivo:
  2153                           	opt stack 0
  2154                           tblptru	equ	0xFF8
  2155                           tblptrh	equ	0xFF7
  2156                           tblptrl	equ	0xFF6
  2157                           tablat	equ	0xFF5
  2158                           prodh	equ	0xFF4
  2159                           prodl	equ	0xFF3
  2160                           postinc0	equ	0xFEE
  2161                           wreg	equ	0xFE8
  2162                           indf1	equ	0xFE7
  2163                           postdec1	equ	0xFE5
  2164                           fsr1h	equ	0xFE2
  2165                           fsr1l	equ	0xFE1
  2166                           indf2	equ	0xFDF
  2167                           postinc2	equ	0xFDE
  2168                           fsr2h	equ	0xFDA
  2169                           fsr2l	equ	0xFD9
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _ejeynegativo *****************
  2173 ;; Defined at:
  2174 ;;		line 454 in file "main.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  paso4           2   25[BANK0 ] int 
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2188 ;;      Params:         0       2       0       0       0       0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0
  2190 ;;      Temps:          0       2       0       0       0       0       0
  2191 ;;      Totals:         0       4       0       0       0       0       0
  2192 ;;Total ram usage:        4 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    4
  2195 ;; This function calls:
  2196 ;;		_enviarTrama
  2197 ;;		_sprintf
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text6
  2204  000E7A                     __ptext6:
  2205                           	opt stack 0
  2206  000E7A                     _ejeynegativo:
  2207                           	opt stack 0
  2208  000E7A  FFFF               	dw	65535	; assembler added errata NOP
  2209                           
  2210                           ;main.c: 455: while (stepcont >= paso4) {
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;incstack = 0
  2214  000E7C  D11F               	goto	l3123
  2215  000E7E                     l3045:
  2216  000E7E  FFFF               	dw	65535	; assembler added errata NOP
  2217                           
  2218                           ;main.c: 456: movimiento = 1 ;
  2219  000E80  0E00               	movlw	0
  2220  000E82  6E2A               	movwf	_movimiento+1,c
  2221  000E84  0E01               	movlw	1
  2222  000E86  6E29               	movwf	_movimiento,c
  2223                           
  2224                           ;main.c: 457: if (actualstep > 7) {
  2225  000E88  BE16               	btfsc	_actualstep+1,7,c
  2226  000E8A  D00A               	goto	l3051
  2227  000E8C  5016               	movf	_actualstep+1,w,c
  2228  000E8E  E104               	bnz	u2420
  2229  000E90  0E08               	movlw	8
  2230  000E92  5C15               	subwf	_actualstep,w,c
  2231  000E94  A0D8               	btfss	status,0,c
  2232  000E96  D004               	goto	l3051
  2233  000E98                     u2420:
  2234                           
  2235                           ;main.c: 458: actualstep = 0;
  2236  000E98  0E00               	movlw	0
  2237  000E9A  6E16               	movwf	_actualstep+1,c
  2238  000E9C  0E00               	movlw	0
  2239  000E9E  6E15               	movwf	_actualstep,c
  2240  000EA0                     l3051:
  2241  000EA0  FFFF               	dw	65535	; assembler added errata NOP
  2242                           
  2243                           ;main.c: 459: }
  2244                           ;main.c: 460: sprintf(salida, "stepcount : %d ", stepcont);
  2245  000EA2  0E9C               	movlw	low _salida
  2246  000EA4  0100               	movlb	0	; () banked
  2247  000EA6  6FED               	movwf	sprintf@sp& (0+255),b
  2248  000EA8  0E00               	movlw	high _salida
  2249  000EAA  0100               	movlb	0	; () banked
  2250  000EAC  6FEE               	movwf	(sprintf@sp+1)& (0+255),b
  2251  000EAE  0E3A               	movlw	low STR_1
  2252  000EB0  0100               	movlb	0	; () banked
  2253  000EB2  6FEF               	movwf	sprintf@f& (0+255),b
  2254  000EB4  0E06               	movlw	high STR_1
  2255  000EB6  0100               	movlb	0	; () banked
  2256  000EB8  6FF0               	movwf	(sprintf@f+1)& (0+255),b
  2257  000EBA  C017  F0F1         	movff	_stepcont,?_sprintf+4
  2258  000EBE  C018  F0F2         	movff	_stepcont+1,?_sprintf+5
  2259  000EC2  ECA3  F009         	call	_sprintf	;wreg free
  2260                           
  2261                           ;main.c: 461: enviarTrama(salida);
  2262  000EC6  0E9C               	movlw	low _salida
  2263  000EC8  0100               	movlb	0	; () banked
  2264  000ECA  6FE2               	movwf	enviarTrama@datos& (0+255),b
  2265  000ECC  0E00               	movlw	high _salida
  2266  000ECE  0100               	movlb	0	; () banked
  2267  000ED0  6FE3               	movwf	(enviarTrama@datos+1)& (0+255),b
  2268  000ED2  ECA8  F00B         	call	_enviarTrama	;wreg free
  2269                           
  2270                           ;main.c: 463: switch (actualstep) {
  2271  000ED6  D0CE               	goto	l3121
  2272  000ED8                     l3055:
  2273  000ED8  FFFF               	dw	65535	; assembler added errata NOP
  2274                           
  2275                           ;main.c: 465: LATB = 0b1001;
  2276  000EDA  0E09               	movlw	9
  2277  000EDC  6E8A               	movwf	3978,c	;volatile
  2278                           
  2279                           ;main.c: 466: for (i = 0; i <= vel; i++);
  2280  000EDE  0E00               	movlw	0
  2281  000EE0  6E06               	movwf	_i+1,c
  2282  000EE2  0E00               	movlw	0
  2283  000EE4  6E05               	movwf	_i,c
  2284  000EE6  D003               	goto	l3059
  2285  000EE8                     l3057:
  2286  000EE8  FFFF               	dw	65535	; assembler added errata NOP
  2287  000EEA  4A05               	infsnz	_i,f,c
  2288  000EEC  2A06               	incf	_i+1,f,c
  2289  000EEE                     l3059:
  2290  000EEE  FFFF               	dw	65535	; assembler added errata NOP
  2291  000EF0  5005               	movf	_i,w,c
  2292  000EF2  5C5B               	subwf	_vel,w,c
  2293  000EF4  505C               	movf	_vel+1,w,c
  2294  000EF6  0A80               	xorlw	128
  2295  000EF8  0100               	movlb	0	; () banked
  2296  000EFA  6FFD               	movwf	??_ejeynegativo& (0+255),b
  2297  000EFC  5006               	movf	_i+1,w,c
  2298  000EFE  0A80               	xorlw	128
  2299  000F00  0100               	movlb	0	; () banked
  2300  000F02  59FD               	subwfb	??_ejeynegativo& (0+255),w,b
  2301  000F04  A0D8               	btfss	status,0,c
  2302  000F06  D0AF               	goto	l3117
  2303  000F08  D7EF               	goto	l3057
  2304  000F0A                     l3063:
  2305  000F0A  FFFF               	dw	65535	; assembler added errata NOP
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;main.c: 472: LATB = 0b1000;
  2309  000F0C  0E08               	movlw	8
  2310  000F0E  6E8A               	movwf	3978,c	;volatile
  2311                           
  2312                           ;main.c: 473: for (i = 0; i <= vel; i++);
  2313  000F10  0E00               	movlw	0
  2314  000F12  6E06               	movwf	_i+1,c
  2315  000F14  0E00               	movlw	0
  2316  000F16  6E05               	movwf	_i,c
  2317  000F18  D003               	goto	l3067
  2318  000F1A                     l3065:
  2319  000F1A  FFFF               	dw	65535	; assembler added errata NOP
  2320                           
  2321                           ; BSR set to: 0
  2322  000F1C  4A05               	infsnz	_i,f,c
  2323  000F1E  2A06               	incf	_i+1,f,c
  2324  000F20                     l3067:
  2325  000F20  FFFF               	dw	65535	; assembler added errata NOP
  2326                           
  2327                           ; BSR set to: 0
  2328  000F22  5005               	movf	_i,w,c
  2329  000F24  5C5B               	subwf	_vel,w,c
  2330  000F26  505C               	movf	_vel+1,w,c
  2331  000F28  0A80               	xorlw	128
  2332  000F2A  0100               	movlb	0	; () banked
  2333  000F2C  6FFD               	movwf	??_ejeynegativo& (0+255),b
  2334  000F2E  5006               	movf	_i+1,w,c
  2335  000F30  0A80               	xorlw	128
  2336  000F32  0100               	movlb	0	; () banked
  2337  000F34  59FD               	subwfb	??_ejeynegativo& (0+255),w,b
  2338  000F36  A0D8               	btfss	status,0,c
  2339  000F38  D096               	goto	l3117
  2340  000F3A  D7EF               	goto	l3065
  2341  000F3C                     l3071:
  2342  000F3C  FFFF               	dw	65535	; assembler added errata NOP
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;main.c: 478: LATB = 0b1100;
  2346  000F3E  0E0C               	movlw	12
  2347  000F40  6E8A               	movwf	3978,c	;volatile
  2348                           
  2349                           ;main.c: 479: for (i = 0; i <= vel; i++);
  2350  000F42  0E00               	movlw	0
  2351  000F44  6E06               	movwf	_i+1,c
  2352  000F46  0E00               	movlw	0
  2353  000F48  6E05               	movwf	_i,c
  2354  000F4A  D003               	goto	l3075
  2355  000F4C                     l3073:
  2356  000F4C  FFFF               	dw	65535	; assembler added errata NOP
  2357                           
  2358                           ; BSR set to: 0
  2359  000F4E  4A05               	infsnz	_i,f,c
  2360  000F50  2A06               	incf	_i+1,f,c
  2361  000F52                     l3075:
  2362  000F52  FFFF               	dw	65535	; assembler added errata NOP
  2363                           
  2364                           ; BSR set to: 0
  2365  000F54  5005               	movf	_i,w,c
  2366  000F56  5C5B               	subwf	_vel,w,c
  2367  000F58  505C               	movf	_vel+1,w,c
  2368  000F5A  0A80               	xorlw	128
  2369  000F5C  0100               	movlb	0	; () banked
  2370  000F5E  6FFD               	movwf	??_ejeynegativo& (0+255),b
  2371  000F60  5006               	movf	_i+1,w,c
  2372  000F62  0A80               	xorlw	128
  2373  000F64  0100               	movlb	0	; () banked
  2374  000F66  59FD               	subwfb	??_ejeynegativo& (0+255),w,b
  2375  000F68  A0D8               	btfss	status,0,c
  2376  000F6A  D07D               	goto	l3117
  2377  000F6C  D7EF               	goto	l3073
  2378  000F6E                     l3079:
  2379  000F6E  FFFF               	dw	65535	; assembler added errata NOP
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;main.c: 485: LATB = 0b0100;
  2383  000F70  0E04               	movlw	4
  2384  000F72  6E8A               	movwf	3978,c	;volatile
  2385                           
  2386                           ;main.c: 486: for (i = 0; i <= vel; i++);
  2387  000F74  0E00               	movlw	0
  2388  000F76  6E06               	movwf	_i+1,c
  2389  000F78  0E00               	movlw	0
  2390  000F7A  6E05               	movwf	_i,c
  2391  000F7C  D003               	goto	l3083
  2392  000F7E                     l3081:
  2393  000F7E  FFFF               	dw	65535	; assembler added errata NOP
  2394                           
  2395                           ; BSR set to: 0
  2396  000F80  4A05               	infsnz	_i,f,c
  2397  000F82  2A06               	incf	_i+1,f,c
  2398  000F84                     l3083:
  2399  000F84  FFFF               	dw	65535	; assembler added errata NOP
  2400                           
  2401                           ; BSR set to: 0
  2402  000F86  5005               	movf	_i,w,c
  2403  000F88  5C5B               	subwf	_vel,w,c
  2404  000F8A  505C               	movf	_vel+1,w,c
  2405  000F8C  0A80               	xorlw	128
  2406  000F8E  0100               	movlb	0	; () banked
  2407  000F90  6FFD               	movwf	??_ejeynegativo& (0+255),b
  2408  000F92  5006               	movf	_i+1,w,c
  2409  000F94  0A80               	xorlw	128
  2410  000F96  0100               	movlb	0	; () banked
  2411  000F98  59FD               	subwfb	??_ejeynegativo& (0+255),w,b
  2412  000F9A  A0D8               	btfss	status,0,c
  2413  000F9C  D064               	goto	l3117
  2414  000F9E  D7EF               	goto	l3081
  2415  000FA0                     l3087:
  2416  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;main.c: 491: LATB = 0b0110;
  2420  000FA2  0E06               	movlw	6
  2421  000FA4  6E8A               	movwf	3978,c	;volatile
  2422                           
  2423                           ;main.c: 492: for (i = 0; i <= vel; i++);
  2424  000FA6  0E00               	movlw	0
  2425  000FA8  6E06               	movwf	_i+1,c
  2426  000FAA  0E00               	movlw	0
  2427  000FAC  6E05               	movwf	_i,c
  2428  000FAE  D003               	goto	l3091
  2429  000FB0                     l3089:
  2430  000FB0  FFFF               	dw	65535	; assembler added errata NOP
  2431                           
  2432                           ; BSR set to: 0
  2433  000FB2  4A05               	infsnz	_i,f,c
  2434  000FB4  2A06               	incf	_i+1,f,c
  2435  000FB6                     l3091:
  2436  000FB6  FFFF               	dw	65535	; assembler added errata NOP
  2437                           
  2438                           ; BSR set to: 0
  2439  000FB8  5005               	movf	_i,w,c
  2440  000FBA  5C5B               	subwf	_vel,w,c
  2441  000FBC  505C               	movf	_vel+1,w,c
  2442  000FBE  0A80               	xorlw	128
  2443  000FC0  0100               	movlb	0	; () banked
  2444  000FC2  6FFD               	movwf	??_ejeynegativo& (0+255),b
  2445  000FC4  5006               	movf	_i+1,w,c
  2446  000FC6  0A80               	xorlw	128
  2447  000FC8  0100               	movlb	0	; () banked
  2448  000FCA  59FD               	subwfb	??_ejeynegativo& (0+255),w,b
  2449  000FCC  A0D8               	btfss	status,0,c
  2450  000FCE  D04B               	goto	l3117
  2451  000FD0  D7EF               	goto	l3089
  2452  000FD2                     l3095:
  2453  000FD2  FFFF               	dw	65535	; assembler added errata NOP
  2454                           
  2455                           ; BSR set to: 0
  2456                           ;main.c: 497: LATB = 0b0010;
  2457  000FD4  0E02               	movlw	2
  2458  000FD6  6E8A               	movwf	3978,c	;volatile
  2459                           
  2460                           ;main.c: 498: for (i = 0; i <= vel; i++);
  2461  000FD8  0E00               	movlw	0
  2462  000FDA  6E06               	movwf	_i+1,c
  2463  000FDC  0E00               	movlw	0
  2464  000FDE  6E05               	movwf	_i,c
  2465  000FE0  D003               	goto	l3099
  2466  000FE2                     l3097:
  2467  000FE2  FFFF               	dw	65535	; assembler added errata NOP
  2468                           
  2469                           ; BSR set to: 0
  2470  000FE4  4A05               	infsnz	_i,f,c
  2471  000FE6  2A06               	incf	_i+1,f,c
  2472  000FE8                     l3099:
  2473  000FE8  FFFF               	dw	65535	; assembler added errata NOP
  2474                           
  2475                           ; BSR set to: 0
  2476  000FEA  5005               	movf	_i,w,c
  2477  000FEC  5C5B               	subwf	_vel,w,c
  2478  000FEE  505C               	movf	_vel+1,w,c
  2479  000FF0  0A80               	xorlw	128
  2480  000FF2  0100               	movlb	0	; () banked
  2481  000FF4  6FFD               	movwf	??_ejeynegativo& (0+255),b
  2482  000FF6  5006               	movf	_i+1,w,c
  2483  000FF8  0A80               	xorlw	128
  2484  000FFA  0100               	movlb	0	; () banked
  2485  000FFC  59FD               	subwfb	??_ejeynegativo& (0+255),w,b
  2486  000FFE  A0D8               	btfss	status,0,c
  2487  001000  D032               	goto	l3117
  2488  001002  D7EF               	goto	l3097
  2489  001004                     l3103:
  2490  001004  FFFF               	dw	65535	; assembler added errata NOP
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;main.c: 504: LATB = 0b0011;
  2494  001006  0E03               	movlw	3
  2495  001008  6E8A               	movwf	3978,c	;volatile
  2496                           
  2497                           ;main.c: 505: for (i = 0; i <= vel; i++);
  2498  00100A  0E00               	movlw	0
  2499  00100C  6E06               	movwf	_i+1,c
  2500  00100E  0E00               	movlw	0
  2501  001010  6E05               	movwf	_i,c
  2502  001012  D003               	goto	l3107
  2503  001014                     l3105:
  2504  001014  FFFF               	dw	65535	; assembler added errata NOP
  2505                           
  2506                           ; BSR set to: 0
  2507  001016  4A05               	infsnz	_i,f,c
  2508  001018  2A06               	incf	_i+1,f,c
  2509  00101A                     l3107:
  2510  00101A  FFFF               	dw	65535	; assembler added errata NOP
  2511                           
  2512                           ; BSR set to: 0
  2513  00101C  5005               	movf	_i,w,c
  2514  00101E  5C5B               	subwf	_vel,w,c
  2515  001020  505C               	movf	_vel+1,w,c
  2516  001022  0A80               	xorlw	128
  2517  001024  0100               	movlb	0	; () banked
  2518  001026  6FFD               	movwf	??_ejeynegativo& (0+255),b
  2519  001028  5006               	movf	_i+1,w,c
  2520  00102A  0A80               	xorlw	128
  2521  00102C  0100               	movlb	0	; () banked
  2522  00102E  59FD               	subwfb	??_ejeynegativo& (0+255),w,b
  2523  001030  A0D8               	btfss	status,0,c
  2524  001032  D019               	goto	l3117
  2525  001034  D7EF               	goto	l3105
  2526  001036                     l3111:
  2527  001036  FFFF               	dw	65535	; assembler added errata NOP
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;main.c: 510: LATB = 0b0001;
  2531  001038  0E01               	movlw	1
  2532  00103A  6E8A               	movwf	3978,c	;volatile
  2533                           
  2534                           ;main.c: 511: for (i = 0; i <= vel; i++);
  2535  00103C  0E00               	movlw	0
  2536  00103E  6E06               	movwf	_i+1,c
  2537  001040  0E00               	movlw	0
  2538  001042  6E05               	movwf	_i,c
  2539  001044  D003               	goto	l3115
  2540  001046                     l3113:
  2541  001046  FFFF               	dw	65535	; assembler added errata NOP
  2542                           
  2543                           ; BSR set to: 0
  2544  001048  4A05               	infsnz	_i,f,c
  2545  00104A  2A06               	incf	_i+1,f,c
  2546  00104C                     l3115:
  2547  00104C  FFFF               	dw	65535	; assembler added errata NOP
  2548                           
  2549                           ; BSR set to: 0
  2550  00104E  5005               	movf	_i,w,c
  2551  001050  5C5B               	subwf	_vel,w,c
  2552  001052  505C               	movf	_vel+1,w,c
  2553  001054  0A80               	xorlw	128
  2554  001056  0100               	movlb	0	; () banked
  2555  001058  6FFD               	movwf	??_ejeynegativo& (0+255),b
  2556  00105A  5006               	movf	_i+1,w,c
  2557  00105C  0A80               	xorlw	128
  2558  00105E  0100               	movlb	0	; () banked
  2559  001060  59FD               	subwfb	??_ejeynegativo& (0+255),w,b
  2560  001062  B0D8               	btfsc	status,0,c
  2561  001064  D7F0               	goto	l3113
  2562  001066                     l3117:
  2563  001066  FFFF               	dw	65535	; assembler added errata NOP
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;main.c: 512: stepcont--;
  2567  001068  0617               	decf	_stepcont,f,c
  2568  00106A  A0D8               	btfss	status,0,c
  2569  00106C  0618               	decf	_stepcont+1,f,c
  2570                           
  2571                           ;main.c: 513: actualstep++;
  2572  00106E  4A15               	infsnz	_actualstep,f,c
  2573  001070  2A16               	incf	_actualstep+1,f,c
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;main.c: 515: }
  2577                           
  2578                           ;main.c: 514: break;
  2579  001072  D024               	goto	l3123
  2580  001074                     l3121:
  2581  001074  FFFF               	dw	65535	; assembler added errata NOP
  2582  001076  C015  F0FD         	movff	_actualstep,??_ejeynegativo
  2583  00107A  C016  F0FE         	movff	_actualstep+1,??_ejeynegativo+1
  2584                           
  2585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2586                           ; Switch size 1, requested type "space"
  2587                           ; Number of cases is 1, Range of values is 0 to 0
  2588                           ; switch strategies available:
  2589                           ; Name         Instructions Cycles
  2590                           ; simple_byte            4     3 (average)
  2591                           ;	Chosen strategy is simple_byte
  2592  00107E  0100               	movlb	0	; () banked
  2593  001080  51FE               	movf	(??_ejeynegativo+1)& (0+255),w,b
  2594  001082  0A00               	xorlw	0	; case 0
  2595  001084  A4D8               	btfss	status,2,c
  2596  001086  D01A               	goto	l3123
  2597                           
  2598                           ; BSR set to: 0
  2599                           ; Switch size 1, requested type "space"
  2600                           ; Number of cases is 8, Range of values is 0 to 7
  2601                           ; switch strategies available:
  2602                           ; Name         Instructions Cycles
  2603                           ; simple_byte           25    13 (average)
  2604                           ;	Chosen strategy is simple_byte
  2605  001088  0100               	movlb	0	; () banked
  2606  00108A  51FD               	movf	??_ejeynegativo& (0+255),w,b
  2607  00108C  0A00               	xorlw	0	; case 0
  2608  00108E  B4D8               	btfsc	status,2,c
  2609  001090  D723               	goto	l3055
  2610  001092  0A01               	xorlw	1	; case 1
  2611  001094  B4D8               	btfsc	status,2,c
  2612  001096  D739               	goto	l3063
  2613  001098  0A03               	xorlw	3	; case 2
  2614  00109A  B4D8               	btfsc	status,2,c
  2615  00109C  D74F               	goto	l3071
  2616  00109E  0A01               	xorlw	1	; case 3
  2617  0010A0  B4D8               	btfsc	status,2,c
  2618  0010A2  D765               	goto	l3079
  2619  0010A4  0A07               	xorlw	7	; case 4
  2620  0010A6  B4D8               	btfsc	status,2,c
  2621  0010A8  D77B               	goto	l3087
  2622  0010AA  0A01               	xorlw	1	; case 5
  2623  0010AC  B4D8               	btfsc	status,2,c
  2624  0010AE  D791               	goto	l3095
  2625  0010B0  0A03               	xorlw	3	; case 6
  2626  0010B2  B4D8               	btfsc	status,2,c
  2627  0010B4  D7A7               	goto	l3103
  2628  0010B6  0A01               	xorlw	1	; case 7
  2629  0010B8  B4D8               	btfsc	status,2,c
  2630  0010BA  D7BD               	goto	l3111
  2631  0010BC                     l3123:
  2632  0010BC  FFFF               	dw	65535	; assembler added errata NOP
  2633  0010BE  0100               	movlb	0	; () banked
  2634  0010C0  51FB               	movf	ejeynegativo@paso4& (0+255),w,b
  2635  0010C2  5C17               	subwf	_stepcont,w,c
  2636  0010C4  5018               	movf	_stepcont+1,w,c
  2637  0010C6  0A80               	xorlw	128
  2638  0010C8  0100               	movlb	0	; () banked
  2639  0010CA  6FFD               	movwf	??_ejeynegativo& (0+255),b
  2640  0010CC  0100               	movlb	0	; () banked
  2641  0010CE  51FC               	movf	(ejeynegativo@paso4+1)& (0+255),w,b
  2642  0010D0  0A80               	xorlw	128
  2643  0010D2  0100               	movlb	0	; () banked
  2644  0010D4  59FD               	subwfb	??_ejeynegativo& (0+255),w,b
  2645  0010D6  A0D8               	btfss	status,0,c
  2646                           
  2647                           ; BSR set to: 0
  2648                           
  2649                           ; BSR set to: 0
  2650  0010D8  0012               	return		;funcret
  2651  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  2652  0010DC  D6D0               	goto	l3045
  2653  0010DE  FFFF               	dw	65535	; errata NOP
  2654  0010E0                     __end_of_ejeynegativo:
  2655                           	opt stack 0
  2656                           tblptru	equ	0xFF8
  2657                           tblptrh	equ	0xFF7
  2658                           tblptrl	equ	0xFF6
  2659                           tablat	equ	0xFF5
  2660                           prodh	equ	0xFF4
  2661                           prodl	equ	0xFF3
  2662                           postinc0	equ	0xFEE
  2663                           wreg	equ	0xFE8
  2664                           indf1	equ	0xFE7
  2665                           postdec1	equ	0xFE5
  2666                           fsr1h	equ	0xFE2
  2667                           fsr1l	equ	0xFE1
  2668                           indf2	equ	0xFDF
  2669                           postinc2	equ	0xFDE
  2670                           fsr2h	equ	0xFDA
  2671                           fsr2l	equ	0xFD9
  2672                           status	equ	0xFD8
  2673                           
  2674 ;; *************** function _ejexpositivo *****************
  2675 ;; Defined at:
  2676 ;;		line 255 in file "main.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  paso            2   25[BANK0 ] int 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;		None
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2690 ;;      Params:         0       2       0       0       0       0       0
  2691 ;;      Locals:         0       0       0       0       0       0       0
  2692 ;;      Temps:          0       2       0       0       0       0       0
  2693 ;;      Totals:         0       4       0       0       0       0       0
  2694 ;;Total ram usage:        4 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    4
  2697 ;; This function calls:
  2698 ;;		_enviarTrama
  2699 ;;		_sprintf
  2700 ;; This function is called by:
  2701 ;;		_main
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text7
  2706  000C0A                     __ptext7:
  2707                           	opt stack 0
  2708  000C0A                     _ejexpositivo:
  2709                           	opt stack 0
  2710  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  2711                           
  2712                           ;main.c: 256: while (stepcont <= paso) {
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;incstack = 0
  2716  000C0C  D124               	goto	l2857
  2717  000C0E                     l2777:
  2718  000C0E  FFFF               	dw	65535	; assembler added errata NOP
  2719                           
  2720                           ;main.c: 257: movimiento = 1 ;
  2721  000C10  0E00               	movlw	0
  2722  000C12  6E2A               	movwf	_movimiento+1,c
  2723  000C14  0E01               	movlw	1
  2724  000C16  6E29               	movwf	_movimiento,c
  2725                           
  2726                           ;main.c: 258: if (actualstep > 7) {
  2727  000C18  BE16               	btfsc	_actualstep+1,7,c
  2728  000C1A  D00A               	goto	l2783
  2729  000C1C  5016               	movf	_actualstep+1,w,c
  2730  000C1E  E104               	bnz	u2120
  2731  000C20  0E08               	movlw	8
  2732  000C22  5C15               	subwf	_actualstep,w,c
  2733  000C24  A0D8               	btfss	status,0,c
  2734  000C26  D004               	goto	l2783
  2735  000C28                     u2120:
  2736                           
  2737                           ;main.c: 259: actualstep = 0;
  2738  000C28  0E00               	movlw	0
  2739  000C2A  6E16               	movwf	_actualstep+1,c
  2740  000C2C  0E00               	movlw	0
  2741  000C2E  6E15               	movwf	_actualstep,c
  2742  000C30                     l2783:
  2743  000C30  FFFF               	dw	65535	; assembler added errata NOP
  2744                           
  2745                           ;main.c: 260: }
  2746                           ;main.c: 261: sprintf(salida, "stepcount : %d ", stepcont);
  2747  000C32  0E9C               	movlw	low _salida
  2748  000C34  0100               	movlb	0	; () banked
  2749  000C36  6FED               	movwf	sprintf@sp& (0+255),b
  2750  000C38  0E00               	movlw	high _salida
  2751  000C3A  0100               	movlb	0	; () banked
  2752  000C3C  6FEE               	movwf	(sprintf@sp+1)& (0+255),b
  2753  000C3E  0E3A               	movlw	low STR_1
  2754  000C40  0100               	movlb	0	; () banked
  2755  000C42  6FEF               	movwf	sprintf@f& (0+255),b
  2756  000C44  0E06               	movlw	high STR_1
  2757  000C46  0100               	movlb	0	; () banked
  2758  000C48  6FF0               	movwf	(sprintf@f+1)& (0+255),b
  2759  000C4A  C017  F0F1         	movff	_stepcont,?_sprintf+4
  2760  000C4E  C018  F0F2         	movff	_stepcont+1,?_sprintf+5
  2761  000C52  ECA3  F009         	call	_sprintf	;wreg free
  2762                           
  2763                           ;main.c: 262: enviarTrama(salida);
  2764  000C56  0E9C               	movlw	low _salida
  2765  000C58  0100               	movlb	0	; () banked
  2766  000C5A  6FE2               	movwf	enviarTrama@datos& (0+255),b
  2767  000C5C  0E00               	movlw	high _salida
  2768  000C5E  0100               	movlb	0	; () banked
  2769  000C60  6FE3               	movwf	(enviarTrama@datos+1)& (0+255),b
  2770  000C62  ECA8  F00B         	call	_enviarTrama	;wreg free
  2771                           
  2772                           ;main.c: 264: switch (actualstep) {
  2773  000C66  D0D3               	goto	l2855
  2774  000C68                     l2787:
  2775  000C68  FFFF               	dw	65535	; assembler added errata NOP
  2776                           
  2777                           ;main.c: 266: LATA = 0b0001;
  2778  000C6A  0E01               	movlw	1
  2779  000C6C  6E89               	movwf	3977,c	;volatile
  2780                           
  2781                           ;main.c: 267: for (i = 0; i <= vel; i++);
  2782  000C6E  0E00               	movlw	0
  2783  000C70  6E06               	movwf	_i+1,c
  2784  000C72  0E00               	movlw	0
  2785  000C74  6E05               	movwf	_i,c
  2786  000C76  D003               	goto	l2791
  2787  000C78                     l2789:
  2788  000C78  FFFF               	dw	65535	; assembler added errata NOP
  2789  000C7A  4A05               	infsnz	_i,f,c
  2790  000C7C  2A06               	incf	_i+1,f,c
  2791  000C7E                     l2791:
  2792  000C7E  FFFF               	dw	65535	; assembler added errata NOP
  2793  000C80  5005               	movf	_i,w,c
  2794  000C82  5C5B               	subwf	_vel,w,c
  2795  000C84  505C               	movf	_vel+1,w,c
  2796  000C86  0A80               	xorlw	128
  2797  000C88  0100               	movlb	0	; () banked
  2798  000C8A  6FFD               	movwf	??_ejexpositivo& (0+255),b
  2799  000C8C  5006               	movf	_i+1,w,c
  2800  000C8E  0A80               	xorlw	128
  2801  000C90  0100               	movlb	0	; () banked
  2802  000C92  59FD               	subwfb	??_ejexpositivo& (0+255),w,b
  2803  000C94  B0D8               	btfsc	status,0,c
  2804  000C96  D7F0               	goto	l2789
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;main.c: 268: __nop();
  2808  000C98  F000               	nop	
  2809                           
  2810                           ;main.c: 269: stepcont++;
  2811  000C9A  4A17               	infsnz	_stepcont,f,c
  2812  000C9C  2A18               	incf	_stepcont+1,f,c
  2813                           
  2814                           ;main.c: 270: __nop();
  2815  000C9E  F000               	nop	
  2816  000CA0  D019               	goto	L2
  2817  000CA2                     l2797:
  2818  000CA2  FFFF               	dw	65535	; assembler added errata NOP
  2819                           
  2820                           ;main.c: 274: LATA = 0b0011;
  2821  000CA4  0E03               	movlw	3
  2822  000CA6  6E89               	movwf	3977,c	;volatile
  2823                           
  2824                           ;main.c: 275: for (i = 0; i <= vel; i++);
  2825  000CA8  0E00               	movlw	0
  2826  000CAA  6E06               	movwf	_i+1,c
  2827  000CAC  0E00               	movlw	0
  2828  000CAE  6E05               	movwf	_i,c
  2829  000CB0  D003               	goto	l2801
  2830  000CB2                     l2799:
  2831  000CB2  FFFF               	dw	65535	; assembler added errata NOP
  2832  000CB4  4A05               	infsnz	_i,f,c
  2833  000CB6  2A06               	incf	_i+1,f,c
  2834  000CB8                     l2801:
  2835  000CB8  FFFF               	dw	65535	; assembler added errata NOP
  2836  000CBA  5005               	movf	_i,w,c
  2837  000CBC  5C5B               	subwf	_vel,w,c
  2838  000CBE  505C               	movf	_vel+1,w,c
  2839  000CC0  0A80               	xorlw	128
  2840  000CC2  0100               	movlb	0	; () banked
  2841  000CC4  6FFD               	movwf	??_ejexpositivo& (0+255),b
  2842  000CC6  5006               	movf	_i+1,w,c
  2843  000CC8  0A80               	xorlw	128
  2844  000CCA  0100               	movlb	0	; () banked
  2845  000CCC  59FD               	subwfb	??_ejexpositivo& (0+255),w,b
  2846  000CCE  A0D8               	btfss	status,0,c
  2847  000CD0  D09A               	goto	l2851
  2848  000CD2  D7EF               	goto	l2799
  2849  000CD4                     L2:
  2850  000CD4  FFFF               	dw	65535	; assembler added errata NOP
  2851                           
  2852                           ;main.c: 277: actualstep++;
  2853  000CD6  4A15               	infsnz	_actualstep,f,c
  2854  000CD8  2A16               	incf	_actualstep+1,f,c
  2855                           
  2856                           ;main.c: 278: break;
  2857  000CDA  D0BD               	goto	l2857
  2858  000CDC                     l2805:
  2859  000CDC  FFFF               	dw	65535	; assembler added errata NOP
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;main.c: 280: LATA = 0b0010;
  2863  000CDE  0E02               	movlw	2
  2864  000CE0  6E89               	movwf	3977,c	;volatile
  2865                           
  2866                           ;main.c: 281: for (i = 0; i <= vel; i++);
  2867  000CE2  0E00               	movlw	0
  2868  000CE4  6E06               	movwf	_i+1,c
  2869  000CE6  0E00               	movlw	0
  2870  000CE8  6E05               	movwf	_i,c
  2871  000CEA  D003               	goto	l2809
  2872  000CEC                     l2807:
  2873  000CEC  FFFF               	dw	65535	; assembler added errata NOP
  2874                           
  2875                           ; BSR set to: 0
  2876  000CEE  4A05               	infsnz	_i,f,c
  2877  000CF0  2A06               	incf	_i+1,f,c
  2878  000CF2                     l2809:
  2879  000CF2  FFFF               	dw	65535	; assembler added errata NOP
  2880                           
  2881                           ; BSR set to: 0
  2882  000CF4  5005               	movf	_i,w,c
  2883  000CF6  5C5B               	subwf	_vel,w,c
  2884  000CF8  505C               	movf	_vel+1,w,c
  2885  000CFA  0A80               	xorlw	128
  2886  000CFC  0100               	movlb	0	; () banked
  2887  000CFE  6FFD               	movwf	??_ejexpositivo& (0+255),b
  2888  000D00  5006               	movf	_i+1,w,c
  2889  000D02  0A80               	xorlw	128
  2890  000D04  0100               	movlb	0	; () banked
  2891  000D06  59FD               	subwfb	??_ejexpositivo& (0+255),w,b
  2892  000D08  A0D8               	btfss	status,0,c
  2893  000D0A  D07D               	goto	l2851
  2894  000D0C  D7EF               	goto	l2807
  2895  000D0E                     l2813:
  2896  000D0E  FFFF               	dw	65535	; assembler added errata NOP
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;main.c: 286: LATA = 0b0110;
  2900  000D10  0E06               	movlw	6
  2901  000D12  6E89               	movwf	3977,c	;volatile
  2902                           
  2903                           ;main.c: 287: for (i = 0; i <= vel; i++);
  2904  000D14  0E00               	movlw	0
  2905  000D16  6E06               	movwf	_i+1,c
  2906  000D18  0E00               	movlw	0
  2907  000D1A  6E05               	movwf	_i,c
  2908  000D1C  D003               	goto	l2817
  2909  000D1E                     l2815:
  2910  000D1E  FFFF               	dw	65535	; assembler added errata NOP
  2911                           
  2912                           ; BSR set to: 0
  2913  000D20  4A05               	infsnz	_i,f,c
  2914  000D22  2A06               	incf	_i+1,f,c
  2915  000D24                     l2817:
  2916  000D24  FFFF               	dw	65535	; assembler added errata NOP
  2917                           
  2918                           ; BSR set to: 0
  2919  000D26  5005               	movf	_i,w,c
  2920  000D28  5C5B               	subwf	_vel,w,c
  2921  000D2A  505C               	movf	_vel+1,w,c
  2922  000D2C  0A80               	xorlw	128
  2923  000D2E  0100               	movlb	0	; () banked
  2924  000D30  6FFD               	movwf	??_ejexpositivo& (0+255),b
  2925  000D32  5006               	movf	_i+1,w,c
  2926  000D34  0A80               	xorlw	128
  2927  000D36  0100               	movlb	0	; () banked
  2928  000D38  59FD               	subwfb	??_ejexpositivo& (0+255),w,b
  2929  000D3A  A0D8               	btfss	status,0,c
  2930  000D3C  D064               	goto	l2851
  2931  000D3E  D7EF               	goto	l2815
  2932  000D40                     l2821:
  2933  000D40  FFFF               	dw	65535	; assembler added errata NOP
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;main.c: 292: LATA = 0b0100;
  2937  000D42  0E04               	movlw	4
  2938  000D44  6E89               	movwf	3977,c	;volatile
  2939                           
  2940                           ;main.c: 293: for (i = 0; i <= vel; i++);
  2941  000D46  0E00               	movlw	0
  2942  000D48  6E06               	movwf	_i+1,c
  2943  000D4A  0E00               	movlw	0
  2944  000D4C  6E05               	movwf	_i,c
  2945  000D4E  D003               	goto	l2825
  2946  000D50                     l2823:
  2947  000D50  FFFF               	dw	65535	; assembler added errata NOP
  2948                           
  2949                           ; BSR set to: 0
  2950  000D52  4A05               	infsnz	_i,f,c
  2951  000D54  2A06               	incf	_i+1,f,c
  2952  000D56                     l2825:
  2953  000D56  FFFF               	dw	65535	; assembler added errata NOP
  2954                           
  2955                           ; BSR set to: 0
  2956  000D58  5005               	movf	_i,w,c
  2957  000D5A  5C5B               	subwf	_vel,w,c
  2958  000D5C  505C               	movf	_vel+1,w,c
  2959  000D5E  0A80               	xorlw	128
  2960  000D60  0100               	movlb	0	; () banked
  2961  000D62  6FFD               	movwf	??_ejexpositivo& (0+255),b
  2962  000D64  5006               	movf	_i+1,w,c
  2963  000D66  0A80               	xorlw	128
  2964  000D68  0100               	movlb	0	; () banked
  2965  000D6A  59FD               	subwfb	??_ejexpositivo& (0+255),w,b
  2966  000D6C  A0D8               	btfss	status,0,c
  2967  000D6E  D04B               	goto	l2851
  2968  000D70  D7EF               	goto	l2823
  2969  000D72                     l2829:
  2970  000D72  FFFF               	dw	65535	; assembler added errata NOP
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;main.c: 298: LATA = 0b1100;
  2974  000D74  0E0C               	movlw	12
  2975  000D76  6E89               	movwf	3977,c	;volatile
  2976                           
  2977                           ;main.c: 299: for (i = 0; i <= vel; i++);
  2978  000D78  0E00               	movlw	0
  2979  000D7A  6E06               	movwf	_i+1,c
  2980  000D7C  0E00               	movlw	0
  2981  000D7E  6E05               	movwf	_i,c
  2982  000D80  D003               	goto	l2833
  2983  000D82                     l2831:
  2984  000D82  FFFF               	dw	65535	; assembler added errata NOP
  2985                           
  2986                           ; BSR set to: 0
  2987  000D84  4A05               	infsnz	_i,f,c
  2988  000D86  2A06               	incf	_i+1,f,c
  2989  000D88                     l2833:
  2990  000D88  FFFF               	dw	65535	; assembler added errata NOP
  2991                           
  2992                           ; BSR set to: 0
  2993  000D8A  5005               	movf	_i,w,c
  2994  000D8C  5C5B               	subwf	_vel,w,c
  2995  000D8E  505C               	movf	_vel+1,w,c
  2996  000D90  0A80               	xorlw	128
  2997  000D92  0100               	movlb	0	; () banked
  2998  000D94  6FFD               	movwf	??_ejexpositivo& (0+255),b
  2999  000D96  5006               	movf	_i+1,w,c
  3000  000D98  0A80               	xorlw	128
  3001  000D9A  0100               	movlb	0	; () banked
  3002  000D9C  59FD               	subwfb	??_ejexpositivo& (0+255),w,b
  3003  000D9E  A0D8               	btfss	status,0,c
  3004  000DA0  D032               	goto	l2851
  3005  000DA2  D7EF               	goto	l2831
  3006  000DA4                     l2837:
  3007  000DA4  FFFF               	dw	65535	; assembler added errata NOP
  3008                           
  3009                           ; BSR set to: 0
  3010                           ;main.c: 305: LATA = 0b1000;
  3011  000DA6  0E08               	movlw	8
  3012  000DA8  6E89               	movwf	3977,c	;volatile
  3013                           
  3014                           ;main.c: 306: for (i = 0; i <= vel; i++);
  3015  000DAA  0E00               	movlw	0
  3016  000DAC  6E06               	movwf	_i+1,c
  3017  000DAE  0E00               	movlw	0
  3018  000DB0  6E05               	movwf	_i,c
  3019  000DB2  D003               	goto	l2841
  3020  000DB4                     l2839:
  3021  000DB4  FFFF               	dw	65535	; assembler added errata NOP
  3022                           
  3023                           ; BSR set to: 0
  3024  000DB6  4A05               	infsnz	_i,f,c
  3025  000DB8  2A06               	incf	_i+1,f,c
  3026  000DBA                     l2841:
  3027  000DBA  FFFF               	dw	65535	; assembler added errata NOP
  3028                           
  3029                           ; BSR set to: 0
  3030  000DBC  5005               	movf	_i,w,c
  3031  000DBE  5C5B               	subwf	_vel,w,c
  3032  000DC0  505C               	movf	_vel+1,w,c
  3033  000DC2  0A80               	xorlw	128
  3034  000DC4  0100               	movlb	0	; () banked
  3035  000DC6  6FFD               	movwf	??_ejexpositivo& (0+255),b
  3036  000DC8  5006               	movf	_i+1,w,c
  3037  000DCA  0A80               	xorlw	128
  3038  000DCC  0100               	movlb	0	; () banked
  3039  000DCE  59FD               	subwfb	??_ejexpositivo& (0+255),w,b
  3040  000DD0  A0D8               	btfss	status,0,c
  3041  000DD2  D019               	goto	l2851
  3042  000DD4  D7EF               	goto	l2839
  3043  000DD6                     l2845:
  3044  000DD6  FFFF               	dw	65535	; assembler added errata NOP
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;main.c: 311: LATA = 0b1001;
  3048  000DD8  0E09               	movlw	9
  3049  000DDA  6E89               	movwf	3977,c	;volatile
  3050                           
  3051                           ;main.c: 312: for (i = 0; i <= vel; i++);
  3052  000DDC  0E00               	movlw	0
  3053  000DDE  6E06               	movwf	_i+1,c
  3054  000DE0  0E00               	movlw	0
  3055  000DE2  6E05               	movwf	_i,c
  3056  000DE4  D003               	goto	l2849
  3057  000DE6                     l2847:
  3058  000DE6  FFFF               	dw	65535	; assembler added errata NOP
  3059                           
  3060                           ; BSR set to: 0
  3061  000DE8  4A05               	infsnz	_i,f,c
  3062  000DEA  2A06               	incf	_i+1,f,c
  3063  000DEC                     l2849:
  3064  000DEC  FFFF               	dw	65535	; assembler added errata NOP
  3065                           
  3066                           ; BSR set to: 0
  3067  000DEE  5005               	movf	_i,w,c
  3068  000DF0  5C5B               	subwf	_vel,w,c
  3069  000DF2  505C               	movf	_vel+1,w,c
  3070  000DF4  0A80               	xorlw	128
  3071  000DF6  0100               	movlb	0	; () banked
  3072  000DF8  6FFD               	movwf	??_ejexpositivo& (0+255),b
  3073  000DFA  5006               	movf	_i+1,w,c
  3074  000DFC  0A80               	xorlw	128
  3075  000DFE  0100               	movlb	0	; () banked
  3076  000E00  59FD               	subwfb	??_ejexpositivo& (0+255),w,b
  3077  000E02  B0D8               	btfsc	status,0,c
  3078  000E04  D7F0               	goto	l2847
  3079  000E06                     l2851:
  3080  000E06  FFFF               	dw	65535	; assembler added errata NOP
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;main.c: 313: stepcont++;
  3084  000E08  4A17               	infsnz	_stepcont,f,c
  3085  000E0A  2A18               	incf	_stepcont+1,f,c
  3086  000E0C  D763               	goto	L2
  3087  000E0E                     l2855:
  3088  000E0E  FFFF               	dw	65535	; assembler added errata NOP
  3089  000E10  C015  F0FD         	movff	_actualstep,??_ejexpositivo
  3090  000E14  C016  F0FE         	movff	_actualstep+1,??_ejexpositivo+1
  3091                           
  3092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3093                           ; Switch size 1, requested type "space"
  3094                           ; Number of cases is 1, Range of values is 0 to 0
  3095                           ; switch strategies available:
  3096                           ; Name         Instructions Cycles
  3097                           ; simple_byte            4     3 (average)
  3098                           ;	Chosen strategy is simple_byte
  3099  000E18  0100               	movlb	0	; () banked
  3100  000E1A  51FE               	movf	(??_ejexpositivo+1)& (0+255),w,b
  3101  000E1C  0A00               	xorlw	0	; case 0
  3102  000E1E  A4D8               	btfss	status,2,c
  3103  000E20  D01A               	goto	l2857
  3104                           
  3105                           ; BSR set to: 0
  3106                           ; Switch size 1, requested type "space"
  3107                           ; Number of cases is 8, Range of values is 0 to 7
  3108                           ; switch strategies available:
  3109                           ; Name         Instructions Cycles
  3110                           ; simple_byte           25    13 (average)
  3111                           ;	Chosen strategy is simple_byte
  3112  000E22  0100               	movlb	0	; () banked
  3113  000E24  51FD               	movf	??_ejexpositivo& (0+255),w,b
  3114  000E26  0A00               	xorlw	0	; case 0
  3115  000E28  B4D8               	btfsc	status,2,c
  3116  000E2A  D71E               	goto	l2787
  3117  000E2C  0A01               	xorlw	1	; case 1
  3118  000E2E  B4D8               	btfsc	status,2,c
  3119  000E30  D738               	goto	l2797
  3120  000E32  0A03               	xorlw	3	; case 2
  3121  000E34  B4D8               	btfsc	status,2,c
  3122  000E36  D752               	goto	l2805
  3123  000E38  0A01               	xorlw	1	; case 3
  3124  000E3A  B4D8               	btfsc	status,2,c
  3125  000E3C  D768               	goto	l2813
  3126  000E3E  0A07               	xorlw	7	; case 4
  3127  000E40  B4D8               	btfsc	status,2,c
  3128  000E42  D77E               	goto	l2821
  3129  000E44  0A01               	xorlw	1	; case 5
  3130  000E46  B4D8               	btfsc	status,2,c
  3131  000E48  D794               	goto	l2829
  3132  000E4A  0A03               	xorlw	3	; case 6
  3133  000E4C  B4D8               	btfsc	status,2,c
  3134  000E4E  D7AA               	goto	l2837
  3135  000E50  0A01               	xorlw	1	; case 7
  3136  000E52  B4D8               	btfsc	status,2,c
  3137  000E54  D7C0               	goto	l2845
  3138  000E56                     l2857:
  3139  000E56  FFFF               	dw	65535	; assembler added errata NOP
  3140  000E58  5017               	movf	_stepcont,w,c
  3141  000E5A  0100               	movlb	0	; () banked
  3142  000E5C  5DFB               	subwf	ejexpositivo@paso& (0+255),w,b
  3143  000E5E  0100               	movlb	0	; () banked
  3144  000E60  51FC               	movf	(ejexpositivo@paso+1)& (0+255),w,b
  3145  000E62  0A80               	xorlw	128
  3146  000E64  0100               	movlb	0	; () banked
  3147  000E66  6FFD               	movwf	??_ejexpositivo& (0+255),b
  3148  000E68  5018               	movf	_stepcont+1,w,c
  3149  000E6A  0A80               	xorlw	128
  3150  000E6C  0100               	movlb	0	; () banked
  3151  000E6E  59FD               	subwfb	??_ejexpositivo& (0+255),w,b
  3152  000E70  A0D8               	btfss	status,0,c
  3153                           
  3154                           ; BSR set to: 0
  3155                           
  3156                           ; BSR set to: 0
  3157  000E72  0012               	return		;funcret
  3158  000E74  FFFF               	dw	65535	; assembler added errata NOP
  3159  000E76  D6CB               	goto	l2777
  3160  000E78  FFFF               	dw	65535	; errata NOP
  3161  000E7A                     __end_of_ejexpositivo:
  3162                           	opt stack 0
  3163                           tblptru	equ	0xFF8
  3164                           tblptrh	equ	0xFF7
  3165                           tblptrl	equ	0xFF6
  3166                           tablat	equ	0xFF5
  3167                           prodh	equ	0xFF4
  3168                           prodl	equ	0xFF3
  3169                           postinc0	equ	0xFEE
  3170                           wreg	equ	0xFE8
  3171                           indf1	equ	0xFE7
  3172                           postdec1	equ	0xFE5
  3173                           fsr1h	equ	0xFE2
  3174                           fsr1l	equ	0xFE1
  3175                           indf2	equ	0xFDF
  3176                           postinc2	equ	0xFDE
  3177                           fsr2h	equ	0xFDA
  3178                           fsr2l	equ	0xFD9
  3179                           status	equ	0xFD8
  3180                           
  3181 ;; *************** function _ejexnegativo *****************
  3182 ;; Defined at:
  3183 ;;		line 321 in file "main.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;  paso2           2   25[BANK0 ] int 
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3197 ;;      Params:         0       2       0       0       0       0       0
  3198 ;;      Locals:         0       0       0       0       0       0       0
  3199 ;;      Temps:          0       2       0       0       0       0       0
  3200 ;;      Totals:         0       4       0       0       0       0       0
  3201 ;;Total ram usage:        4 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    4
  3204 ;; This function calls:
  3205 ;;		_enviarTrama
  3206 ;;		_sprintf
  3207 ;; This function is called by:
  3208 ;;		_main
  3209 ;; This function uses a non-reentrant model
  3210 ;;
  3211                           
  3212                           	psect	text8
  3213  0010E0                     __ptext8:
  3214                           	opt stack 0
  3215  0010E0                     _ejexnegativo:
  3216                           	opt stack 0
  3217  0010E0  FFFF               	dw	65535	; assembler added errata NOP
  3218                           
  3219                           ;main.c: 322: while (stepcont >= paso2) {
  3220                           
  3221                           ; BSR set to: 0
  3222                           ;incstack = 0
  3223  0010E2  D11F               	goto	l2945
  3224  0010E4                     l2867:
  3225  0010E4  FFFF               	dw	65535	; assembler added errata NOP
  3226                           
  3227                           ;main.c: 323: movimiento = 1 ;
  3228  0010E6  0E00               	movlw	0
  3229  0010E8  6E2A               	movwf	_movimiento+1,c
  3230  0010EA  0E01               	movlw	1
  3231  0010EC  6E29               	movwf	_movimiento,c
  3232                           
  3233                           ;main.c: 324: if (actualstep > 7) {
  3234  0010EE  BE16               	btfsc	_actualstep+1,7,c
  3235  0010F0  D00A               	goto	l2873
  3236  0010F2  5016               	movf	_actualstep+1,w,c
  3237  0010F4  E104               	bnz	u2220
  3238  0010F6  0E08               	movlw	8
  3239  0010F8  5C15               	subwf	_actualstep,w,c
  3240  0010FA  A0D8               	btfss	status,0,c
  3241  0010FC  D004               	goto	l2873
  3242  0010FE                     u2220:
  3243                           
  3244                           ;main.c: 325: actualstep = 0;
  3245  0010FE  0E00               	movlw	0
  3246  001100  6E16               	movwf	_actualstep+1,c
  3247  001102  0E00               	movlw	0
  3248  001104  6E15               	movwf	_actualstep,c
  3249  001106                     l2873:
  3250  001106  FFFF               	dw	65535	; assembler added errata NOP
  3251                           
  3252                           ;main.c: 326: }
  3253                           ;main.c: 327: sprintf(salida, "stepcount : %d ", stepcont);
  3254  001108  0E9C               	movlw	low _salida
  3255  00110A  0100               	movlb	0	; () banked
  3256  00110C  6FED               	movwf	sprintf@sp& (0+255),b
  3257  00110E  0E00               	movlw	high _salida
  3258  001110  0100               	movlb	0	; () banked
  3259  001112  6FEE               	movwf	(sprintf@sp+1)& (0+255),b
  3260  001114  0E3A               	movlw	low STR_1
  3261  001116  0100               	movlb	0	; () banked
  3262  001118  6FEF               	movwf	sprintf@f& (0+255),b
  3263  00111A  0E06               	movlw	high STR_1
  3264  00111C  0100               	movlb	0	; () banked
  3265  00111E  6FF0               	movwf	(sprintf@f+1)& (0+255),b
  3266  001120  C017  F0F1         	movff	_stepcont,?_sprintf+4
  3267  001124  C018  F0F2         	movff	_stepcont+1,?_sprintf+5
  3268  001128  ECA3  F009         	call	_sprintf	;wreg free
  3269                           
  3270                           ;main.c: 328: enviarTrama(salida);
  3271  00112C  0E9C               	movlw	low _salida
  3272  00112E  0100               	movlb	0	; () banked
  3273  001130  6FE2               	movwf	enviarTrama@datos& (0+255),b
  3274  001132  0E00               	movlw	high _salida
  3275  001134  0100               	movlb	0	; () banked
  3276  001136  6FE3               	movwf	(enviarTrama@datos+1)& (0+255),b
  3277  001138  ECA8  F00B         	call	_enviarTrama	;wreg free
  3278                           
  3279                           ;main.c: 330: switch (actualstep) {
  3280  00113C  D0CE               	goto	l2943
  3281  00113E                     l2877:
  3282  00113E  FFFF               	dw	65535	; assembler added errata NOP
  3283                           
  3284                           ;main.c: 332: LATA = 0b1001;
  3285  001140  0E09               	movlw	9
  3286  001142  6E89               	movwf	3977,c	;volatile
  3287                           
  3288                           ;main.c: 333: for (i = 0; i <= vel; i++);
  3289  001144  0E00               	movlw	0
  3290  001146  6E06               	movwf	_i+1,c
  3291  001148  0E00               	movlw	0
  3292  00114A  6E05               	movwf	_i,c
  3293  00114C  D003               	goto	l2881
  3294  00114E                     l2879:
  3295  00114E  FFFF               	dw	65535	; assembler added errata NOP
  3296  001150  4A05               	infsnz	_i,f,c
  3297  001152  2A06               	incf	_i+1,f,c
  3298  001154                     l2881:
  3299  001154  FFFF               	dw	65535	; assembler added errata NOP
  3300  001156  5005               	movf	_i,w,c
  3301  001158  5C5B               	subwf	_vel,w,c
  3302  00115A  505C               	movf	_vel+1,w,c
  3303  00115C  0A80               	xorlw	128
  3304  00115E  0100               	movlb	0	; () banked
  3305  001160  6FFD               	movwf	??_ejexnegativo& (0+255),b
  3306  001162  5006               	movf	_i+1,w,c
  3307  001164  0A80               	xorlw	128
  3308  001166  0100               	movlb	0	; () banked
  3309  001168  59FD               	subwfb	??_ejexnegativo& (0+255),w,b
  3310  00116A  A0D8               	btfss	status,0,c
  3311  00116C  D0AF               	goto	l2939
  3312  00116E  D7EF               	goto	l2879
  3313  001170                     l2885:
  3314  001170  FFFF               	dw	65535	; assembler added errata NOP
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;main.c: 339: LATA = 0b1000;
  3318  001172  0E08               	movlw	8
  3319  001174  6E89               	movwf	3977,c	;volatile
  3320                           
  3321                           ;main.c: 340: for (i = 0; i <= vel; i++);
  3322  001176  0E00               	movlw	0
  3323  001178  6E06               	movwf	_i+1,c
  3324  00117A  0E00               	movlw	0
  3325  00117C  6E05               	movwf	_i,c
  3326  00117E  D003               	goto	l2889
  3327  001180                     l2887:
  3328  001180  FFFF               	dw	65535	; assembler added errata NOP
  3329                           
  3330                           ; BSR set to: 0
  3331  001182  4A05               	infsnz	_i,f,c
  3332  001184  2A06               	incf	_i+1,f,c
  3333  001186                     l2889:
  3334  001186  FFFF               	dw	65535	; assembler added errata NOP
  3335                           
  3336                           ; BSR set to: 0
  3337  001188  5005               	movf	_i,w,c
  3338  00118A  5C5B               	subwf	_vel,w,c
  3339  00118C  505C               	movf	_vel+1,w,c
  3340  00118E  0A80               	xorlw	128
  3341  001190  0100               	movlb	0	; () banked
  3342  001192  6FFD               	movwf	??_ejexnegativo& (0+255),b
  3343  001194  5006               	movf	_i+1,w,c
  3344  001196  0A80               	xorlw	128
  3345  001198  0100               	movlb	0	; () banked
  3346  00119A  59FD               	subwfb	??_ejexnegativo& (0+255),w,b
  3347  00119C  A0D8               	btfss	status,0,c
  3348  00119E  D096               	goto	l2939
  3349  0011A0  D7EF               	goto	l2887
  3350  0011A2                     l2893:
  3351  0011A2  FFFF               	dw	65535	; assembler added errata NOP
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;main.c: 345: LATA = 0b1100;
  3355  0011A4  0E0C               	movlw	12
  3356  0011A6  6E89               	movwf	3977,c	;volatile
  3357                           
  3358                           ;main.c: 346: for (i = 0; i <= vel; i++);
  3359  0011A8  0E00               	movlw	0
  3360  0011AA  6E06               	movwf	_i+1,c
  3361  0011AC  0E00               	movlw	0
  3362  0011AE  6E05               	movwf	_i,c
  3363  0011B0  D003               	goto	l2897
  3364  0011B2                     l2895:
  3365  0011B2  FFFF               	dw	65535	; assembler added errata NOP
  3366                           
  3367                           ; BSR set to: 0
  3368  0011B4  4A05               	infsnz	_i,f,c
  3369  0011B6  2A06               	incf	_i+1,f,c
  3370  0011B8                     l2897:
  3371  0011B8  FFFF               	dw	65535	; assembler added errata NOP
  3372                           
  3373                           ; BSR set to: 0
  3374  0011BA  5005               	movf	_i,w,c
  3375  0011BC  5C5B               	subwf	_vel,w,c
  3376  0011BE  505C               	movf	_vel+1,w,c
  3377  0011C0  0A80               	xorlw	128
  3378  0011C2  0100               	movlb	0	; () banked
  3379  0011C4  6FFD               	movwf	??_ejexnegativo& (0+255),b
  3380  0011C6  5006               	movf	_i+1,w,c
  3381  0011C8  0A80               	xorlw	128
  3382  0011CA  0100               	movlb	0	; () banked
  3383  0011CC  59FD               	subwfb	??_ejexnegativo& (0+255),w,b
  3384  0011CE  A0D8               	btfss	status,0,c
  3385  0011D0  D07D               	goto	l2939
  3386  0011D2  D7EF               	goto	l2895
  3387  0011D4                     l2901:
  3388  0011D4  FFFF               	dw	65535	; assembler added errata NOP
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;main.c: 352: LATA = 0b0100;
  3392  0011D6  0E04               	movlw	4
  3393  0011D8  6E89               	movwf	3977,c	;volatile
  3394                           
  3395                           ;main.c: 353: for (i = 0; i <= vel; i++);
  3396  0011DA  0E00               	movlw	0
  3397  0011DC  6E06               	movwf	_i+1,c
  3398  0011DE  0E00               	movlw	0
  3399  0011E0  6E05               	movwf	_i,c
  3400  0011E2  D003               	goto	l2905
  3401  0011E4                     l2903:
  3402  0011E4  FFFF               	dw	65535	; assembler added errata NOP
  3403                           
  3404                           ; BSR set to: 0
  3405  0011E6  4A05               	infsnz	_i,f,c
  3406  0011E8  2A06               	incf	_i+1,f,c
  3407  0011EA                     l2905:
  3408  0011EA  FFFF               	dw	65535	; assembler added errata NOP
  3409                           
  3410                           ; BSR set to: 0
  3411  0011EC  5005               	movf	_i,w,c
  3412  0011EE  5C5B               	subwf	_vel,w,c
  3413  0011F0  505C               	movf	_vel+1,w,c
  3414  0011F2  0A80               	xorlw	128
  3415  0011F4  0100               	movlb	0	; () banked
  3416  0011F6  6FFD               	movwf	??_ejexnegativo& (0+255),b
  3417  0011F8  5006               	movf	_i+1,w,c
  3418  0011FA  0A80               	xorlw	128
  3419  0011FC  0100               	movlb	0	; () banked
  3420  0011FE  59FD               	subwfb	??_ejexnegativo& (0+255),w,b
  3421  001200  A0D8               	btfss	status,0,c
  3422  001202  D064               	goto	l2939
  3423  001204  D7EF               	goto	l2903
  3424  001206                     l2909:
  3425  001206  FFFF               	dw	65535	; assembler added errata NOP
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;main.c: 358: LATA = 0b0110;
  3429  001208  0E06               	movlw	6
  3430  00120A  6E89               	movwf	3977,c	;volatile
  3431                           
  3432                           ;main.c: 359: for (i = 0; i <= vel; i++);
  3433  00120C  0E00               	movlw	0
  3434  00120E  6E06               	movwf	_i+1,c
  3435  001210  0E00               	movlw	0
  3436  001212  6E05               	movwf	_i,c
  3437  001214  D003               	goto	l2913
  3438  001216                     l2911:
  3439  001216  FFFF               	dw	65535	; assembler added errata NOP
  3440                           
  3441                           ; BSR set to: 0
  3442  001218  4A05               	infsnz	_i,f,c
  3443  00121A  2A06               	incf	_i+1,f,c
  3444  00121C                     l2913:
  3445  00121C  FFFF               	dw	65535	; assembler added errata NOP
  3446                           
  3447                           ; BSR set to: 0
  3448  00121E  5005               	movf	_i,w,c
  3449  001220  5C5B               	subwf	_vel,w,c
  3450  001222  505C               	movf	_vel+1,w,c
  3451  001224  0A80               	xorlw	128
  3452  001226  0100               	movlb	0	; () banked
  3453  001228  6FFD               	movwf	??_ejexnegativo& (0+255),b
  3454  00122A  5006               	movf	_i+1,w,c
  3455  00122C  0A80               	xorlw	128
  3456  00122E  0100               	movlb	0	; () banked
  3457  001230  59FD               	subwfb	??_ejexnegativo& (0+255),w,b
  3458  001232  A0D8               	btfss	status,0,c
  3459  001234  D04B               	goto	l2939
  3460  001236  D7EF               	goto	l2911
  3461  001238                     l2917:
  3462  001238  FFFF               	dw	65535	; assembler added errata NOP
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;main.c: 364: LATA = 0b0010;
  3466  00123A  0E02               	movlw	2
  3467  00123C  6E89               	movwf	3977,c	;volatile
  3468                           
  3469                           ;main.c: 365: for (i = 0; i <= vel; i++);
  3470  00123E  0E00               	movlw	0
  3471  001240  6E06               	movwf	_i+1,c
  3472  001242  0E00               	movlw	0
  3473  001244  6E05               	movwf	_i,c
  3474  001246  D003               	goto	l2921
  3475  001248                     l2919:
  3476  001248  FFFF               	dw	65535	; assembler added errata NOP
  3477                           
  3478                           ; BSR set to: 0
  3479  00124A  4A05               	infsnz	_i,f,c
  3480  00124C  2A06               	incf	_i+1,f,c
  3481  00124E                     l2921:
  3482  00124E  FFFF               	dw	65535	; assembler added errata NOP
  3483                           
  3484                           ; BSR set to: 0
  3485  001250  5005               	movf	_i,w,c
  3486  001252  5C5B               	subwf	_vel,w,c
  3487  001254  505C               	movf	_vel+1,w,c
  3488  001256  0A80               	xorlw	128
  3489  001258  0100               	movlb	0	; () banked
  3490  00125A  6FFD               	movwf	??_ejexnegativo& (0+255),b
  3491  00125C  5006               	movf	_i+1,w,c
  3492  00125E  0A80               	xorlw	128
  3493  001260  0100               	movlb	0	; () banked
  3494  001262  59FD               	subwfb	??_ejexnegativo& (0+255),w,b
  3495  001264  A0D8               	btfss	status,0,c
  3496  001266  D032               	goto	l2939
  3497  001268  D7EF               	goto	l2919
  3498  00126A                     l2925:
  3499  00126A  FFFF               	dw	65535	; assembler added errata NOP
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;main.c: 371: LATA = 0b0011;
  3503  00126C  0E03               	movlw	3
  3504  00126E  6E89               	movwf	3977,c	;volatile
  3505                           
  3506                           ;main.c: 372: for (i = 0; i <= vel; i++);
  3507  001270  0E00               	movlw	0
  3508  001272  6E06               	movwf	_i+1,c
  3509  001274  0E00               	movlw	0
  3510  001276  6E05               	movwf	_i,c
  3511  001278  D003               	goto	l2929
  3512  00127A                     l2927:
  3513  00127A  FFFF               	dw	65535	; assembler added errata NOP
  3514                           
  3515                           ; BSR set to: 0
  3516  00127C  4A05               	infsnz	_i,f,c
  3517  00127E  2A06               	incf	_i+1,f,c
  3518  001280                     l2929:
  3519  001280  FFFF               	dw	65535	; assembler added errata NOP
  3520                           
  3521                           ; BSR set to: 0
  3522  001282  5005               	movf	_i,w,c
  3523  001284  5C5B               	subwf	_vel,w,c
  3524  001286  505C               	movf	_vel+1,w,c
  3525  001288  0A80               	xorlw	128
  3526  00128A  0100               	movlb	0	; () banked
  3527  00128C  6FFD               	movwf	??_ejexnegativo& (0+255),b
  3528  00128E  5006               	movf	_i+1,w,c
  3529  001290  0A80               	xorlw	128
  3530  001292  0100               	movlb	0	; () banked
  3531  001294  59FD               	subwfb	??_ejexnegativo& (0+255),w,b
  3532  001296  A0D8               	btfss	status,0,c
  3533  001298  D019               	goto	l2939
  3534  00129A  D7EF               	goto	l2927
  3535  00129C                     l2933:
  3536  00129C  FFFF               	dw	65535	; assembler added errata NOP
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;main.c: 377: LATA = 0b0001;
  3540  00129E  0E01               	movlw	1
  3541  0012A0  6E89               	movwf	3977,c	;volatile
  3542                           
  3543                           ;main.c: 378: for (i = 0; i <= vel; i++);
  3544  0012A2  0E00               	movlw	0
  3545  0012A4  6E06               	movwf	_i+1,c
  3546  0012A6  0E00               	movlw	0
  3547  0012A8  6E05               	movwf	_i,c
  3548  0012AA  D003               	goto	l2937
  3549  0012AC                     l2935:
  3550  0012AC  FFFF               	dw	65535	; assembler added errata NOP
  3551                           
  3552                           ; BSR set to: 0
  3553  0012AE  4A05               	infsnz	_i,f,c
  3554  0012B0  2A06               	incf	_i+1,f,c
  3555  0012B2                     l2937:
  3556  0012B2  FFFF               	dw	65535	; assembler added errata NOP
  3557                           
  3558                           ; BSR set to: 0
  3559  0012B4  5005               	movf	_i,w,c
  3560  0012B6  5C5B               	subwf	_vel,w,c
  3561  0012B8  505C               	movf	_vel+1,w,c
  3562  0012BA  0A80               	xorlw	128
  3563  0012BC  0100               	movlb	0	; () banked
  3564  0012BE  6FFD               	movwf	??_ejexnegativo& (0+255),b
  3565  0012C0  5006               	movf	_i+1,w,c
  3566  0012C2  0A80               	xorlw	128
  3567  0012C4  0100               	movlb	0	; () banked
  3568  0012C6  59FD               	subwfb	??_ejexnegativo& (0+255),w,b
  3569  0012C8  B0D8               	btfsc	status,0,c
  3570  0012CA  D7F0               	goto	l2935
  3571  0012CC                     l2939:
  3572  0012CC  FFFF               	dw	65535	; assembler added errata NOP
  3573                           
  3574                           ; BSR set to: 0
  3575                           ;main.c: 379: stepcont--;
  3576  0012CE  0617               	decf	_stepcont,f,c
  3577  0012D0  A0D8               	btfss	status,0,c
  3578  0012D2  0618               	decf	_stepcont+1,f,c
  3579                           
  3580                           ;main.c: 380: actualstep++;
  3581  0012D4  4A15               	infsnz	_actualstep,f,c
  3582  0012D6  2A16               	incf	_actualstep+1,f,c
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;main.c: 382: }
  3586                           
  3587                           ;main.c: 381: break;
  3588  0012D8  D024               	goto	l2945
  3589  0012DA                     l2943:
  3590  0012DA  FFFF               	dw	65535	; assembler added errata NOP
  3591  0012DC  C015  F0FD         	movff	_actualstep,??_ejexnegativo
  3592  0012E0  C016  F0FE         	movff	_actualstep+1,??_ejexnegativo+1
  3593                           
  3594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3595                           ; Switch size 1, requested type "space"
  3596                           ; Number of cases is 1, Range of values is 0 to 0
  3597                           ; switch strategies available:
  3598                           ; Name         Instructions Cycles
  3599                           ; simple_byte            4     3 (average)
  3600                           ;	Chosen strategy is simple_byte
  3601  0012E4  0100               	movlb	0	; () banked
  3602  0012E6  51FE               	movf	(??_ejexnegativo+1)& (0+255),w,b
  3603  0012E8  0A00               	xorlw	0	; case 0
  3604  0012EA  A4D8               	btfss	status,2,c
  3605  0012EC  D01A               	goto	l2945
  3606                           
  3607                           ; BSR set to: 0
  3608                           ; Switch size 1, requested type "space"
  3609                           ; Number of cases is 8, Range of values is 0 to 7
  3610                           ; switch strategies available:
  3611                           ; Name         Instructions Cycles
  3612                           ; simple_byte           25    13 (average)
  3613                           ;	Chosen strategy is simple_byte
  3614  0012EE  0100               	movlb	0	; () banked
  3615  0012F0  51FD               	movf	??_ejexnegativo& (0+255),w,b
  3616  0012F2  0A00               	xorlw	0	; case 0
  3617  0012F4  B4D8               	btfsc	status,2,c
  3618  0012F6  D723               	goto	l2877
  3619  0012F8  0A01               	xorlw	1	; case 1
  3620  0012FA  B4D8               	btfsc	status,2,c
  3621  0012FC  D739               	goto	l2885
  3622  0012FE  0A03               	xorlw	3	; case 2
  3623  001300  B4D8               	btfsc	status,2,c
  3624  001302  D74F               	goto	l2893
  3625  001304  0A01               	xorlw	1	; case 3
  3626  001306  B4D8               	btfsc	status,2,c
  3627  001308  D765               	goto	l2901
  3628  00130A  0A07               	xorlw	7	; case 4
  3629  00130C  B4D8               	btfsc	status,2,c
  3630  00130E  D77B               	goto	l2909
  3631  001310  0A01               	xorlw	1	; case 5
  3632  001312  B4D8               	btfsc	status,2,c
  3633  001314  D791               	goto	l2917
  3634  001316  0A03               	xorlw	3	; case 6
  3635  001318  B4D8               	btfsc	status,2,c
  3636  00131A  D7A7               	goto	l2925
  3637  00131C  0A01               	xorlw	1	; case 7
  3638  00131E  B4D8               	btfsc	status,2,c
  3639  001320  D7BD               	goto	l2933
  3640  001322                     l2945:
  3641  001322  FFFF               	dw	65535	; assembler added errata NOP
  3642  001324  0100               	movlb	0	; () banked
  3643  001326  51FB               	movf	ejexnegativo@paso2& (0+255),w,b
  3644  001328  5C17               	subwf	_stepcont,w,c
  3645  00132A  5018               	movf	_stepcont+1,w,c
  3646  00132C  0A80               	xorlw	128
  3647  00132E  0100               	movlb	0	; () banked
  3648  001330  6FFD               	movwf	??_ejexnegativo& (0+255),b
  3649  001332  0100               	movlb	0	; () banked
  3650  001334  51FC               	movf	(ejexnegativo@paso2+1)& (0+255),w,b
  3651  001336  0A80               	xorlw	128
  3652  001338  0100               	movlb	0	; () banked
  3653  00133A  59FD               	subwfb	??_ejexnegativo& (0+255),w,b
  3654  00133C  A0D8               	btfss	status,0,c
  3655                           
  3656                           ; BSR set to: 0
  3657                           
  3658                           ; BSR set to: 0
  3659  00133E  0012               	return		;funcret
  3660  001340  FFFF               	dw	65535	; assembler added errata NOP
  3661  001342  D6D0               	goto	l2867
  3662  001344  FFFF               	dw	65535	; errata NOP
  3663  001346                     __end_of_ejexnegativo:
  3664                           	opt stack 0
  3665                           tblptru	equ	0xFF8
  3666                           tblptrh	equ	0xFF7
  3667                           tblptrl	equ	0xFF6
  3668                           tablat	equ	0xFF5
  3669                           prodh	equ	0xFF4
  3670                           prodl	equ	0xFF3
  3671                           postinc0	equ	0xFEE
  3672                           wreg	equ	0xFE8
  3673                           indf1	equ	0xFE7
  3674                           postdec1	equ	0xFE5
  3675                           fsr1h	equ	0xFE2
  3676                           fsr1l	equ	0xFE1
  3677                           indf2	equ	0xFDF
  3678                           postinc2	equ	0xFDE
  3679                           fsr2h	equ	0xFDA
  3680                           fsr2l	equ	0xFD9
  3681                           status	equ	0xFD8
  3682                           
  3683 ;; *************** function _sprintf *****************
  3684 ;; Defined at:
  3685 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\doprnt.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;  sp              2   11[BANK0 ] PTR unsigned char 
  3688 ;;		 -> salida(25), 
  3689 ;;  f               2   13[BANK0 ] PTR const unsigned char 
  3690 ;;		 -> STR_4(16), STR_3(16), STR_2(16), STR_1(16), 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  tmpval          4    0        struct .
  3693 ;;  cp              3    0        PTR const unsigned char 
  3694 ;;  val             2   22[BANK0 ] unsigned int 
  3695 ;;  ap              2   18[BANK0 ] PTR void [1]
  3696 ;;		 -> ?_sprintf(2), 
  3697 ;;  len             2    0        unsigned int 
  3698 ;;  c               1   24[BANK0 ] char 
  3699 ;;  prec            1   21[BANK0 ] char 
  3700 ;;  flag            1   20[BANK0 ] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  2   11[BANK0 ] int 
  3703 ;; Registers used:
  3704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3710 ;;      Params:         0       6       0       0       0       0       0
  3711 ;;      Locals:         0       7       0       0       0       0       0
  3712 ;;      Temps:          0       1       0       0       0       0       0
  3713 ;;      Totals:         0      14       0       0       0       0       0
  3714 ;;Total ram usage:       14 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    3
  3717 ;; This function calls:
  3718 ;;		___lwdiv
  3719 ;;		___lwmod
  3720 ;; This function is called by:
  3721 ;;		_ejexpositivo
  3722 ;;		_ejexnegativo
  3723 ;;		_ejeypositivo
  3724 ;;		_ejeynegativo
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text9
  3729  001346                     __ptext9:
  3730                           	opt stack 0
  3731  001346                     _sprintf:
  3732                           	opt stack 0
  3733  001346  FFFF               	dw	65535	; assembler added errata NOP
  3734                           
  3735                           ;doprnt.c: 494: va_list ap;
  3736                           ;doprnt.c: 499: signed char c;
  3737                           ;doprnt.c: 506: signed char prec;
  3738                           ;doprnt.c: 508: unsigned char flag;
  3739                           ;doprnt.c: 523: union {
  3740                           ;doprnt.c: 524: unsigned long vd;
  3741                           ;doprnt.c: 525: double integ;
  3742                           ;doprnt.c: 526: } tmpval;
  3743                           ;doprnt.c: 528: unsigned int val;
  3744                           ;doprnt.c: 529: unsigned len;
  3745                           ;doprnt.c: 530: const char * cp;
  3746                           ;doprnt.c: 533: *ap = __va_start();
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;incstack = 0
  3750  001348  0EF1               	movlw	low (?_sprintf+4)
  3751  00134A  0100               	movlb	0	; () banked
  3752  00134C  6FF4               	movwf	sprintf@ap& (0+255),b
  3753  00134E  0E00               	movlw	high (?_sprintf+4)
  3754  001350  0100               	movlb	0	; () banked
  3755  001352  6FF5               	movwf	(sprintf@ap+1)& (0+255),b
  3756                           
  3757                           ;doprnt.c: 536: while(c = *f++) {
  3758  001354  D0B2               	goto	l2725
  3759  001356                     l2673:
  3760  001356  FFFF               	dw	65535	; assembler added errata NOP
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;doprnt.c: 538: if(c != '%')
  3764  001358  0E25               	movlw	37
  3765  00135A  0100               	movlb	0	; () banked
  3766  00135C  19FA               	xorwf	sprintf@c& (0+255),w,b
  3767  00135E  B4D8               	btfsc	status,2,c
  3768  001360  D00A               	goto	l2679
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;doprnt.c: 540: {
  3772                           ;doprnt.c: 541: ((*sp++ = (c)));
  3773  001362  C0ED  FFD9         	movff	sprintf@sp,fsr2l
  3774  001366  C0EE  FFDA         	movff	sprintf@sp+1,fsr2h
  3775  00136A  C0FA  FFDF         	movff	sprintf@c,indf2
  3776                           
  3777                           ; BSR set to: 0
  3778  00136E  0100               	movlb	0	; () banked
  3779  001370  4BED               	infsnz	sprintf@sp& (0+255),f,b
  3780  001372  2BEE               	incf	(sprintf@sp+1)& (0+255),f,b
  3781                           
  3782                           ;doprnt.c: 542: continue;
  3783  001374  D0A2               	goto	l2725
  3784  001376                     l2679:
  3785  001376  FFFF               	dw	65535	; assembler added errata NOP
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;doprnt.c: 543: }
  3789                           ;doprnt.c: 548: flag = 0;
  3790  001378  0E00               	movlw	0
  3791  00137A  0100               	movlb	0	; () banked
  3792  00137C  6FF6               	movwf	sprintf@flag& (0+255),b
  3793                           
  3794                           ; BSR set to: 0
  3795                           
  3796                           ; BSR set to: 0
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;doprnt.c: 822: }
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;doprnt.c: 813: continue;
  3803                           
  3804                           ;doprnt.c: 802: default:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;doprnt.c: 698: case 'i':
  3808                           ;doprnt.c: 699: break;
  3809                           
  3810                           ; BSR set to: 0
  3811                           
  3812                           ;doprnt.c: 697: case 'd':
  3813                           
  3814                           ; BSR set to: 0
  3815                           ;doprnt.c: 638: goto alldone;
  3816                           
  3817                           ;doprnt.c: 637: case 0:
  3818                           
  3819                           ;doprnt.c: 635: switch(c = *f++) {
  3820  00137E  C0EF  FFF6         	movff	sprintf@f,tblptrl
  3821  001382  C0F0  FFF7         	movff	sprintf@f+1,tblptrh
  3822  001386  0100               	movlb	0	; () banked
  3823  001388  4BEF               	infsnz	sprintf@f& (0+255),f,b
  3824  00138A  2BF0               	incf	(sprintf@f+1)& (0+255),f,b
  3825  00138C                     	if	0	;tblptru may be non-zero
  3826  00138C                     	endif
  3827  00138C                     	if	0	;tblptru may be non-zero
  3828  00138C                     	endif
  3829  00138C  0008               	tblrd		*
  3830  00138E  FFFF               	dw	65535	; errata NOP
  3831  001390  CFF5 F0FA          	movff	tablat,sprintf@c
  3832  001394  0100               	movlb	0	; () banked
  3833  001396  51FA               	movf	sprintf@c& (0+255),w,b
  3834                           
  3835                           ; Switch size 1, requested type "space"
  3836                           ; Number of cases is 3, Range of values is 0 to 105
  3837                           ; switch strategies available:
  3838                           ; Name         Instructions Cycles
  3839                           ; simple_byte           10     6 (average)
  3840                           ;	Chosen strategy is simple_byte
  3841  001398  0A00               	xorlw	0	; case 0
  3842  00139A  B4D8               	btfsc	status,2,c
  3843  00139C  D09E               	goto	l2727
  3844  00139E  0A64               	xorlw	100	; case 100
  3845  0013A0  B4D8               	btfsc	status,2,c
  3846  0013A2  D003               	goto	l2685
  3847  0013A4  0A0D               	xorlw	13	; case 105
  3848  0013A6  A4D8               	btfss	status,2,c
  3849  0013A8  D088               	goto	l2725
  3850  0013AA                     l2685:
  3851  0013AA  FFFF               	dw	65535	; assembler added errata NOP
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;doprnt.c: 1253: {
  3855                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3856  0013AC  C0F4  FFD9         	movff	sprintf@ap,fsr2l
  3857  0013B0  C0F5  FFDA         	movff	sprintf@ap+1,fsr2h
  3858  0013B4  CFDE F0F8          	movff	postinc2,sprintf@val
  3859  0013B8  CFDD F0F9          	movff	postdec2,sprintf@val+1
  3860                           
  3861                           ; BSR set to: 0
  3862  0013BC  0E02               	movlw	2
  3863  0013BE  0100               	movlb	0	; () banked
  3864  0013C0  27F4               	addwf	sprintf@ap& (0+255),f,b
  3865  0013C2  0E00               	movlw	0
  3866  0013C4  23F5               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;doprnt.c: 1261: if((int)val < 0) {
  3870  0013C6  0100               	movlb	0	; () banked
  3871  0013C8  AFF9               	btfss	(sprintf@val+1)& (0+255),7,b
  3872  0013CA  D008               	goto	l2695
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;doprnt.c: 1262: flag |= 0x03;
  3876  0013CC  0E03               	movlw	3
  3877  0013CE  0100               	movlb	0	; () banked
  3878  0013D0  13F6               	iorwf	sprintf@flag& (0+255),f,b
  3879                           
  3880                           ; BSR set to: 0
  3881                           ;doprnt.c: 1263: val = -val;
  3882  0013D2  0100               	movlb	0	; () banked
  3883  0013D4  6DF8               	negf	sprintf@val& (0+255),b
  3884  0013D6  1FF9               	comf	(sprintf@val+1)& (0+255),f,b
  3885  0013D8  B0D8               	btfsc	status,0,c
  3886  0013DA  2BF9               	incf	(sprintf@val+1)& (0+255),f,b
  3887  0013DC                     l2695:
  3888  0013DC  FFFF               	dw	65535	; assembler added errata NOP
  3889                           
  3890                           ; BSR set to: 0
  3891                           ;doprnt.c: 1264: }
  3892                           ;doprnt.c: 1266: }
  3893                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3894  0013DE  0E01               	movlw	1
  3895  0013E0  0100               	movlb	0	; () banked
  3896  0013E2  6FFA               	movwf	sprintf@c& (0+255),b
  3897  0013E4                     l2697:
  3898  0013E4  FFFF               	dw	65535	; assembler added errata NOP
  3899                           
  3900                           ; BSR set to: 0
  3901  0013E6  0E05               	movlw	5
  3902  0013E8  0100               	movlb	0	; () banked
  3903  0013EA  19FA               	xorwf	sprintf@c& (0+255),w,b
  3904  0013EC  B4D8               	btfsc	status,2,c
  3905  0013EE  D018               	goto	l2709
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;doprnt.c: 1306: if(val < dpowers[c])
  3909                           
  3910                           ; BSR set to: 0
  3911                           
  3912                           ; BSR set to: 0
  3913  0013F0  0100               	movlb	0	; () banked
  3914  0013F2  51FA               	movf	sprintf@c& (0+255),w,b
  3915  0013F4  0D02               	mullw	2
  3916  0013F6  0E01               	movlw	low _dpowers
  3917  0013F8  24F3               	addwf	prodl,w,c
  3918  0013FA  6EF6               	movwf	tblptrl,c
  3919  0013FC  0E06               	movlw	high _dpowers
  3920  0013FE  20F4               	addwfc	prodh,w,c
  3921  001400  6EF7               	movwf	tblptrh,c
  3922  001402                     	if	0	;There are less than 3 active tblptr bytes
  3923  001402                     	endif
  3924  001402  0009               	tblrd		*+
  3925  001404  FFFF               	dw	65535	; errata NOP
  3926  001406  50F5               	movf	tablat,w,c
  3927  001408  0100               	movlb	0	; () banked
  3928  00140A  5DF8               	subwf	sprintf@val& (0+255),w,b
  3929  00140C  0009               	tblrd		*+
  3930  00140E  FFFF               	dw	65535	; errata NOP
  3931  001410  50F5               	movf	tablat,w,c
  3932  001412  0100               	movlb	0	; () banked
  3933  001414  59F9               	subwfb	(sprintf@val+1)& (0+255),w,b
  3934  001416  A0D8               	btfss	status,0,c
  3935  001418  D003               	goto	l2709
  3936                           
  3937                           ; BSR set to: 0
  3938                           
  3939                           ; BSR set to: 0
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;doprnt.c: 1307: break;
  3943  00141A  0100               	movlb	0	; () banked
  3944  00141C  2BFA               	incf	sprintf@c& (0+255),f,b
  3945  00141E  D7E2               	goto	l2697
  3946  001420                     l2709:
  3947  001420  FFFF               	dw	65535	; assembler added errata NOP
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;doprnt.c: 1422: {
  3951                           ;doprnt.c: 1438: if(flag & 0x03)
  3952  001422  C0F6  F0F3         	movff	sprintf@flag,??_sprintf
  3953  001426  0E03               	movlw	3
  3954  001428  0100               	movlb	0	; () banked
  3955  00142A  17F3               	andwf	??_sprintf& (0+255),f,b
  3956  00142C  B4D8               	btfsc	status,2,c
  3957  00142E  D009               	goto	l2715
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3961  001430  C0ED  FFD9         	movff	sprintf@sp,fsr2l
  3962  001434  C0EE  FFDA         	movff	sprintf@sp+1,fsr2h
  3963  001438  0E2D               	movlw	45
  3964  00143A  6EDF               	movwf	indf2,c
  3965                           
  3966                           ; BSR set to: 0
  3967  00143C  0100               	movlb	0	; () banked
  3968  00143E  4BED               	infsnz	sprintf@sp& (0+255),f,b
  3969  001440  2BEE               	incf	(sprintf@sp+1)& (0+255),f,b
  3970  001442                     l2715:
  3971  001442  FFFF               	dw	65535	; assembler added errata NOP
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;doprnt.c: 1469: }
  3975                           ;doprnt.c: 1472: prec = c;
  3976  001444  C0FA  F0F7         	movff	sprintf@c,sprintf@prec
  3977                           
  3978                           ;doprnt.c: 1474: while(prec--) {
  3979  001448  D031               	goto	l2723
  3980  00144A                     l2717:
  3981  00144A  FFFF               	dw	65535	; assembler added errata NOP
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;doprnt.c: 1478: {
  3985                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3986  00144C  0100               	movlb	0	; () banked
  3987  00144E  51F7               	movf	sprintf@prec& (0+255),w,b
  3988  001450  0D02               	mullw	2
  3989  001452  0E01               	movlw	low _dpowers
  3990  001454  24F3               	addwf	prodl,w,c
  3991  001456  6EF6               	movwf	tblptrl,c
  3992  001458  0E06               	movlw	high _dpowers
  3993  00145A  20F4               	addwfc	prodh,w,c
  3994  00145C  6EF7               	movwf	tblptrh,c
  3995  00145E                     	if	0	;There are less than 3 active tblptr bytes
  3996  00145E                     	endif
  3997  00145E  0009               	tblrd		*+
  3998  001460  FFFF               	dw	65535	; errata NOP
  3999  001462  CFF5 F0E4          	movff	tablat,___lwdiv@divisor
  4000  001466  000A               	tblrd		*-
  4001  001468  FFFF               	dw	65535	; errata NOP
  4002  00146A  CFF5 F0E5          	movff	tablat,___lwdiv@divisor+1
  4003  00146E  C0F8  F0E2         	movff	sprintf@val,___lwdiv@dividend
  4004  001472  C0F9  F0E3         	movff	sprintf@val+1,___lwdiv@dividend+1
  4005  001476  EC65  F00B         	call	___lwdiv	;wreg free
  4006  00147A  C0E2  F0E9         	movff	?___lwdiv,___lwmod@dividend
  4007  00147E  C0E3  F0EA         	movff	?___lwdiv+1,___lwmod@dividend+1
  4008  001482  0E00               	movlw	0
  4009  001484  0100               	movlb	0	; () banked
  4010  001486  6FEC               	movwf	(___lwmod@divisor+1)& (0+255),b
  4011  001488  0E0A               	movlw	10
  4012  00148A  6FEB               	movwf	___lwmod@divisor& (0+255),b
  4013  00148C  ECE5  F00B         	call	___lwmod	;wreg free
  4014  001490  0100               	movlb	0	; () banked
  4015  001492  51E9               	movf	?___lwmod& (0+255),w,b
  4016  001494  0F30               	addlw	48
  4017  001496  0100               	movlb	0	; () banked
  4018  001498  6FFA               	movwf	sprintf@c& (0+255),b
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;doprnt.c: 1523: }
  4022                           ;doprnt.c: 1524: ((*sp++ = (c)));
  4023  00149A  C0ED  FFD9         	movff	sprintf@sp,fsr2l
  4024  00149E  C0EE  FFDA         	movff	sprintf@sp+1,fsr2h
  4025  0014A2  C0FA  FFDF         	movff	sprintf@c,indf2
  4026                           
  4027                           ; BSR set to: 0
  4028  0014A6  0100               	movlb	0	; () banked
  4029  0014A8  4BED               	infsnz	sprintf@sp& (0+255),f,b
  4030  0014AA  2BEE               	incf	(sprintf@sp+1)& (0+255),f,b
  4031  0014AC                     l2723:
  4032  0014AC  FFFF               	dw	65535	; assembler added errata NOP
  4033                           
  4034                           ; BSR set to: 0
  4035  0014AE  0100               	movlb	0	; () banked
  4036  0014B0  07F7               	decf	sprintf@prec& (0+255),f,b
  4037  0014B2  0100               	movlb	0	; () banked
  4038  0014B4  29F7               	incf	sprintf@prec& (0+255),w,b
  4039  0014B6  A4D8               	btfss	status,2,c
  4040  0014B8  D7C8               	goto	l2717
  4041  0014BA                     l2725:
  4042  0014BA  FFFF               	dw	65535	; assembler added errata NOP
  4043                           
  4044                           ; BSR set to: 0
  4045  0014BC  C0EF  FFF6         	movff	sprintf@f,tblptrl
  4046  0014C0  C0F0  FFF7         	movff	sprintf@f+1,tblptrh
  4047  0014C4  0100               	movlb	0	; () banked
  4048  0014C6  4BEF               	infsnz	sprintf@f& (0+255),f,b
  4049  0014C8  2BF0               	incf	(sprintf@f+1)& (0+255),f,b
  4050  0014CA                     	if	0	;tblptru may be non-zero
  4051  0014CA                     	endif
  4052  0014CA                     	if	0	;tblptru may be non-zero
  4053  0014CA                     	endif
  4054  0014CA  0008               	tblrd		*
  4055  0014CC  FFFF               	dw	65535	; errata NOP
  4056  0014CE  CFF5 F0FA          	movff	tablat,sprintf@c
  4057  0014D2  0100               	movlb	0	; () banked
  4058  0014D4  51FA               	movf	sprintf@c& (0+255),w,b
  4059  0014D6  A4D8               	btfss	status,2,c
  4060  0014D8  D73E               	goto	l2673
  4061  0014DA                     l2727:
  4062  0014DA  FFFF               	dw	65535	; assembler added errata NOP
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;doprnt.c: 1538: *sp = 0;
  4066  0014DC  C0ED  FFD9         	movff	sprintf@sp,fsr2l
  4067  0014E0  C0EE  FFDA         	movff	sprintf@sp+1,fsr2h
  4068  0014E4  0E00               	movlw	0
  4069  0014E6  6EDF               	movwf	indf2,c
  4070                           
  4071                           ; BSR set to: 0
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;doprnt.c: 1540: return 0;
  4075                           ;	Return value of _sprintf is never used
  4076  0014E8  0012               	return		;funcret
  4077  0014EA  FFFF               	dw	65535	; errata NOP
  4078  0014EC                     __end_of_sprintf:
  4079                           	opt stack 0
  4080                           tblptru	equ	0xFF8
  4081                           tblptrh	equ	0xFF7
  4082                           tblptrl	equ	0xFF6
  4083                           tablat	equ	0xFF5
  4084                           prodh	equ	0xFF4
  4085                           prodl	equ	0xFF3
  4086                           postinc0	equ	0xFEE
  4087                           wreg	equ	0xFE8
  4088                           indf1	equ	0xFE7
  4089                           postdec1	equ	0xFE5
  4090                           fsr1h	equ	0xFE2
  4091                           fsr1l	equ	0xFE1
  4092                           indf2	equ	0xFDF
  4093                           postinc2	equ	0xFDE
  4094                           postdec2	equ	0xFDD
  4095                           fsr2h	equ	0xFDA
  4096                           fsr2l	equ	0xFD9
  4097                           status	equ	0xFD8
  4098                           
  4099 ;; *************** function ___lwmod *****************
  4100 ;; Defined at:
  4101 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\lwmod.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  dividend        2    7[BANK0 ] unsigned int 
  4104 ;;  divisor         2    9[BANK0 ] unsigned int 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  counter         1   32[COMRAM] unsigned char 
  4107 ;; Return value:  Size  Location     Type
  4108 ;;                  2    7[BANK0 ] unsigned int 
  4109 ;; Registers used:
  4110 ;;		wreg, status,2, status,0
  4111 ;; Tracked objects:
  4112 ;;		On entry : 0/0
  4113 ;;		On exit  : 0/0
  4114 ;;		Unchanged: 0/0
  4115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4116 ;;      Params:         0       4       0       0       0       0       0
  4117 ;;      Locals:         1       0       0       0       0       0       0
  4118 ;;      Temps:          0       0       0       0       0       0       0
  4119 ;;      Totals:         1       4       0       0       0       0       0
  4120 ;;Total ram usage:        5 bytes
  4121 ;; Hardware stack levels used:    1
  4122 ;; Hardware stack levels required when called:    2
  4123 ;; This function calls:
  4124 ;;		Nothing
  4125 ;; This function is called by:
  4126 ;;		_sprintf
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text10
  4131  0017CA                     __ptext10:
  4132                           	opt stack 0
  4133  0017CA                     ___lwmod:
  4134                           	opt stack 0
  4135  0017CA  FFFF               	dw	65535	; assembler added errata NOP
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;incstack = 0
  4139  0017CC  0100               	movlb	0	; () banked
  4140  0017CE  51EB               	movf	___lwmod@divisor& (0+255),w,b
  4141  0017D0  0100               	movlb	0	; () banked
  4142  0017D2  11EC               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  4143  0017D4  B4D8               	btfsc	status,2,c
  4144  0017D6  D027               	goto	l862
  4145                           
  4146                           ; BSR set to: 0
  4147  0017D8  0E01               	movlw	1
  4148  0017DA  6E54               	movwf	___lwmod@counter,c
  4149  0017DC  D006               	goto	l2649
  4150  0017DE                     l2647:
  4151  0017DE  FFFF               	dw	65535	; assembler added errata NOP
  4152                           
  4153                           ; BSR set to: 0
  4154  0017E0  0100               	movlb	0	; () banked
  4155  0017E2  90D8               	bcf	status,0,c
  4156  0017E4  37EB               	rlcf	___lwmod@divisor& (0+255),f,b
  4157  0017E6  37EC               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  4158  0017E8  2A54               	incf	___lwmod@counter,f,c
  4159  0017EA                     l2649:
  4160  0017EA  FFFF               	dw	65535	; assembler added errata NOP
  4161                           
  4162                           ; BSR set to: 0
  4163  0017EC  0100               	movlb	0	; () banked
  4164  0017EE  AFEC               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  4165  0017F0  D7F6               	goto	l2647
  4166  0017F2                     l2651:
  4167  0017F2  FFFF               	dw	65535	; assembler added errata NOP
  4168                           
  4169                           ; BSR set to: 0
  4170  0017F4  0100               	movlb	0	; () banked
  4171  0017F6  51EB               	movf	___lwmod@divisor& (0+255),w,b
  4172  0017F8  0100               	movlb	0	; () banked
  4173  0017FA  5DE9               	subwf	___lwmod@dividend& (0+255),w,b
  4174  0017FC  0100               	movlb	0	; () banked
  4175  0017FE  51EC               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4176  001800  0100               	movlb	0	; () banked
  4177  001802  59EA               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  4178  001804  A0D8               	btfss	status,0,c
  4179  001806  D008               	goto	l2655
  4180                           
  4181                           ; BSR set to: 0
  4182  001808  0100               	movlb	0	; () banked
  4183  00180A  51EB               	movf	___lwmod@divisor& (0+255),w,b
  4184  00180C  0100               	movlb	0	; () banked
  4185  00180E  5FE9               	subwf	___lwmod@dividend& (0+255),f,b
  4186  001810  0100               	movlb	0	; () banked
  4187  001812  51EC               	movf	(___lwmod@divisor+1)& (0+255),w,b
  4188  001814  0100               	movlb	0	; () banked
  4189  001816  5BEA               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  4190  001818                     l2655:
  4191  001818  FFFF               	dw	65535	; assembler added errata NOP
  4192                           
  4193                           ; BSR set to: 0
  4194  00181A  0100               	movlb	0	; () banked
  4195  00181C  90D8               	bcf	status,0,c
  4196  00181E  33EC               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  4197  001820  33EB               	rrcf	___lwmod@divisor& (0+255),f,b
  4198                           
  4199                           ; BSR set to: 0
  4200  001822  2E54               	decfsz	___lwmod@counter,f,c
  4201  001824  D7E6               	goto	l2651
  4202  001826                     l862:
  4203  001826  FFFF               	dw	65535	; assembler added errata NOP
  4204                           
  4205                           ; BSR set to: 0
  4206  001828  C0E9  F0E9         	movff	___lwmod@dividend,?___lwmod
  4207  00182C  C0EA  F0EA         	movff	___lwmod@dividend+1,?___lwmod+1
  4208                           
  4209                           ; BSR set to: 0
  4210  001830  0012               	return		;funcret
  4211  001832  FFFF               	dw	65535	; errata NOP
  4212  001834                     __end_of___lwmod:
  4213                           	opt stack 0
  4214                           tblptru	equ	0xFF8
  4215                           tblptrh	equ	0xFF7
  4216                           tblptrl	equ	0xFF6
  4217                           tablat	equ	0xFF5
  4218                           prodh	equ	0xFF4
  4219                           prodl	equ	0xFF3
  4220                           postinc0	equ	0xFEE
  4221                           wreg	equ	0xFE8
  4222                           indf1	equ	0xFE7
  4223                           postdec1	equ	0xFE5
  4224                           fsr1h	equ	0xFE2
  4225                           fsr1l	equ	0xFE1
  4226                           indf2	equ	0xFDF
  4227                           postinc2	equ	0xFDE
  4228                           postdec2	equ	0xFDD
  4229                           fsr2h	equ	0xFDA
  4230                           fsr2l	equ	0xFD9
  4231                           status	equ	0xFD8
  4232                           
  4233 ;; *************** function ___lwdiv *****************
  4234 ;; Defined at:
  4235 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  dividend        2    0[BANK0 ] unsigned int 
  4238 ;;  divisor         2    2[BANK0 ] unsigned int 
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  quotient        2    5[BANK0 ] unsigned int 
  4241 ;;  counter         1    4[BANK0 ] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  2    0[BANK0 ] unsigned int 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4251 ;;      Params:         0       4       0       0       0       0       0
  4252 ;;      Locals:         0       3       0       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0
  4254 ;;      Totals:         0       7       0       0       0       0       0
  4255 ;;Total ram usage:        7 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    2
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_sprintf
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text11
  4266  0016CA                     __ptext11:
  4267                           	opt stack 0
  4268  0016CA                     ___lwdiv:
  4269                           	opt stack 0
  4270  0016CA  FFFF               	dw	65535	; assembler added errata NOP
  4271                           
  4272                           ; BSR set to: 0
  4273                           ;incstack = 0
  4274  0016CC  0E00               	movlw	0
  4275  0016CE  0100               	movlb	0	; () banked
  4276  0016D0  6FE8               	movwf	(___lwdiv@quotient+1)& (0+255),b
  4277  0016D2  0E00               	movlw	0
  4278  0016D4  6FE7               	movwf	___lwdiv@quotient& (0+255),b
  4279                           
  4280                           ; BSR set to: 0
  4281  0016D6  0100               	movlb	0	; () banked
  4282  0016D8  51E4               	movf	___lwdiv@divisor& (0+255),w,b
  4283  0016DA  0100               	movlb	0	; () banked
  4284  0016DC  11E5               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  4285  0016DE  B4D8               	btfsc	status,2,c
  4286  0016E0  D030               	goto	l852
  4287                           
  4288                           ; BSR set to: 0
  4289  0016E2  0E01               	movlw	1
  4290  0016E4  0100               	movlb	0	; () banked
  4291  0016E6  6FE6               	movwf	___lwdiv@counter& (0+255),b
  4292  0016E8  D007               	goto	l2629
  4293  0016EA                     l2627:
  4294  0016EA  FFFF               	dw	65535	; assembler added errata NOP
  4295                           
  4296                           ; BSR set to: 0
  4297  0016EC  0100               	movlb	0	; () banked
  4298  0016EE  90D8               	bcf	status,0,c
  4299  0016F0  37E4               	rlcf	___lwdiv@divisor& (0+255),f,b
  4300  0016F2  37E5               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  4301  0016F4  0100               	movlb	0	; () banked
  4302  0016F6  2BE6               	incf	___lwdiv@counter& (0+255),f,b
  4303  0016F8                     l2629:
  4304  0016F8  FFFF               	dw	65535	; assembler added errata NOP
  4305                           
  4306                           ; BSR set to: 0
  4307  0016FA  0100               	movlb	0	; () banked
  4308  0016FC  AFE5               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  4309  0016FE  D7F5               	goto	l2627
  4310  001700                     l2631:
  4311  001700  FFFF               	dw	65535	; assembler added errata NOP
  4312                           
  4313                           ; BSR set to: 0
  4314  001702  0100               	movlb	0	; () banked
  4315  001704  90D8               	bcf	status,0,c
  4316  001706  37E7               	rlcf	___lwdiv@quotient& (0+255),f,b
  4317  001708  37E8               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  4318                           
  4319                           ; BSR set to: 0
  4320  00170A  0100               	movlb	0	; () banked
  4321  00170C  51E4               	movf	___lwdiv@divisor& (0+255),w,b
  4322  00170E  0100               	movlb	0	; () banked
  4323  001710  5DE2               	subwf	___lwdiv@dividend& (0+255),w,b
  4324  001712  0100               	movlb	0	; () banked
  4325  001714  51E5               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4326  001716  0100               	movlb	0	; () banked
  4327  001718  59E3               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  4328  00171A  A0D8               	btfss	status,0,c
  4329  00171C  D00A               	goto	l2639
  4330                           
  4331                           ; BSR set to: 0
  4332  00171E  0100               	movlb	0	; () banked
  4333  001720  51E4               	movf	___lwdiv@divisor& (0+255),w,b
  4334  001722  0100               	movlb	0	; () banked
  4335  001724  5FE2               	subwf	___lwdiv@dividend& (0+255),f,b
  4336  001726  0100               	movlb	0	; () banked
  4337  001728  51E5               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  4338  00172A  0100               	movlb	0	; () banked
  4339  00172C  5BE3               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  4340                           
  4341                           ; BSR set to: 0
  4342  00172E  0100               	movlb	0	; () banked
  4343  001730  81E7               	bsf	___lwdiv@quotient& (0+255),0,b
  4344  001732                     l2639:
  4345  001732  FFFF               	dw	65535	; assembler added errata NOP
  4346                           
  4347                           ; BSR set to: 0
  4348  001734  0100               	movlb	0	; () banked
  4349  001736  90D8               	bcf	status,0,c
  4350  001738  33E5               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  4351  00173A  33E4               	rrcf	___lwdiv@divisor& (0+255),f,b
  4352                           
  4353                           ; BSR set to: 0
  4354  00173C  0100               	movlb	0	; () banked
  4355  00173E  2FE6               	decfsz	___lwdiv@counter& (0+255),f,b
  4356  001740  D7DF               	goto	l2631
  4357  001742                     l852:
  4358  001742  FFFF               	dw	65535	; assembler added errata NOP
  4359                           
  4360                           ; BSR set to: 0
  4361  001744  C0E7  F0E2         	movff	___lwdiv@quotient,?___lwdiv
  4362  001748  C0E8  F0E3         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4363                           
  4364                           ; BSR set to: 0
  4365  00174C  0012               	return		;funcret
  4366  00174E  FFFF               	dw	65535	; errata NOP
  4367  001750                     __end_of___lwdiv:
  4368                           	opt stack 0
  4369                           tblptru	equ	0xFF8
  4370                           tblptrh	equ	0xFF7
  4371                           tblptrl	equ	0xFF6
  4372                           tablat	equ	0xFF5
  4373                           prodh	equ	0xFF4
  4374                           prodl	equ	0xFF3
  4375                           postinc0	equ	0xFEE
  4376                           wreg	equ	0xFE8
  4377                           indf1	equ	0xFE7
  4378                           postdec1	equ	0xFE5
  4379                           fsr1h	equ	0xFE2
  4380                           fsr1l	equ	0xFE1
  4381                           indf2	equ	0xFDF
  4382                           postinc2	equ	0xFDE
  4383                           postdec2	equ	0xFDD
  4384                           fsr2h	equ	0xFDA
  4385                           fsr2l	equ	0xFD9
  4386                           status	equ	0xFD8
  4387                           
  4388 ;; *************** function _enviarTrama *****************
  4389 ;; Defined at:
  4390 ;;		line 204 in file "main.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  datos           2    0[BANK0 ] PTR unsigned char 
  4393 ;;		 -> salida(25), comandonoreconocido(22), saludo(11), comando(25), 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      void 
  4398 ;; Registers used:
  4399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4405 ;;      Params:         0       2       0       0       0       0       0
  4406 ;;      Locals:         0       0       0       0       0       0       0
  4407 ;;      Temps:          0       0       0       0       0       0       0
  4408 ;;      Totals:         0       2       0       0       0       0       0
  4409 ;;Total ram usage:        2 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:    2
  4412 ;; This function calls:
  4413 ;;		Nothing
  4414 ;; This function is called by:
  4415 ;;		_main
  4416 ;;		_ejexpositivo
  4417 ;;		_ejexnegativo
  4418 ;;		_ejeypositivo
  4419 ;;		_ejeynegativo
  4420 ;; This function uses a non-reentrant model
  4421 ;;
  4422                           
  4423                           	psect	text12
  4424  001750                     __ptext12:
  4425                           	opt stack 0
  4426  001750                     _enviarTrama:
  4427                           	opt stack 0
  4428  001750  FFFF               	dw	65535	; assembler added errata NOP
  4429                           
  4430                           ;main.c: 208: while (*datos != 0) {
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;incstack = 0
  4434  001752  D019               	goto	l2665
  4435  001754                     l2661:
  4436  001754  FFFF               	dw	65535	; assembler added errata NOP
  4437                           
  4438                           ;main.c: 209: TXREG = *datos;
  4439  001756  C0E2  FFF6         	movff	enviarTrama@datos,tblptrl
  4440  00175A  C0E3  FFF7         	movff	enviarTrama@datos+1,tblptrh
  4441  00175E  6AF8               	clrf	tblptru,c
  4442  001760  0E05               	movlw	(high __ramtop+-1)
  4443  001762  64F7               	cpfsgt	tblptrh,c
  4444  001764  D004               	bra	u1937
  4445  001766  0008               	tblrd		*
  4446  001768  FFFF               	dw	65535	; errata NOP
  4447  00176A  50F5               	movf	tablat,w,c
  4448  00176C  D005               	bra	u1930
  4449  00176E                     u1937:
  4450  00176E  CFF6 FFE9          	movff	tblptrl,fsr0l
  4451  001772  CFF7 FFEA          	movff	tblptrh,fsr0h
  4452  001776  50EF               	movf	indf0,w,c
  4453  001778                     u1930:
  4454  001778  6EAD               	movwf	4013,c	;volatile
  4455  00177A                     l197:
  4456  00177A  FFFF               	dw	65535	; assembler added errata NOP
  4457  00177C  A2AC               	btfss	4012,1,c	;volatile
  4458  00177E  D7FD               	goto	l197
  4459                           
  4460                           ;main.c: 211: *datos++;
  4461  001780  0100               	movlb	0	; () banked
  4462  001782  4BE2               	infsnz	enviarTrama@datos& (0+255),f,b
  4463  001784  2BE3               	incf	(enviarTrama@datos+1)& (0+255),f,b
  4464  001786                     l2665:
  4465  001786  FFFF               	dw	65535	; assembler added errata NOP
  4466  001788  C0E2  FFF6         	movff	enviarTrama@datos,tblptrl
  4467  00178C  C0E3  FFF7         	movff	enviarTrama@datos+1,tblptrh
  4468  001790  6AF8               	clrf	tblptru,c
  4469  001792  0E05               	movlw	(high __ramtop+-1)
  4470  001794  64F7               	cpfsgt	tblptrh,c
  4471  001796  D004               	bra	u1957
  4472  001798  0008               	tblrd		*
  4473  00179A  FFFF               	dw	65535	; errata NOP
  4474  00179C  50F5               	movf	tablat,w,c
  4475  00179E  D005               	bra	u1950
  4476  0017A0                     u1957:
  4477  0017A0  CFF6 FFE9          	movff	tblptrl,fsr0l
  4478  0017A4  CFF7 FFEA          	movff	tblptrh,fsr0h
  4479  0017A8  50EF               	movf	indf0,w,c
  4480  0017AA                     u1950:
  4481  0017AA  0900               	iorlw	0
  4482  0017AC  A4D8               	btfss	status,2,c
  4483  0017AE  D7D2               	goto	l2661
  4484                           
  4485                           ;main.c: 212: }
  4486                           ;main.c: 214: TXREG = 0x0A;
  4487  0017B0  0E0A               	movlw	10
  4488  0017B2  6EAD               	movwf	4013,c	;volatile
  4489  0017B4                     l201:
  4490  0017B4  FFFF               	dw	65535	; assembler added errata NOP
  4491  0017B6  A2AC               	btfss	4012,1,c	;volatile
  4492  0017B8  D7FD               	goto	l201
  4493                           
  4494                           ;main.c: 216: TXREG = 0x0D;
  4495  0017BA  0E0D               	movlw	13
  4496  0017BC  6EAD               	movwf	4013,c	;volatile
  4497  0017BE                     l204:
  4498  0017BE  FFFF               	dw	65535	; assembler added errata NOP
  4499  0017C0  B2AC               	btfsc	4012,1,c	;volatile
  4500  0017C2  0012               	return		;funcret
  4501  0017C4  FFFF               	dw	65535	; assembler added errata NOP
  4502  0017C6  D7FB               	goto	l204
  4503  0017C8  FFFF               	dw	65535	; errata NOP
  4504  0017CA                     __end_of_enviarTrama:
  4505                           	opt stack 0
  4506                           tblptru	equ	0xFF8
  4507                           tblptrh	equ	0xFF7
  4508                           tblptrl	equ	0xFF6
  4509                           tablat	equ	0xFF5
  4510                           prodh	equ	0xFF4
  4511                           prodl	equ	0xFF3
  4512                           indf0	equ	0xFEF
  4513                           postinc0	equ	0xFEE
  4514                           fsr0h	equ	0xFEA
  4515                           fsr0l	equ	0xFE9
  4516                           wreg	equ	0xFE8
  4517                           indf1	equ	0xFE7
  4518                           postdec1	equ	0xFE5
  4519                           fsr1h	equ	0xFE2
  4520                           fsr1l	equ	0xFE1
  4521                           indf2	equ	0xFDF
  4522                           postinc2	equ	0xFDE
  4523                           postdec2	equ	0xFDD
  4524                           fsr2h	equ	0xFDA
  4525                           fsr2l	equ	0xFD9
  4526                           status	equ	0xFD8
  4527                           
  4528 ;; *************** function _apagarM2 *****************
  4529 ;; Defined at:
  4530 ;;		line 248 in file "main.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    wreg      void 
  4537 ;; Registers used:
  4538 ;;		None
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4544 ;;      Params:         0       0       0       0       0       0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0
  4547 ;;      Totals:         0       0       0       0       0       0       0
  4548 ;;Total ram usage:        0 bytes
  4549 ;; Hardware stack levels used:    1
  4550 ;; Hardware stack levels required when called:    2
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_main
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text13
  4559  0019BA                     __ptext13:
  4560                           	opt stack 0
  4561  0019BA                     _apagarM2:
  4562                           	opt stack 0
  4563  0019BA  FFFF               	dw	65535	; assembler added errata NOP
  4564                           
  4565                           ;main.c: 249: LATBbits.LB0 = 0;
  4566                           
  4567                           ;incstack = 0
  4568  0019BC  908A               	bcf	3978,0,c	;volatile
  4569                           
  4570                           ;main.c: 250: LATBbits.LB1 = 0;
  4571  0019BE  928A               	bcf	3978,1,c	;volatile
  4572                           
  4573                           ;main.c: 251: LATBbits.LB2 = 0;
  4574  0019C0  948A               	bcf	3978,2,c	;volatile
  4575                           
  4576                           ;main.c: 252: LATBbits.LB3 = 0;
  4577  0019C2  968A               	bcf	3978,3,c	;volatile
  4578  0019C4  0012               	return		;funcret
  4579  0019C6  FFFF               	dw	65535	; errata NOP
  4580  0019C8                     __end_of_apagarM2:
  4581                           	opt stack 0
  4582                           tblptru	equ	0xFF8
  4583                           tblptrh	equ	0xFF7
  4584                           tblptrl	equ	0xFF6
  4585                           tablat	equ	0xFF5
  4586                           prodh	equ	0xFF4
  4587                           prodl	equ	0xFF3
  4588                           indf0	equ	0xFEF
  4589                           postinc0	equ	0xFEE
  4590                           fsr0h	equ	0xFEA
  4591                           fsr0l	equ	0xFE9
  4592                           wreg	equ	0xFE8
  4593                           indf1	equ	0xFE7
  4594                           postdec1	equ	0xFE5
  4595                           fsr1h	equ	0xFE2
  4596                           fsr1l	equ	0xFE1
  4597                           indf2	equ	0xFDF
  4598                           postinc2	equ	0xFDE
  4599                           postdec2	equ	0xFDD
  4600                           fsr2h	equ	0xFDA
  4601                           fsr2l	equ	0xFD9
  4602                           status	equ	0xFD8
  4603                           
  4604 ;; *************** function _apagarM1 *****************
  4605 ;; Defined at:
  4606 ;;		line 245 in file "main.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;		None
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;		None
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg, status,2
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4620 ;;      Params:         0       0       0       0       0       0       0
  4621 ;;      Locals:         0       0       0       0       0       0       0
  4622 ;;      Temps:          0       0       0       0       0       0       0
  4623 ;;      Totals:         0       0       0       0       0       0       0
  4624 ;;Total ram usage:        0 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:    2
  4627 ;; This function calls:
  4628 ;;		Nothing
  4629 ;; This function is called by:
  4630 ;;		_main
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634                           	psect	text14
  4635  0019D2                     __ptext14:
  4636                           	opt stack 0
  4637  0019D2                     _apagarM1:
  4638                           	opt stack 0
  4639  0019D2  FFFF               	dw	65535	; assembler added errata NOP
  4640                           
  4641                           ;main.c: 246: LATA = 0;
  4642                           
  4643                           ;incstack = 0
  4644  0019D4  0E00               	movlw	0
  4645  0019D6  6E89               	movwf	3977,c	;volatile
  4646  0019D8  0012               	return		;funcret
  4647  0019DA  FFFF               	dw	65535	; errata NOP
  4648  0019DC                     __end_of_apagarM1:
  4649                           	opt stack 0
  4650                           tblptru	equ	0xFF8
  4651                           tblptrh	equ	0xFF7
  4652                           tblptrl	equ	0xFF6
  4653                           tablat	equ	0xFF5
  4654                           prodh	equ	0xFF4
  4655                           prodl	equ	0xFF3
  4656                           indf0	equ	0xFEF
  4657                           postinc0	equ	0xFEE
  4658                           fsr0h	equ	0xFEA
  4659                           fsr0l	equ	0xFE9
  4660                           wreg	equ	0xFE8
  4661                           indf1	equ	0xFE7
  4662                           postdec1	equ	0xFE5
  4663                           fsr1h	equ	0xFE2
  4664                           fsr1l	equ	0xFE1
  4665                           indf2	equ	0xFDF
  4666                           postinc2	equ	0xFDE
  4667                           postdec2	equ	0xFDD
  4668                           fsr2h	equ	0xFDA
  4669                           fsr2l	equ	0xFD9
  4670                           status	equ	0xFD8
  4671                           
  4672 ;; *************** function _InitApp *****************
  4673 ;; Defined at:
  4674 ;;		line 28 in file "user.c"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;		None
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;		None
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  1    wreg      void 
  4681 ;; Registers used:
  4682 ;;		wreg, status,2
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4688 ;;      Params:         0       0       0       0       0       0       0
  4689 ;;      Locals:         0       0       0       0       0       0       0
  4690 ;;      Temps:          0       0       0       0       0       0       0
  4691 ;;      Totals:         0       0       0       0       0       0       0
  4692 ;;Total ram usage:        0 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    2
  4695 ;; This function calls:
  4696 ;;		Nothing
  4697 ;; This function is called by:
  4698 ;;		_main
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text15
  4703  0018E8                     __ptext15:
  4704                           	opt stack 0
  4705  0018E8                     _InitApp:
  4706                           	opt stack 0
  4707  0018E8  FFFF               	dw	65535	; assembler added errata NOP
  4708                           
  4709                           ;user.c: 29: PORTA = 0;
  4710                           
  4711                           ;incstack = 0
  4712  0018EA  0E00               	movlw	0
  4713  0018EC  6E80               	movwf	3968,c	;volatile
  4714                           
  4715                           ;user.c: 30: PORTB = 0;
  4716  0018EE  0E00               	movlw	0
  4717  0018F0  6E81               	movwf	3969,c	;volatile
  4718                           
  4719                           ;user.c: 31: PORTC = 0;
  4720  0018F2  0E00               	movlw	0
  4721  0018F4  6E82               	movwf	3970,c	;volatile
  4722                           
  4723                           ;user.c: 33: TRISBbits.RB0 = 0;
  4724  0018F6  9093               	bcf	3987,0,c	;volatile
  4725                           
  4726                           ;user.c: 34: TRISBbits.RB1 = 0;
  4727  0018F8  9293               	bcf	3987,1,c	;volatile
  4728                           
  4729                           ;user.c: 35: TRISBbits.RB2 = 0;
  4730  0018FA  9493               	bcf	3987,2,c	;volatile
  4731                           
  4732                           ;user.c: 36: TRISBbits.RB3 = 0;
  4733  0018FC  9693               	bcf	3987,3,c	;volatile
  4734                           
  4735                           ;user.c: 38: TRISA = 0;
  4736  0018FE  0E00               	movlw	0
  4737  001900  6E92               	movwf	3986,c	;volatile
  4738                           
  4739                           ;user.c: 41: TRISBbits.RB7 = 0;
  4740  001902  9E93               	bcf	3987,7,c	;volatile
  4741                           
  4742                           ;user.c: 42: T1CONbits.RD16 = 1;
  4743  001904  8ECD               	bsf	4045,7,c	;volatile
  4744                           
  4745                           ;user.c: 43: T1CONbits.T1CKPS = 0b11;
  4746  001906  0E30               	movlw	48
  4747  001908  12CD               	iorwf	4045,f,c	;volatile
  4748                           
  4749                           ;user.c: 44: T1CONbits.TMR1CS = 0;
  4750  00190A  92CD               	bcf	4045,1,c	;volatile
  4751                           
  4752                           ;user.c: 45: T1CONbits.T1SYNC = 1;
  4753  00190C  84CD               	bsf	4045,2,c	;volatile
  4754                           
  4755                           ;user.c: 46: T1CONbits.TMR1ON = 1;
  4756  00190E  80CD               	bsf	4045,0,c	;volatile
  4757                           
  4758                           ;user.c: 47: PIE1bits.TMR1IE = 1;
  4759  001910  809D               	bsf	3997,0,c	;volatile
  4760                           
  4761                           ;user.c: 48: IPR1bits.TMR1IP = 1;
  4762  001912  809F               	bsf	3999,0,c	;volatile
  4763                           
  4764                           ;user.c: 49: TMR1 = 3036;
  4765  001914  0E0B               	movlw	11
  4766  001916  6ECF               	movwf	4047,c	;volatile
  4767  001918  0EDC               	movlw	220
  4768  00191A  6ECE               	movwf	4046,c	;volatile
  4769                           
  4770                           ;user.c: 50: INTCONbits.GIE = 1;
  4771  00191C  8EF2               	bsf	intcon,7,c	;volatile
  4772                           
  4773                           ;user.c: 51: INTCONbits.PEIE = 1;
  4774  00191E  8CF2               	bsf	intcon,6,c	;volatile
  4775                           
  4776                           ;user.c: 55: TRISCbits.RC7 = 1;
  4777  001920  8E94               	bsf	3988,7,c	;volatile
  4778                           
  4779                           ;user.c: 56: TRISCbits.RC6 = 0;
  4780  001922  9C94               	bcf	3988,6,c	;volatile
  4781                           
  4782                           ;user.c: 57: SPBRG = 10;
  4783  001924  0E0A               	movlw	10
  4784  001926  6EAF               	movwf	4015,c	;volatile
  4785                           
  4786                           ;user.c: 58: RCSTAbits.SPEN = 1;
  4787  001928  8EAB               	bsf	4011,7,c	;volatile
  4788                           
  4789                           ;user.c: 59: TXSTAbits.SYNC = 0;
  4790  00192A  98AC               	bcf	4012,4,c	;volatile
  4791                           
  4792                           ;user.c: 60: TXSTAbits.BRGH = 1;
  4793  00192C  84AC               	bsf	4012,2,c	;volatile
  4794                           
  4795                           ;user.c: 61: TXSTAbits.TXEN = 1;
  4796  00192E  8AAC               	bsf	4012,5,c	;volatile
  4797                           
  4798                           ;user.c: 62: RCSTAbits.CREN = 1;
  4799  001930  88AB               	bsf	4011,4,c	;volatile
  4800                           
  4801                           ;user.c: 63: PIE1bits.RCIE = 1;
  4802  001932  8A9D               	bsf	3997,5,c	;volatile
  4803                           
  4804                           ;user.c: 64: IPR1bits.RCIP = 1;
  4805  001934  8A9F               	bsf	3999,5,c	;volatile
  4806  001936  0012               	return		;funcret
  4807  001938  FFFF               	dw	65535	; errata NOP
  4808  00193A                     __end_of_InitApp:
  4809                           	opt stack 0
  4810                           tblptru	equ	0xFF8
  4811                           tblptrh	equ	0xFF7
  4812                           tblptrl	equ	0xFF6
  4813                           tablat	equ	0xFF5
  4814                           prodh	equ	0xFF4
  4815                           prodl	equ	0xFF3
  4816                           intcon	equ	0xFF2
  4817                           indf0	equ	0xFEF
  4818                           postinc0	equ	0xFEE
  4819                           fsr0h	equ	0xFEA
  4820                           fsr0l	equ	0xFE9
  4821                           wreg	equ	0xFE8
  4822                           indf1	equ	0xFE7
  4823                           postdec1	equ	0xFE5
  4824                           fsr1h	equ	0xFE2
  4825                           fsr1l	equ	0xFE1
  4826                           indf2	equ	0xFDF
  4827                           postinc2	equ	0xFDE
  4828                           postdec2	equ	0xFDD
  4829                           fsr2h	equ	0xFDA
  4830                           fsr2l	equ	0xFD9
  4831                           status	equ	0xFD8
  4832                           
  4833 ;; *************** function _ConfigureOscillator *****************
  4834 ;; Defined at:
  4835 ;;		line 24 in file "system.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		None
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4849 ;;      Params:         0       0       0       0       0       0       0
  4850 ;;      Locals:         0       0       0       0       0       0       0
  4851 ;;      Temps:          0       0       0       0       0       0       0
  4852 ;;      Totals:         0       0       0       0       0       0       0
  4853 ;;Total ram usage:        0 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    2
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_main
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text16
  4864  0019DC                     __ptext16:
  4865                           	opt stack 0
  4866  0019DC                     _ConfigureOscillator:
  4867                           	opt stack 0
  4868  0019DC  FFFF               	dw	65535	; assembler added errata NOP
  4869                           
  4870                           ;incstack = 0
  4871  0019DE  0012               	return		;funcret
  4872  0019E0  FFFF               	dw	65535	; errata NOP
  4873  0019E2                     __end_of_ConfigureOscillator:
  4874                           	opt stack 0
  4875                           tblptru	equ	0xFF8
  4876                           tblptrh	equ	0xFF7
  4877                           tblptrl	equ	0xFF6
  4878                           tablat	equ	0xFF5
  4879                           prodh	equ	0xFF4
  4880                           prodl	equ	0xFF3
  4881                           intcon	equ	0xFF2
  4882                           indf0	equ	0xFEF
  4883                           postinc0	equ	0xFEE
  4884                           fsr0h	equ	0xFEA
  4885                           fsr0l	equ	0xFE9
  4886                           wreg	equ	0xFE8
  4887                           indf1	equ	0xFE7
  4888                           postdec1	equ	0xFE5
  4889                           fsr1h	equ	0xFE2
  4890                           fsr1l	equ	0xFE1
  4891                           indf2	equ	0xFDF
  4892                           postinc2	equ	0xFDE
  4893                           postdec2	equ	0xFDD
  4894                           fsr2h	equ	0xFDA
  4895                           fsr2l	equ	0xFD9
  4896                           status	equ	0xFD8
  4897                           
  4898 ;; *************** function _low_isr *****************
  4899 ;; Defined at:
  4900 ;;		line 89 in file "interrupts.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;		None
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		None
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4914 ;;      Params:         0       0       0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0
  4916 ;;      Temps:         17       0       0       0       0       0       0
  4917 ;;      Totals:        17       0       0       0       0       0       0
  4918 ;;Total ram usage:       17 bytes
  4919 ;; Hardware stack levels used:    1
  4920 ;; Hardware stack levels required when called:    1
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		Interrupt level 1
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	intcodelo
  4929  000018                     __pintcodelo:
  4930                           	opt stack 0
  4931  000018                     _low_isr:
  4932                           	opt stack 0
  4933  000018  FFFF               	dw	65535	; assembler added errata NOP
  4934                           
  4935                           ;incstack = 0
  4936  00001A  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4937  00001C  CFD8 F043          	movff	status,??_low_isr
  4938  000020  CFE8 F044          	movff	wreg,??_low_isr+1
  4939  000024  CFE0 F045          	movff	bsr,??_low_isr+2
  4940  000028  CFFA F046          	movff	pclath,??_low_isr+3
  4941  00002C  CFFB F047          	movff	pclatu,??_low_isr+4
  4942  000030  CFE9 F048          	movff	fsr0l,??_low_isr+5
  4943  000034  CFEA F049          	movff	fsr0h,??_low_isr+6
  4944  000038  CFE1 F04A          	movff	fsr1l,??_low_isr+7
  4945  00003C  CFE2 F04B          	movff	fsr1h,??_low_isr+8
  4946  000040  CFD9 F04C          	movff	fsr2l,??_low_isr+9
  4947  000044  CFDA F04D          	movff	fsr2h,??_low_isr+10
  4948  000048  CFF3 F04E          	movff	prodl,??_low_isr+11
  4949  00004C  CFF4 F04F          	movff	prodh,??_low_isr+12
  4950  000050  CFF6 F050          	movff	tblptrl,??_low_isr+13
  4951  000054  CFF7 F051          	movff	tblptrh,??_low_isr+14
  4952  000058  CFF8 F052          	movff	tblptru,??_low_isr+15
  4953  00005C  CFF5 F053          	movff	tablat,??_low_isr+16
  4954  000060  C053  FFF5         	movff	??_low_isr+16,tablat
  4955  000064  C052  FFF8         	movff	??_low_isr+15,tblptru
  4956  000068  C051  FFF7         	movff	??_low_isr+14,tblptrh
  4957  00006C  C050  FFF6         	movff	??_low_isr+13,tblptrl
  4958  000070  C04F  FFF4         	movff	??_low_isr+12,prodh
  4959  000074  C04E  FFF3         	movff	??_low_isr+11,prodl
  4960  000078  C04D  FFDA         	movff	??_low_isr+10,fsr2h
  4961  00007C  C04C  FFD9         	movff	??_low_isr+9,fsr2l
  4962  000080  C04B  FFE2         	movff	??_low_isr+8,fsr1h
  4963  000084  C04A  FFE1         	movff	??_low_isr+7,fsr1l
  4964  000088  C049  FFEA         	movff	??_low_isr+6,fsr0h
  4965  00008C  C048  FFE9         	movff	??_low_isr+5,fsr0l
  4966  000090  C047  FFFB         	movff	??_low_isr+4,pclatu
  4967  000094  C046  FFFA         	movff	??_low_isr+3,pclath
  4968  000098  C045  FFE0         	movff	??_low_isr+2,bsr
  4969  00009C  C044  FFE8         	movff	??_low_isr+1,wreg
  4970  0000A0  C043  FFD8         	movff	??_low_isr,status
  4971  0000A4  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  4972  0000A6  0010               	retfie	
  4973  0000A8  FFFF               	dw	65535	; errata NOP
  4974  0000AA                     __end_of_low_isr:
  4975                           	opt stack 0
  4976                           pclatu	equ	0xFFB
  4977                           pclath	equ	0xFFA
  4978                           tblptru	equ	0xFF8
  4979                           tblptrh	equ	0xFF7
  4980                           tblptrl	equ	0xFF6
  4981                           tablat	equ	0xFF5
  4982                           prodh	equ	0xFF4
  4983                           prodl	equ	0xFF3
  4984                           intcon	equ	0xFF2
  4985                           indf0	equ	0xFEF
  4986                           postinc0	equ	0xFEE
  4987                           fsr0h	equ	0xFEA
  4988                           fsr0l	equ	0xFE9
  4989                           wreg	equ	0xFE8
  4990                           indf1	equ	0xFE7
  4991                           postdec1	equ	0xFE5
  4992                           fsr1h	equ	0xFE2
  4993                           fsr1l	equ	0xFE1
  4994                           bsr	equ	0xFE0
  4995                           indf2	equ	0xFDF
  4996                           postinc2	equ	0xFDE
  4997                           postdec2	equ	0xFDD
  4998                           fsr2h	equ	0xFDA
  4999                           fsr2l	equ	0xFD9
  5000                           status	equ	0xFD8
  5001                           
  5002 ;; *************** function _high_isr *****************
  5003 ;; Defined at:
  5004 ;;		line 39 in file "interrupts.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;		None
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5018 ;;      Params:         0       0       0       0       0       0       0
  5019 ;;      Locals:         0       0       0       0       0       0       0
  5020 ;;      Temps:         15       0       0       0       0       0       0
  5021 ;;      Totals:        15       0       0       0       0       0       0
  5022 ;;Total ram usage:       15 bytes
  5023 ;; Hardware stack levels used:    1
  5024 ;; This function calls:
  5025 ;;		Nothing
  5026 ;; This function is called by:
  5027 ;;		Interrupt level 2
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	intcode
  5032  000008                     __pintcode:
  5033                           	opt stack 0
  5034  000008                     _high_isr:
  5035                           	opt stack 0
  5036  000008  FFFF               	dw	65535	; assembler added errata NOP
  5037                           
  5038                           ;incstack = 0
  5039  00000A  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5040  00000C  EF76  F00A         	goto	int_func
  5041                           pclatu	equ	0xFFB
  5042                           pclath	equ	0xFFA
  5043                           tblptru	equ	0xFF8
  5044                           tblptrh	equ	0xFF7
  5045                           tblptrl	equ	0xFF6
  5046                           tablat	equ	0xFF5
  5047                           prodh	equ	0xFF4
  5048                           prodl	equ	0xFF3
  5049                           intcon	equ	0xFF2
  5050                           indf0	equ	0xFEF
  5051                           postinc0	equ	0xFEE
  5052                           fsr0h	equ	0xFEA
  5053                           fsr0l	equ	0xFE9
  5054                           wreg	equ	0xFE8
  5055                           indf1	equ	0xFE7
  5056                           postdec1	equ	0xFE5
  5057                           fsr1h	equ	0xFE2
  5058                           fsr1l	equ	0xFE1
  5059                           bsr	equ	0xFE0
  5060                           indf2	equ	0xFDF
  5061                           postinc2	equ	0xFDE
  5062                           postdec2	equ	0xFDD
  5063                           fsr2h	equ	0xFDA
  5064                           fsr2l	equ	0xFD9
  5065                           status	equ	0xFD8
  5066                           
  5067                           	psect	intcode_body
  5068  0014EC                     __pintcode_body:
  5069                           	opt stack 26
  5070  0014EC                     int_func:
  5071                           	opt stack 26
  5072  0014EC  FFFF               	dw	65535	; errata NOP
  5073  0014EE  CFFA F035          	movff	pclath,??_high_isr+1
  5074  0014F2  CFFB F036          	movff	pclatu,??_high_isr+2
  5075  0014F6  CFE9 F037          	movff	fsr0l,??_high_isr+3
  5076  0014FA  CFEA F038          	movff	fsr0h,??_high_isr+4
  5077  0014FE  CFE1 F039          	movff	fsr1l,??_high_isr+5
  5078  001502  CFE2 F03A          	movff	fsr1h,??_high_isr+6
  5079  001506  CFD9 F03B          	movff	fsr2l,??_high_isr+7
  5080  00150A  CFDA F03C          	movff	fsr2h,??_high_isr+8
  5081  00150E  CFF3 F03D          	movff	prodl,??_high_isr+9
  5082  001512  CFF4 F03E          	movff	prodh,??_high_isr+10
  5083  001516  CFF6 F03F          	movff	tblptrl,??_high_isr+11
  5084  00151A  CFF7 F040          	movff	tblptrh,??_high_isr+12
  5085  00151E  CFF8 F041          	movff	tblptru,??_high_isr+13
  5086  001522  CFF5 F042          	movff	tablat,??_high_isr+14
  5087                           
  5088                           ;interrupts.c: 49: if (PIR1bits.RCIF == 1) {
  5089  001526  AA9E               	btfss	3998,5,c	;volatile
  5090  001528  D022               	goto	i2l2417
  5091                           
  5092                           ;interrupts.c: 50: dato = RCREG;
  5093  00152A  CFAE F031          	movff	4014,_dato	;volatile
  5094                           
  5095                           ;interrupts.c: 51: if (dato != '\r') {
  5096  00152E  0E0D               	movlw	13
  5097  001530  1831               	xorwf	_dato,w,c
  5098  001532  B4D8               	btfsc	status,2,c
  5099  001534  D00D               	goto	i2l2411
  5100                           
  5101                           ;interrupts.c: 52: comando[n] = dato;
  5102  001536  0EB5               	movlw	low _comando
  5103  001538  2427               	addwf	_n,w,c
  5104  00153A  6ED9               	movwf	fsr2l,c
  5105  00153C  0E00               	movlw	high _comando
  5106  00153E  2028               	addwfc	_n+1,w,c
  5107  001540  6EDA               	movwf	fsr2h,c
  5108  001542  C031  FFDF         	movff	_dato,indf2
  5109                           
  5110                           ;interrupts.c: 53: n++;
  5111  001546  4A27               	infsnz	_n,f,c
  5112  001548  2A28               	incf	_n+1,f,c
  5113                           
  5114                           ;interrupts.c: 54: tama++;
  5115  00154A  4A2F               	infsnz	_tama,f,c
  5116  00154C  2A30               	incf	_tama+1,f,c
  5117                           
  5118                           ;interrupts.c: 55: } else if (dato == '\r') {
  5119  00154E  D00D               	goto	i2l2415
  5120  001550                     i2l2411:
  5121  001550  FFFF               	dw	65535	; assembler added errata NOP
  5122  001552  0E0D               	movlw	13
  5123  001554  1831               	xorwf	_dato,w,c
  5124  001556  A4D8               	btfss	status,2,c
  5125  001558  D008               	goto	i2l2415
  5126                           
  5127                           ;interrupts.c: 56: n = 0;
  5128  00155A  0E00               	movlw	0
  5129  00155C  6E28               	movwf	_n+1,c
  5130  00155E  0E00               	movlw	0
  5131  001560  6E27               	movwf	_n,c
  5132                           
  5133                           ;interrupts.c: 57: enter = 1;
  5134  001562  0E00               	movlw	0
  5135  001564  6E2E               	movwf	_enter+1,c
  5136  001566  0E01               	movlw	1
  5137  001568  6E2D               	movwf	_enter,c
  5138  00156A                     i2l2415:
  5139  00156A  FFFF               	dw	65535	; assembler added errata NOP
  5140                           
  5141                           ;interrupts.c: 58: }
  5142                           ;interrupts.c: 61: PIR1bits.RCIF = 0;
  5143  00156C  9A9E               	bcf	3998,5,c	;volatile
  5144  00156E                     i2l2417:
  5145  00156E  FFFF               	dw	65535	; assembler added errata NOP
  5146                           
  5147                           ;interrupts.c: 62: }
  5148                           ;interrupts.c: 64: if (PIR1bits.TMR1IF == 1) {
  5149  001570  A09E               	btfss	3998,0,c	;volatile
  5150  001572  D036               	goto	i2l48
  5151                           
  5152                           ;interrupts.c: 65: PIR1bits.TMR1IF = 0;
  5153  001574  909E               	bcf	3998,0,c	;volatile
  5154                           
  5155                           ;interrupts.c: 66: __nop();
  5156  001576  F000               	nop	
  5157                           
  5158                           ;interrupts.c: 67: led = 1;
  5159  001578  0E00               	movlw	0
  5160  00157A  6E2C               	movwf	_led+1,c
  5161  00157C  0E01               	movlw	1
  5162  00157E  6E2B               	movwf	_led,c
  5163                           
  5164                           ;interrupts.c: 68: TMR1 = 3036;
  5165  001580  0E0B               	movlw	11
  5166  001582  6ECF               	movwf	4047,c	;volatile
  5167  001584  0EDC               	movlw	220
  5168  001586  6ECE               	movwf	4046,c	;volatile
  5169                           
  5170                           ;interrupts.c: 69: if (led == 1 && movimiento == 1) {
  5171  001588  042B               	decf	_led,w,c
  5172  00158A  102C               	iorwf	_led+1,w,c
  5173  00158C  A4D8               	btfss	status,2,c
  5174  00158E  D028               	goto	i2l48
  5175  001590  0429               	decf	_movimiento,w,c
  5176  001592  102A               	iorwf	_movimiento+1,w,c
  5177  001594  A4D8               	btfss	status,2,c
  5178  001596  D024               	goto	i2l48
  5179                           
  5180                           ;interrupts.c: 70: __nop();
  5181  001598  F000               	nop	
  5182                           
  5183                           ;interrupts.c: 71: contadorled++;
  5184  00159A  4A1D               	infsnz	_contadorled,f,c
  5185  00159C  2A1E               	incf	_contadorled+1,f,c
  5186                           
  5187                           ;interrupts.c: 72: if (contadorled >= 2) {
  5188  00159E  BE1E               	btfsc	_contadorled+1,7,c
  5189  0015A0  D01A               	goto	i2l2437
  5190  0015A2  501E               	movf	_contadorled+1,w,c
  5191  0015A4  E104               	bnz	i2u165_40
  5192  0015A6  0E02               	movlw	2
  5193  0015A8  5C1D               	subwf	_contadorled,w,c
  5194  0015AA  A0D8               	btfss	status,0,c
  5195  0015AC  D014               	goto	i2l2437
  5196  0015AE                     i2u165_40:
  5197                           
  5198                           ;interrupts.c: 73: LATBbits.LB7 = ~PORTBbits.RB7;
  5199  0015AE  AE81               	btfss	3969,7,c	;volatile
  5200  0015B0  D002               	goto	i2u166_40
  5201  0015B2  0E01               	movlw	1
  5202  0015B4  D002               	goto	i2u166_46
  5203  0015B6                     i2u166_40:
  5204  0015B6  FFFF               	dw	65535	; assembler added errata NOP
  5205  0015B8  0E00               	movlw	0
  5206  0015BA                     i2u166_46:
  5207  0015BA  FFFF               	dw	65535	; assembler added errata NOP
  5208  0015BC  0AFF               	xorlw	255
  5209  0015BE  6E34               	movwf	??_high_isr& (0+255),c
  5210  0015C0  3234               	rrcf	??_high_isr,f,c
  5211  0015C2  3234               	rrcf	??_high_isr,f,c
  5212  0015C4  508A               	movf	3978,w,c	;volatile
  5213  0015C6  1834               	xorwf	??_high_isr,w,c
  5214  0015C8  0B7F               	andlw	-129
  5215  0015CA  1834               	xorwf	??_high_isr,w,c
  5216  0015CC  6E8A               	movwf	3978,c	;volatile
  5217                           
  5218                           ;interrupts.c: 74: contadorled = 0;
  5219  0015CE  0E00               	movlw	0
  5220  0015D0  6E1E               	movwf	_contadorled+1,c
  5221  0015D2  0E00               	movlw	0
  5222  0015D4  6E1D               	movwf	_contadorled,c
  5223  0015D6                     i2l2437:
  5224  0015D6  FFFF               	dw	65535	; assembler added errata NOP
  5225                           
  5226                           ;interrupts.c: 75: }
  5227                           ;interrupts.c: 76: led = 0;
  5228  0015D8  0E00               	movlw	0
  5229  0015DA  6E2C               	movwf	_led+1,c
  5230  0015DC  0E00               	movlw	0
  5231  0015DE  6E2B               	movwf	_led,c
  5232  0015E0                     i2l48:
  5233  0015E0  FFFF               	dw	65535	; assembler added errata NOP
  5234  0015E2  C042  FFF5         	movff	??_high_isr+14,tablat
  5235  0015E6  C041  FFF8         	movff	??_high_isr+13,tblptru
  5236  0015EA  C040  FFF7         	movff	??_high_isr+12,tblptrh
  5237  0015EE  C03F  FFF6         	movff	??_high_isr+11,tblptrl
  5238  0015F2  C03E  FFF4         	movff	??_high_isr+10,prodh
  5239  0015F6  C03D  FFF3         	movff	??_high_isr+9,prodl
  5240  0015FA  C03C  FFDA         	movff	??_high_isr+8,fsr2h
  5241  0015FE  C03B  FFD9         	movff	??_high_isr+7,fsr2l
  5242  001602  C03A  FFE2         	movff	??_high_isr+6,fsr1h
  5243  001606  C039  FFE1         	movff	??_high_isr+5,fsr1l
  5244  00160A  C038  FFEA         	movff	??_high_isr+4,fsr0h
  5245  00160E  C037  FFE9         	movff	??_high_isr+3,fsr0l
  5246  001612  C036  FFFB         	movff	??_high_isr+2,pclatu
  5247  001616  C035  FFFA         	movff	??_high_isr+1,pclath
  5248  00161A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5249  00161C  0011               	retfie		f
  5250  00161E  FFFF               	dw	65535	; errata NOP
  5251  001620                     __end_of_high_isr:
  5252                           	opt stack 0
  5253                           pclatu	equ	0xFFB
  5254                           pclath	equ	0xFFA
  5255                           tblptru	equ	0xFF8
  5256                           tblptrh	equ	0xFF7
  5257                           tblptrl	equ	0xFF6
  5258                           tablat	equ	0xFF5
  5259                           prodh	equ	0xFF4
  5260                           prodl	equ	0xFF3
  5261                           intcon	equ	0xFF2
  5262                           indf0	equ	0xFEF
  5263                           postinc0	equ	0xFEE
  5264                           fsr0h	equ	0xFEA
  5265                           fsr0l	equ	0xFE9
  5266                           wreg	equ	0xFE8
  5267                           indf1	equ	0xFE7
  5268                           postdec1	equ	0xFE5
  5269                           fsr1h	equ	0xFE2
  5270                           fsr1l	equ	0xFE1
  5271                           bsr	equ	0xFE0
  5272                           indf2	equ	0xFDF
  5273                           postinc2	equ	0xFDE
  5274                           postdec2	equ	0xFDD
  5275                           fsr2h	equ	0xFDA
  5276                           fsr2l	equ	0xFD9
  5277                           status	equ	0xFD8
  5278                           pclatu	equ	0xFFB
  5279                           pclath	equ	0xFFA
  5280                           tblptru	equ	0xFF8
  5281                           tblptrh	equ	0xFF7
  5282                           tblptrl	equ	0xFF6
  5283                           tablat	equ	0xFF5
  5284                           prodh	equ	0xFF4
  5285                           prodl	equ	0xFF3
  5286                           intcon	equ	0xFF2
  5287                           indf0	equ	0xFEF
  5288                           postinc0	equ	0xFEE
  5289                           fsr0h	equ	0xFEA
  5290                           fsr0l	equ	0xFE9
  5291                           wreg	equ	0xFE8
  5292                           indf1	equ	0xFE7
  5293                           postdec1	equ	0xFE5
  5294                           fsr1h	equ	0xFE2
  5295                           fsr1l	equ	0xFE1
  5296                           bsr	equ	0xFE0
  5297                           indf2	equ	0xFDF
  5298                           postinc2	equ	0xFDE
  5299                           postdec2	equ	0xFDD
  5300                           fsr2h	equ	0xFDA
  5301                           fsr2l	equ	0xFD9
  5302                           status	equ	0xFD8
  5303                           
  5304                           	psect	rparam
  5305  0000                     pclatu	equ	0xFFB
  5306                           pclath	equ	0xFFA
  5307                           tblptru	equ	0xFF8
  5308                           tblptrh	equ	0xFF7
  5309                           tblptrl	equ	0xFF6
  5310                           tablat	equ	0xFF5
  5311                           prodh	equ	0xFF4
  5312                           prodl	equ	0xFF3
  5313                           intcon	equ	0xFF2
  5314                           indf0	equ	0xFEF
  5315                           postinc0	equ	0xFEE
  5316                           fsr0h	equ	0xFEA
  5317                           fsr0l	equ	0xFE9
  5318                           wreg	equ	0xFE8
  5319                           indf1	equ	0xFE7
  5320                           postdec1	equ	0xFE5
  5321                           fsr1h	equ	0xFE2
  5322                           fsr1l	equ	0xFE1
  5323                           bsr	equ	0xFE0
  5324                           indf2	equ	0xFDF
  5325                           postinc2	equ	0xFDE
  5326                           postdec2	equ	0xFDD
  5327                           fsr2h	equ	0xFDA
  5328                           fsr2l	equ	0xFD9
  5329                           status	equ	0xFD8
  5330                           
  5331                           	psect	temp
  5332  00005F                     btemp:
  5333                           	opt stack 0
  5334  00005F                     	ds	1
  5335  0000                     int$flags	set	btemp
  5336                           pclatu	equ	0xFFB
  5337                           pclath	equ	0xFFA
  5338                           tblptru	equ	0xFF8
  5339                           tblptrh	equ	0xFF7
  5340                           tblptrl	equ	0xFF6
  5341                           tablat	equ	0xFF5
  5342                           prodh	equ	0xFF4
  5343                           prodl	equ	0xFF3
  5344                           intcon	equ	0xFF2
  5345                           indf0	equ	0xFEF
  5346                           postinc0	equ	0xFEE
  5347                           fsr0h	equ	0xFEA
  5348                           fsr0l	equ	0xFE9
  5349                           wreg	equ	0xFE8
  5350                           indf1	equ	0xFE7
  5351                           postdec1	equ	0xFE5
  5352                           fsr1h	equ	0xFE2
  5353                           fsr1l	equ	0xFE1
  5354                           bsr	equ	0xFE0
  5355                           indf2	equ	0xFDF
  5356                           postinc2	equ	0xFDE
  5357                           postdec2	equ	0xFDD
  5358                           fsr2h	equ	0xFDA
  5359                           fsr2l	equ	0xFD9
  5360                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    57
    Data        10
    BSS         149
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     33      94
    BANK0           128     30     128
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> movery(CODE[7]), moverx(CODE[7]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 20
		 -> tam(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 25
		 -> salida(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    stringtoint@string	PTR unsigned char  size(2) Largest target is 25
		 -> entrada(BANK0[25]), 

    enviarTrama@datos	PTR unsigned char  size(2) Largest target is 25
		 -> salida(BANK0[25]), comandonoreconocido(CODE[22]), saludo(CODE[11]), comando(BANK0[25]), 

    ptr_llegada	PTR unsigned char  size(2) Largest target is 25
		 -> NULL(NULL[0]), comando(BANK0[25]), 


Critical Paths under _main in COMRAM

    _main->_ledestado
    _main->_strcmp
    _main->_stringtoint
    _sprintf->___lwmod

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_ejexnegativo
    _main->_ejexpositivo
    _main->_ejeynegativo
    _main->_ejeypositivo
    _stringtoint->___wmul
    _ejeypositivo->_sprintf
    _ejeynegativo->_sprintf
    _ejexpositivo->_sprintf
    _ejexnegativo->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   14583
                                             29 BANK0      1     1      0
                _ConfigureOscillator
                            _InitApp
                           _apagarM1
                           _apagarM2
                       _ejexnegativo
                       _ejexpositivo
                       _ejeynegativo
                       _ejeypositivo
                        _enviarTrama
                          _ledestado
                             _strcmp
                        _stringtoint
 ---------------------------------------------------------------------------------
 (1) _stringtoint                                          5     1      4    1014
                                             32 COMRAM     1     1      0
                                              6 BANK0      4     0      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     592
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               6     2      4     493
                                             32 COMRAM     1     1      0
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _ledestado                                            3     1      2     121
                                             32 COMRAM     1     1      0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ejeypositivo                                         4     2      2    3065
                                             25 BANK0      4     2      2
                        _enviarTrama
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _ejeynegativo                                         4     2      2    3065
                                             25 BANK0      4     2      2
                        _enviarTrama
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _ejexpositivo                                         4     2      2    3065
                                             25 BANK0      4     2      2
                        _enviarTrama
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _ejexnegativo                                         4     2      2    3065
                                             25 BANK0      4     2      2
                        _enviarTrama
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    17      6    2249
                                             11 BANK0     14     8      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                             32 COMRAM     1     1      0
                                              7 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     421
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _enviarTrama                                          2     0      2     695
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _apagarM2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _apagarM1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             17    17      0       0
                                             15 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            15    15      0       0
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _apagarM1
   _apagarM2
   _ejexnegativo
     _enviarTrama
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _ejexpositivo
     _enviarTrama
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _ejeynegativo
     _enviarTrama
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _ejeypositivo
     _enviarTrama
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _enviarTrama
   _ledestado
   _strcmp
   _stringtoint
     ___wmul

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1E      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     21      5E       1       74.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DE      15        0.0%
DATA                 0      0      DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sat Nov 11 21:09:20 2017

                                                                _ptr_llegada 0001  
                                                                          _c 0019  
                                                                          _g 0023  
                                                                          _h 0013  
                                                                          _i 0005  
                                                                          _n 0027  
                                                                          _o 0011  
                                                                          _p 000F  
                                                                          _r 000B  
                                                              ?_ejexpositivo 00FB  
                                                                         bsr 000FE0  
                                                        ___wmul@multiplicand 00E4  
                                                              ?_ejeypositivo 00FB  
                                                               __CFG_CP0$OFF 000000  
                                                               __CFG_CP1$OFF 000000  
                                                               __CFG_CP2$OFF 000000  
                                                               __CFG_CP3$OFF 000000  
                                                                __CFG_OSC$HS 000000  
                                                                        l201 17B4  
                                                                        l204 17BE  
                                                                        l197 177A  
                                                                        l852 1742  
                                                                        l862 1826  
                                                               __CFG_CPB$OFF 000000  
                                                               __CFG_CPD$OFF 000000  
                                                               __CFG_BOR$OFF 000000  
                                                                        _led 002B  
                                                                        _tam 00CE  
                                                                        _vel 005B  
                                                                _stepsPerRev 005D  
                                                               __CFG_BORV$20 000000  
                                                                        wreg 000FE8  
                                                               __CFG_LVP$OFF 000000  
                                                               __CFG_WDT$OFF 000000  
                                                                       l3001 0AE0  
                                                                       l3011 0B18  
                                                                       l3003 0AE6  
                                                                       l3111 1036  
                                                                       l3103 1004  
                                                                       l3023 0B66  
                                                                       l3015 0B34  
                                                                       l3007 0B02  
                                                                       l3113 1046  
                                                                       l3105 1014  
                                                                       l3121 1074  
                                                                       l3025 0B76  
                                                                       l3017 0B44  
                                                                       l3009 0B12  
                                                                       l3033 0B9E  
                                                                       l3115 104C  
                                                                       l3107 101A  
                                                                       l3051 0EA0  
                                                                       l3123 10BC  
                                                                       l3027 0B7C  
                                                                       l3019 0B4A  
                                                                       l3035 0BE6  
                                                                       l3211 0846  
                                                                       l3117 1066  
                                                                       l3045 0E7E  
                                                                       l3029 0B96  
                                                                       l3213 0850  
                                                                       l3071 0F3C  
                                                                       l3063 0F0A  
                                                                       l3055 0ED8  
                                                                       l3223 087A  
                                                                       l3151 069C  
                                                                       l3081 0F7E  
                                                                       l3073 0F4C  
                                                                       l3065 0F1A  
                                                                       l3057 0EE8  
                                                                       l3225 0884  
                                                                       l3217 0862  
                                                                       l3161 06D2  
                                                                       l3241 08D0  
                                                                       l3145 0688  
                                                                       l3137 0666  
                                                                       l3091 0FB6  
                                                                       l3083 0F84  
                                                                       l3075 0F52  
                                                                       l3067 0F20  
                                                                       l3059 0EEE  
                                                                       l3235 08AE  
                                                                       l3171 074E  
                                                                       l3155 06AE  
                                                                       l3253 08FC  
                                                                       l3229 0896  
                                                                       l2631 1700  
                                                                       l3095 0FD2  
                                                                       l3087 0FA0  
                                                                       l3079 0F6E  
                                                                       l3263 091E  
                                                                       l3191 07CE  
                                                                       l2801 0CB8  
                                                                       l3097 0FE2  
                                                                       l3089 0FB0  
                                                                       l3281 0960  
                                                                       l3257 0908  
                                                                       l3177 0770  
                                                                       l2627 16EA  
                                                                       l2651 17F2  
                                                                       l2723 14AC  
                                                                       l2715 1442  
                                                                       l3099 0FE8  
                                                                       l3291 0982  
                                                                       l3267 092A  
                                                                       l2661 1754  
                                                                       l2629 16F8  
                                                                       l2717 144A  
                                                                       l2709 1420  
                                                                       l2725 14BA  
                                                                       l2901 11D4  
                                                                       l2821 0D40  
                                                                       l2813 0D0E  
                                                                       l2805 0CDC  
                                                                       l3285 096C  
                                                                       l3269 0934  
                                                                       l3197 07F0  
                                                                       l2639 1732  
                                                                       l2655 1818  
                                                                       l2647 17DE  
                                                                       l2727 14DA  
                                                                       l2911 1216  
                                                                       l2903 11E4  
                                                                       l2831 0D82  
                                                                       l2823 0D50  
                                                                       l2815 0D1E  
                                                                       l2807 0CEC  
                                                                       l2751 1846  
                                                                       l3295 098E  
                                                                       l2665 1786  
                                                                       l2649 17EA  
                                                                       l2673 1356  
                                                                       l2921 124E  
                                                                       l2913 121C  
                                                                       l2905 11EA  
                                                                       l2841 0DBA  
                                                                       l2833 0D88  
                                                                       l2825 0D56  
                                                                       l2817 0D24  
                                                                       l2809 0CF2  
                                                                       l2745 18DA  
                                                                       l2851 0E06  
                                                                       l2755 1880  
                                                                       l2763 1644  
                                                                       l2685 13AA  
                                                                       l2933 129C  
                                                                       l2925 126A  
                                                                       l2917 1238  
                                                                       l2909 1206  
                                                                       l2845 0DD6  
                                                                       l2837 0DA4  
                                                                       l2829 0D72  
                                                                       l2749 1838  
                                                                       l2773 16B8  
                                                                       l2695 13DC  
                                                                       l2679 1376  
                                                                       l2935 12AC  
                                                                       l2927 127A  
                                                                       l2919 1248  
                                                                       l2943 12DA  
                                                                       l2847 0DE6  
                                                                       l2839 0DB4  
                                                                       l2791 0C7E  
                                                                       l2855 0E0E  
                                                                       l2783 0C30  
                                                                       l2697 13E4  
                                                                       l2937 12B2  
                                                                       l2929 1280  
                                                                       l2881 1154  
                                                                       l2873 1106  
                                                                       l2945 1322  
                                                                       l2849 0DEC  
                                                                       l2777 0C0E  
                                                                       l2857 0E56  
                                                                       l2961 09C0  
                                                                       l2939 12CC  
                                                                       l2867 10E4  
                                                                       l2787 0C68  
                                                                       l2955 099E  
                                                                       l2893 11A2  
                                                                       l2885 1170  
                                                                       l2877 113E  
                                                                       l2797 0CA2  
                                                                       l2789 0C78  
                                                                       l2965 09F8  
                                                                       l2895 11B2  
                                                                       l2887 1180  
                                                                       l2879 114E  
                                                                       l2799 0CB2  
                                                                       l2991 0A9E  
                                                                       l2983 0A6C  
                                                                       l2975 0A32  
                                                                       l2967 0A08  
                                                                       l2897 11B8  
                                                                       l2889 1186  
                                                                       l2993 0AAE  
                                                                       l2985 0A7C  
                                                                       l2977 0A42  
                                                                       l2969 0A0E  
                                                                       l2995 0AB4  
                                                                       l2987 0A82  
                                                                       l2979 0A48  
                                                                       l2999 0AD0  
                                                                       STR_1 063A  
                                                                       STR_2 063A  
                                                                       STR_3 063A  
                                                                       STR_4 063A  
                                                                       u2120 0C28  
                                                                       u2220 10FE  
                                                                       _LATA 000F89  
                                                                       _LATB 000F8A  
                                                                       u2320 09B8  
                                                                       u2080 18BA  
                                                                       u2420 0E98  
                                                                       u2086 18BE  
                                                                       u2700 094C  
                                                                       u1930 1778  
                                                                       u1950 17AA  
                                                                       u2670 08E8  
                                                                       u1937 176E  
                                                                       u1957 17A0  
                                                                       i2l48 15E0  
                                                                       _TMR1 000FCE  
                                                                       _dato 0031  
                                                                       _help 000D  
                                                             ??_ejexnegativo 00FD  
                                                                       _main 064C  
                                                                       _lleg 0003  
                                                                       _tama 002F  
                                                                       fsr0h 000FEA  
                                                                       fsr1h 000FE2  
                                                                       indf0 000FEF  
                                                                       fsr2h 000FDA  
                                                                       fsr0l 000FE9  
                                                                       indf1 000FE7  
                                                                       indf2 000FDF  
                                                                       fsr1l 000FE1  
                                                                       fsr2l 000FD9  
                                                                       btemp 005F  
                                                             ??_ejeynegativo 00FD  
                                                               ?_enviarTrama 00E2  
                                                                       prodh 000FF4  
                                                                       prodl 000FF3  
                                                                       start 00AA  
                                                         ledestado@tiempoled 00E2  
                                                               ___param_bank 000000  
                                                            __end_of_InitApp 193A  
                                                             ??_ejexpositivo 00FD  
                                                                _stringtoint 1620  
                                                             ??_ejeypositivo 00FD  
                                                              __CFG_OSCS$OFF 000000  
                                                                      ?_main 0034  
                                                            __end_of___lwdiv 1750  
                                                            __end_of___lwmod 1834  
                                                                      _RCREG 000FAE  
                                                                      _SPBRG 000FAF  
                                                                      _PORTA 000F80  
                                                                      _PORTB 000F81  
                                                                      _PORTC 000F82  
                                                                      _TRISA 000F92  
                                                                      _TXREG 000FAD  
                                                        _ConfigureOscillator 19DC  
                                                              __CFG_PWRT$OFF 000000  
                                                              __CFG_WRT0$OFF 000000  
                                                              __CFG_WRT1$OFF 000000  
                                                              __CFG_WRT2$OFF 000000  
                                                              __CFG_WRT3$OFF 000000  
                                                             __CFG_EBTR0$OFF 000000  
                                                             __CFG_EBTR1$OFF 000000  
                                                             __CFG_EBTR2$OFF 000000  
                                                             __CFG_EBTR3$OFF 000000  
                                                              __CFG_STVR$OFF 000000  
                                                              __CFG_WRTB$OFF 000000  
                                                              __CFG_WRTC$OFF 000000  
                                                              __CFG_WRTD$OFF 000000  
                                                             __CFG_EBTRB$OFF 000000  
                                                            __end_of_dpowers 060B  
                                                                      _enter 002D  
                                                                      _tama1 0009  
                                                                      _tama2 0007  
                                                                      _steps 0032  
                                                                      _xtrue 0057  
                                                                      _ytrue 0055  
                                                            __end_of_low_isr 00AA  
                                                                      pclath 000FFA  
                                                                      tablat 000FF5  
                                                                      status 000FD8  
                                                            __end_of_sprintf 14EC  
                                                       ?_ConfigureOscillator 0034  
                                                            __initialization 193A  
                                                               __end_of_main 099A  
                                                                     ??_main 00FF  
                                                              __activetblptr 000002  
                                                                     i2l2411 1550  
                                                                     i2l2415 156A  
                                                                     i2l2417 156E  
                                                                     i2l2437 15D6  
                                                             __CFG_WDTPS$128 000000  
                                                           __end_of_apagarM1 19DC  
                                                           __end_of_apagarM2 19C8  
                                                                  ??_InitApp 0054  
                                                      ??_ConfigureOscillator 0054  
                                                           __end_of_high_isr 1620  
                                                                     ___wmul 1980  
                                                __end_of_comandonoreconocido 0621  
                                                                  ??___lwdiv 0054  
                                                                  ??___lwmod 0054  
                                                              _visualizacion 001F  
                                                                     clear_0 1960  
                                                                     clear_1 196C  
                                                                     _salida 009C  
                                                                     _saludo 0621  
                                                                     _moverx 0633  
                                                                     _movery 062C  
                                                                     _strcmp 1834  
                                                       __end_of_ejexnegativo 1346  
                                                               __pdataCOMRAM 0055  
                                                       __end_of_ejeynegativo 10E0  
                                                               __mediumconst 0000  
                                                                  ??_low_isr 0043  
                                                                     tblptrh 000FF7  
                                                                     tblptrl 000FF6  
                                                                     tblptru 000FF8  
                                                                  ??_sprintf 00F3  
                                                       __end_of_ejexpositivo 0E7A  
                                                       __end_of_ejeypositivo 0C0A  
                                                                 __accesstop 0080  
                                                    __end_of__initialization 1972  
                                                              ___rparam_used 000001  
                                                       __size_of_enviarTrama 007A  
                                                             __pcstackCOMRAM 0034  
                                                         __size_of_ledestado 0054  
                                                                 __pbssBANK0 0080  
                                                                 _actualstep 0015  
                                                           __CFG_CCP2MUX$OFF 000000  
                                                                    ?___wmul 00E2  
                                                               ?_stringtoint 00E8  
                                                                    ?_strcmp 00E2  
                                                                  ?_apagarM1 0034  
                                                                  ?_apagarM2 0034  
                                                                  ?_high_isr 0034  
                                                                    _InitApp 18E8  
                                                          ejeypositivo@paso3 00FB  
                                                                    __Hparam 0000  
                                                                    __Lparam 0000  
                                                            __size_of___wmul 003A  
                                                      __size_of_ejexnegativo 0266  
                                                                    ___lwdiv 16CA  
                                                                    ___lwmod 17CA  
                                                               __psmallconst 0600  
                                                      __size_of_ejeynegativo 0266  
                                                          __end_of_ledestado 18E8  
                                                                    __pcinit 193A  
                                                                    __ramtop 0600  
                                                                    _digitos 0080  
                                                                    __ptext0 064C  
                                                                    __ptext1 1620  
                                                                    __ptext2 1980  
                                                                    __ptext3 1834  
                                                                    __ptext4 1894  
                                                                    __ptext5 099A  
                                                                    __ptext6 0E7A  
                                                                    __ptext7 0C0A  
                                                                    __ptext8 10E0  
                                                                    __ptext9 1346  
                                                                    _comando 00B5  
                                                            __size_of_strcmp 0060  
                                                                  _T1CONbits 000FCD  
                                                                    _entrada 0083  
                                                                    _dpowers 0601  
                                                                 ??_apagarM1 0054  
                                                                 ??_apagarM2 0054  
                                                      __size_of_ejexpositivo 0270  
                                                                    _low_isr 0018  
                                                      __size_of_ejeypositivo 0270  
                                                                    _sprintf 1346  
                                                                 ??_high_isr 0034  
                                                             __pintcode_body 14EC  
                                                       end_of_initialization 1972  
                                                              __Lmediumconst 0000  
                                                                    int_func 14EC  
                                                                _StepCounter 0025  
                                                               _ejexnegativo 10E0  
                                                               _ejeynegativo 0E7A  
                                                                  _RCSTAbits 000FAB  
                                                                    postdec1 000FE5  
                                                                    postdec2 000FDD  
                                                                    postinc0 000FEE  
                                                                    postinc2 000FDE  
                                                                 _movimiento 0029  
                                                                    strcmp@r 00E6  
                                                               _ejexpositivo 0C0A  
                                                                  _PORTBbits 000F81  
                                                               _ejeypositivo 099A  
                                                          stringtoint@string 00E8  
                                                                  _TRISBbits 000F93  
                                                                  _TRISCbits 000F94  
                                                __end_of_ConfigureOscillator 19E2  
                                                                  _TXSTAbits 000FAC  
                                                             __end_of___wmul 19BA  
                                                              __pidataCOMRAM 19C8  
                                                       __size_of_stringtoint 00AA  
                                                             __end_of_saludo 062C  
                                                             __end_of_moverx 063A  
                                                             __end_of_movery 0633  
                                                             __end_of_strcmp 1894  
                                                           ejexpositivo@paso 00FB  
                                                        start_initialization 193A  
                                                              ??_enviarTrama 0054  
                                                                   ??___wmul 0054  
                                                                   ??_strcmp 0054  
                                                                __pbssCOMRAM 0001  
                                                              __pcstackBANK0 00E2  
                                                          ejexnegativo@paso2 00FB  
                                                          __size_of_apagarM1 000A  
                                                          __size_of_apagarM2 000E  
                                                          __size_of_high_isr 1618  
                                                                sprintf@flag 00F6  
                                                                sprintf@prec 00F7  
                                                                   ?_InitApp 0034  
                                                           ___lwdiv@dividend 00E2  
                                                                  __pintcode 0008  
                                                        __end_of_enviarTrama 17CA  
                                                                   ?___lwdiv 00E2  
                                                                   ?___lwmod 00E9  
                                                                __pintcodelo 0018  
                                                                __smallconst 0600  
                                                                  _ledestado 1894  
                                                                   ?_low_isr 0034  
                                                           ___lwdiv@quotient 00E7  
                                                                   ?_sprintf 00ED  
                                                             ___wmul@product 00E6  
                                                                   _LATBbits 000F8A  
                                                                   _IPR1bits 000F9F  
                                                                   _PIE1bits 000F9D  
                                                                   i2u165_40 15AE  
                                                                   i2u166_40 15B6  
                                                                   i2u166_46 15BA  
                                                                   _PIR1bits 000F9E  
                                                          ___wmul@multiplier 00E2  
                                                                _contadorled 001D  
                                                                 ?_ledestado 00E2  
                                                                  copy_data0 194E  
                                                                _enviarTrama 1750  
                                                        _comandonoreconocido 060B  
                                                           __size_of_InitApp 0052  
                                                                   __Hrparam 0000  
                                                                   __Lrparam 0000  
                                                           __size_of___lwdiv 0086  
                                                           __size_of___lwmod 006A  
                                                                 sprintf@val 00F8  
                                                           enviarTrama@datos 00E2  
                                                                   _apagarM1 19D2  
                                                                   _apagarM2 19BA  
                                                            ___lwdiv@divisor 00E4  
                                                            ___lwdiv@counter 00E6  
                                                           __size_of_low_isr 0092  
                                                                   __ptext10 17CA  
                                                                   __ptext11 16CA  
                                                                   __ptext12 1750  
                                                                   __ptext13 19BA  
                                                                   __ptext14 19D2  
                                                                   __ptext15 18E8  
                                                                   __ptext16 19DC  
                                                                   _high_isr 0008  
                                                                   _cont_led 001B  
                                                           __size_of_sprintf 01A6  
                                                              __size_of_main 034E  
                                               __size_of_ConfigureOscillator 0006  
                                                                   _numSteps 0059  
                                                                   _muestreo 0021  
                                                                   int$flags 005F  
                                                              ??_stringtoint 0054  
                                                                   _stepcont 0017  
                                                                ??_ledestado 0054  
                                                                 _INTCONbits 000FF2  
                                                          ejeynegativo@paso4 00FB  
                                                                   intlevel1 19E2  
                                                                   intlevel2 19E2  
                                                                  sprintf@ap 00F4  
                                                                  sprintf@sp 00ED  
                                                           ___lwmod@dividend 00E9  
                                                                   sprintf@c 00FA  
                                                                   sprintf@f 00EF  
                                                                   strcmp@s1 00E2  
                                                                   strcmp@s2 00E4  
                                                            ___lwmod@divisor 00EB  
                                                        __end_of_stringtoint 16CA  
                                                            ___lwmod@counter 0054  
                                                         stringtoint@tamanio 00EA  
                                                              ?_ejexnegativo 00FB  
                                                              ?_ejeynegativo 00FB  
