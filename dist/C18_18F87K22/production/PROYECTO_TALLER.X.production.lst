

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Nov 06 19:03:19 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F252
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    27  0000                     
    28                           ; Version 1.42
    29                           ; Generated 13/04/2017 GMT
    30                           ; 
    31                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F252 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  000EA6                     __pidataCOMRAM:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _actualstep
    68  000EA6  0001               	dw	1
    69                           
    70                           ;initializer for _numSteps
    71  000EA8  0008               	dw	8
    72                           
    73                           ;initializer for _vel
    74  000EAA  0096               	dw	150
    75                           
    76                           ;initializer for _stepsPerRev
    77  000EAC  0FEC               	dw	4076
    78                           
    79                           ;initializer for _stepcont
    80  000EAE  0001               	dw	1
    81                           
    82                           	psect	smallconst
    83  000600                     __psmallconst:
    84                           	opt stack 0
    85  000600  00                 	db	0
    86  000601                     _saludo:
    87                           	opt stack 0
    88  000601  62                 	db	98
    89  000602  69                 	db	105
    90  000603  65                 	db	101
    91  000604  6E                 	db	110
    92  000605  76                 	db	118
    93  000606  65                 	db	101
    94  000607  6E                 	db	110
    95  000608  69                 	db	105
    96  000609  64                 	db	100
    97  00060A  6F                 	db	111
    98  00060B  20                 	db	32
    99  00060C  61                 	db	97
   100  00060D  20                 	db	32
   101  00060E  70                 	db	112
   102  00060F  6F                 	db	111
   103  000610  73                 	db	115
   104  000611  69                 	db	105
   105  000612  63                 	db	99
   106  000613  69                 	db	105
   107  000614  6F                 	db	111
   108  000615  6E                 	db	110
   109  000616  61                 	db	97
   110  000617  6D                 	db	109
   111  000618  69                 	db	105
   112  000619  65                 	db	101
   113  00061A  6E                 	db	110
   114  00061B  74                 	db	116
   115  00061C  6F                 	db	111
   116  00061D  20                 	db	32
   117  00061E  64                 	db	100
   118  00061F  65                 	db	101
   119  000620  20                 	db	32
   120  000621  63                 	db	99
   121  000622  61                 	db	97
   122  000623  6D                 	db	109
   123  000624  61                 	db	97
   124  000625  72                 	db	114
   125  000626  61                 	db	97
   126  000627  00                 	db	0
   127  000628                     __end_of_saludo:
   128                           	opt stack 0
   129  000628                     _moverx:
   130                           	opt stack 0
   131  000628  4D                 	db	77
   132  000629  4F                 	db	79
   133  00062A  56                 	db	86
   134  00062B  45                 	db	69
   135  00062C  52                 	db	82
   136  00062D  58                 	db	88
   137  00062E  00                 	db	0
   138  00062F                     __end_of_moverx:
   139                           	opt stack 0
   140  0000                     _TMR1	set	4046
   141  0000                     _RCSTAbits	set	4011
   142  0000                     _SPBRG	set	4015
   143  0000                     _TRISCbits	set	3988
   144  0000                     _IPR1bits	set	3999
   145  0000                     _PIE1bits	set	3997
   146  0000                     _T1CONbits	set	4045
   147  0000                     _TRISBbits	set	3987
   148  0000                     _TRISA	set	3986
   149  0000                     _PORTC	set	3970
   150  0000                     _PORTB	set	3969
   151  0000                     _PORTA	set	3968
   152  0000                     _PORTBbits	set	3969
   153  0000                     _LATBbits	set	3978
   154  0000                     _TXSTAbits	set	4012
   155  0000                     _TXREG	set	4013
   156  0000                     _LATA	set	3977
   157  0000                     _RCREG	set	4014
   158  0000                     _PIR1bits	set	3998
   159  00062F  00                 	db	0	; dummy byte at the end
   160  0000                     
   161                           ; #config settings
   162                           
   163                           	psect	cinit
   164  000DF0                     __pcinit:
   165                           	opt stack 0
   166  000DF0                     start_initialization:
   167                           	opt stack 0
   168  000DF0                     __initialization:
   169                           	opt stack 0
   170                           
   171                           ; Initialize objects allocated to COMRAM (10 bytes)
   172                           ; load TBLPTR registers with __pidataCOMRAM
   173  000DF0  0EA6               	movlw	low __pidataCOMRAM
   174  000DF2  6EF6               	movwf	tblptrl,c
   175  000DF4  0E0E               	movlw	high __pidataCOMRAM
   176  000DF6  6EF7               	movwf	tblptrh,c
   177  000DF8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   178  000DFA  6EF8               	movwf	tblptru,c
   179  000DFC  EE00  F04F         	lfsr	0,__pdataCOMRAM
   180  000E00  EE10 F00A          	lfsr	1,10
   181  000E04                     copy_data0:
   182  000E04  0009               	tblrd		*+
   183  000E06  CFF5 FFEE          	movff	tablat,postinc0
   184  000E0A  50E5               	movf	postdec1,w,c
   185  000E0C  50E1               	movf	fsr1l,w,c
   186  000E0E  E1FA               	bnz	copy_data0
   187                           
   188                           ; Clear objects allocated to BANK0 (45 bytes)
   189  000E10  EE00  F080         	lfsr	0,__pbssBANK0
   190  000E14  0E2D               	movlw	45
   191  000E16                     clear_0:
   192  000E16  6AEE               	clrf	postinc0,c
   193  000E18  06E8               	decf	wreg,f,c
   194  000E1A  E1FD               	bnz	clear_0
   195                           
   196                           ; Clear objects allocated to COMRAM (36 bytes)
   197  000E1C  EE00  F02B         	lfsr	0,__pbssCOMRAM
   198  000E20  0E24               	movlw	36
   199  000E22                     clear_1:
   200  000E22  6AEE               	clrf	postinc0,c
   201  000E24  06E8               	decf	wreg,f,c
   202  000E26  E1FD               	bnz	clear_1
   203  000E28                     end_of_initialization:
   204                           	opt stack 0
   205  000E28                     __end_of__initialization:
   206                           	opt stack 0
   207  000E28  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   208  000E2A  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   209  000E2C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   210  000E2E  6EF8               	movwf	tblptru,c
   211  000E30  0100               	movlb	0
   212  000E32  EF18  F003         	goto	_main	;jump to C main() function
   213                           tblptru	equ	0xFF8
   214                           tblptrh	equ	0xFF7
   215                           tblptrl	equ	0xFF6
   216                           tablat	equ	0xFF5
   217                           postinc0	equ	0xFEE
   218                           wreg	equ	0xFE8
   219                           postdec1	equ	0xFE5
   220                           fsr1l	equ	0xFE1
   221                           
   222                           	psect	bssCOMRAM
   223  00002B                     __pbssCOMRAM:
   224                           	opt stack 0
   225  00002B                     _xtrue:
   226                           	opt stack 0
   227  00002B                     	ds	2
   228  00002D                     _r:
   229                           	opt stack 0
   230  00002D                     	ds	2
   231  00002F                     _help:
   232                           	opt stack 0
   233  00002F                     	ds	2
   234  000031                     _p:
   235                           	opt stack 0
   236  000031                     	ds	2
   237  000033                     _o:
   238                           	opt stack 0
   239  000033                     	ds	2
   240  000035                     _steps:
   241                           	opt stack 0
   242  000035                     	ds	2
   243  000037                     _c:
   244                           	opt stack 0
   245  000037                     	ds	2
   246  000039                     _cont_led:
   247                           	opt stack 0
   248  000039                     	ds	2
   249  00003B                     _visualizacion:
   250                           	opt stack 0
   251  00003B                     	ds	2
   252  00003D                     _muestreo:
   253                           	opt stack 0
   254  00003D                     	ds	2
   255  00003F                     _g:
   256                           	opt stack 0
   257  00003F                     	ds	2
   258  000041                     _StepCounter:
   259                           	opt stack 0
   260  000041                     	ds	2
   261  000043                     _n:
   262                           	opt stack 0
   263  000043                     	ds	2
   264  000045                     _led:
   265                           	opt stack 0
   266  000045                     	ds	2
   267  000047                     _enter:
   268                           	opt stack 0
   269  000047                     	ds	2
   270  000049                     _tama:
   271                           	opt stack 0
   272  000049                     	ds	2
   273  00004B                     _dato:
   274                           	opt stack 0
   275  00004B                     	ds	1
   276  00004C                     _digitos:
   277                           	opt stack 0
   278  00004C                     	ds	3
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           postdec1	equ	0xFE5
   286                           fsr1l	equ	0xFE1
   287                           
   288                           	psect	dataCOMRAM
   289  00004F                     __pdataCOMRAM:
   290                           	opt stack 0
   291  00004F                     _actualstep:
   292                           	opt stack 0
   293  00004F                     	ds	2
   294  000051                     _numSteps:
   295                           	opt stack 0
   296  000051                     	ds	2
   297  000053                     _vel:
   298                           	opt stack 0
   299  000053                     	ds	2
   300  000055                     _stepsPerRev:
   301                           	opt stack 0
   302  000055                     	ds	2
   303  000057                     _stepcont:
   304                           	opt stack 0
   305  000057                     	ds	2
   306                           tblptru	equ	0xFF8
   307                           tblptrh	equ	0xFF7
   308                           tblptrl	equ	0xFF6
   309                           tablat	equ	0xFF5
   310                           postinc0	equ	0xFEE
   311                           wreg	equ	0xFE8
   312                           postdec1	equ	0xFE5
   313                           fsr1l	equ	0xFE1
   314                           
   315                           	psect	bssBANK0
   316  000080                     __pbssBANK0:
   317                           	opt stack 0
   318  000080                     _comando:
   319                           	opt stack 0
   320  000080                     	ds	25
   321  000099                     _tam:
   322                           	opt stack 0
   323  000099                     	ds	20
   324                           tblptru	equ	0xFF8
   325                           tblptrh	equ	0xFF7
   326                           tblptrl	equ	0xFF6
   327                           tablat	equ	0xFF5
   328                           postinc0	equ	0xFEE
   329                           wreg	equ	0xFE8
   330                           postdec1	equ	0xFE5
   331                           fsr1l	equ	0xFE1
   332                           
   333                           	psect	cstackBANK0
   334  0000AD                     __pcstackBANK0:
   335                           	opt stack 0
   336  0000AD                     main@i:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x0
   340  0000AD                     	ds	2
   341  0000AF                     main@i_300:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x2
   345  0000AF                     	ds	2
   346  0000B1                     main@i_301:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x4
   350  0000B1                     	ds	2
   351  0000B3                     main@i_302:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x6
   355  0000B3                     	ds	2
   356  0000B5                     main@i_303:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x8
   360  0000B5                     	ds	2
   361  0000B7                     main@i_304:
   362                           	opt stack 0
   363                           
   364                           ; 2 bytes @ 0xA
   365  0000B7                     	ds	2
   366  0000B9                     main@i_305:
   367                           	opt stack 0
   368                           
   369                           ; 2 bytes @ 0xC
   370  0000B9                     	ds	2
   371  0000BB                     main@i_306:
   372                           	opt stack 0
   373                           
   374                           ; 2 bytes @ 0xE
   375  0000BB                     	ds	2
   376  0000BD                     main@i_307:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x10
   380  0000BD                     	ds	2
   381  0000BF                     main@i_308:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x12
   385  0000BF                     	ds	2
   386  0000C1                     main@i_309:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x14
   390  0000C1                     	ds	2
   391  0000C3                     main@i_310:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x16
   395  0000C3                     	ds	2
   396  0000C5                     main@i_311:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x18
   400  0000C5                     	ds	2
   401  0000C7                     main@i_312:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x1A
   405  0000C7                     	ds	2
   406  0000C9                     main@i_313:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0x1C
   410  0000C9                     	ds	2
   411  0000CB                     main@i_314:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x1E
   415  0000CB                     	ds	2
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           postdec1	equ	0xFE5
   423                           fsr1l	equ	0xFE1
   424                           
   425                           	psect	cstackCOMRAM
   426  000001                     __pcstackCOMRAM:
   427                           	opt stack 0
   428  000001                     ??_high_isr:
   429  000001                     
   430                           ; 1 bytes @ 0x0
   431  000001                     	ds	14
   432  00000F                     ??_low_isr:
   433                           
   434                           ; 1 bytes @ 0xE
   435  00000F                     	ds	17
   436  000020                     ?_strcmp:
   437                           	opt stack 0
   438  000020                     ?___wmul:
   439                           	opt stack 0
   440  000020                     enviarTrama@datos:
   441                           	opt stack 0
   442  000020                     ledestado@tiempoled:
   443                           	opt stack 0
   444  000020                     ___wmul@multiplier:
   445                           	opt stack 0
   446  000020                     strcmp@s1:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x1F
   450  000020                     	ds	2
   451  000022                     ??_ledestado:
   452  000022                     ___wmul@multiplicand:
   453                           	opt stack 0
   454  000022                     strcmp@s2:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x21
   458  000022                     	ds	2
   459  000024                     ??_strcmp:
   460  000024                     ___wmul@product:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x23
   464  000024                     	ds	1
   465  000025                     strcmp@r:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x24
   469  000025                     	ds	1
   470  000026                     ?_stringtoint:
   471                           	opt stack 0
   472  000026                     stringtoint@string:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x25
   476  000026                     	ds	2
   477  000028                     ??_stringtoint:
   478                           
   479                           ; 1 bytes @ 0x27
   480  000028                     	ds	1
   481  000029                     ??_main:
   482                           
   483                           ; 1 bytes @ 0x28
   484  000029                     	ds	2
   485                           tblptru	equ	0xFF8
   486                           tblptrh	equ	0xFF7
   487                           tblptrl	equ	0xFF6
   488                           tablat	equ	0xFF5
   489                           postinc0	equ	0xFEE
   490                           wreg	equ	0xFE8
   491                           postdec1	equ	0xFE5
   492                           fsr1l	equ	0xFE1
   493                           
   494 ;;
   495 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   496 ;;
   497 ;; *************** function _main *****************
   498 ;; Defined at:
   499 ;;		line 66 in file "main.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;  i               2   30[BANK0 ] int 
   504 ;;  i               2   28[BANK0 ] int 
   505 ;;  i               2   26[BANK0 ] int 
   506 ;;  i               2   24[BANK0 ] int 
   507 ;;  i               2   22[BANK0 ] int 
   508 ;;  i               2   20[BANK0 ] int 
   509 ;;  i               2   18[BANK0 ] int 
   510 ;;  i               2   16[BANK0 ] int 
   511 ;;  i               2   14[BANK0 ] int 
   512 ;;  i               2   12[BANK0 ] int 
   513 ;;  i               2   10[BANK0 ] int 
   514 ;;  i               2    8[BANK0 ] int 
   515 ;;  i               2    6[BANK0 ] int 
   516 ;;  i               2    4[BANK0 ] int 
   517 ;;  i               2    2[BANK0 ] int 
   518 ;;  i               2    0[BANK0 ] int 
   519 ;; Return value:  Size  Location     Type
   520 ;;                  1    wreg      void 
   521 ;; Registers used:
   522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   523 ;; Tracked objects:
   524 ;;		On entry : 0/0
   525 ;;		On exit  : 0/0
   526 ;;		Unchanged: 0/0
   527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   528 ;;      Params:         0       0       0       0       0       0       0
   529 ;;      Locals:         0      32       0       0       0       0       0
   530 ;;      Temps:          2       0       0       0       0       0       0
   531 ;;      Totals:         2      32       0       0       0       0       0
   532 ;;Total ram usage:       34 bytes
   533 ;; Hardware stack levels required when called:    4
   534 ;; This function calls:
   535 ;;		_ConfigureOscillator
   536 ;;		_InitApp
   537 ;;		_enviarTrama
   538 ;;		_ledestado
   539 ;;		_strcmp
   540 ;;		_stringtoint
   541 ;; This function is called by:
   542 ;;		Startup code after reset
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text0
   547  000630                     __ptext0:
   548                           	opt stack 0
   549  000630                     _main:
   550                           	opt stack 0
   551  000630  FFFF               	dw	65535	; assembler added errata NOP
   552                           
   553                           ;main.c: 68: ConfigureOscillator();
   554                           
   555                           ;incstack = 0
   556  000632  EC58  F007         	call	_ConfigureOscillator	;wreg free
   557                           
   558                           ;main.c: 71: InitApp();
   559  000636  EC1B  F007         	call	_InitApp	;wreg free
   560                           
   561                           ;main.c: 75: enviarTrama(saludo);
   562  00063A  0E01               	movlw	low _saludo
   563  00063C  6E20               	movwf	enviarTrama@datos,c
   564  00063E  0E06               	movlw	high _saludo
   565  000640  6E21               	movwf	enviarTrama@datos+1,c
   566  000642  ECD0  F006         	call	_enviarTrama	;wreg free
   567  000646                     l1649:
   568  000646  FFFF               	dw	65535	; assembler added errata NOP
   569                           
   570                           ;main.c: 77: if (led == 1) {
   571  000648  0445               	decf	_led,w,c
   572  00064A  1046               	iorwf	_led+1,w,c
   573  00064C  A4D8               	btfss	status,2,c
   574  00064E  D006               	goto	l1653
   575                           
   576                           ;main.c: 78: ledestado(10);
   577  000650  0E00               	movlw	0
   578  000652  6E21               	movwf	ledestado@tiempoled+1,c
   579  000654  0E0A               	movlw	10
   580  000656  6E20               	movwf	ledestado@tiempoled,c
   581  000658  ECA8  F006         	call	_ledestado	;wreg free
   582  00065C                     l1653:
   583  00065C  FFFF               	dw	65535	; assembler added errata NOP
   584                           
   585                           ;main.c: 79: }
   586                           ;main.c: 81: if (enter == 1) {
   587  00065E  0447               	decf	_enter,w,c
   588  000660  1048               	iorwf	_enter+1,w,c
   589  000662  A4D8               	btfss	status,2,c
   590  000664  D047               	goto	l1681
   591                           
   592                           ;main.c: 82: if (tama == 9) {
   593  000666  0E09               	movlw	9
   594  000668  1849               	xorwf	_tama,w,c
   595  00066A  104A               	iorwf	_tama+1,w,c
   596  00066C  A4D8               	btfss	status,2,c
   597  00066E  D042               	goto	l1681
   598                           
   599                           ;main.c: 83: for (r = 0; r <= 5; r++) {
   600  000670  0E00               	movlw	0
   601  000672  6E2E               	movwf	_r+1,c
   602  000674  0E00               	movlw	0
   603  000676  6E2D               	movwf	_r,c
   604  000678                     l1659:
   605  000678  FFFF               	dw	65535	; assembler added errata NOP
   606  00067A  BE2E               	btfsc	_r+1,7,c
   607  00067C  D006               	goto	l1663
   608  00067E  502E               	movf	_r+1,w,c
   609  000680  E116               	bnz	l1669
   610  000682  0E06               	movlw	6
   611  000684  5C2D               	subwf	_r,w,c
   612  000686  B0D8               	btfsc	status,0,c
   613  000688  D012               	goto	l1669
   614  00068A                     l1663:
   615  00068A  FFFF               	dw	65535	; assembler added errata NOP
   616                           
   617                           ;main.c: 84: tam[r] = comando[r];
   618  00068C  0E80               	movlw	low _comando
   619  00068E  242D               	addwf	_r,w,c
   620  000690  6ED9               	movwf	fsr2l,c
   621  000692  0E00               	movlw	high _comando
   622  000694  202E               	addwfc	_r+1,w,c
   623  000696  6EDA               	movwf	fsr2h,c
   624  000698  0E99               	movlw	low _tam
   625  00069A  242D               	addwf	_r,w,c
   626  00069C  6EE1               	movwf	fsr1l,c
   627  00069E  0E00               	movlw	high _tam
   628  0006A0  202E               	addwfc	_r+1,w,c
   629  0006A2  6EE2               	movwf	fsr1h,c
   630  0006A4  CFDF FFE7          	movff	indf2,indf1
   631  0006A8  4A2D               	infsnz	_r,f,c
   632  0006AA  2A2E               	incf	_r+1,f,c
   633  0006AC  D7E5               	goto	l1659
   634  0006AE                     l1669:
   635  0006AE  FFFF               	dw	65535	; assembler added errata NOP
   636                           
   637                           ;main.c: 85: }
   638                           ;main.c: 86: xtrue = strcmp(tam, moverx);
   639  0006B0  0E99               	movlw	low _tam
   640  0006B2  6E20               	movwf	strcmp@s1,c
   641  0006B4  0E00               	movlw	high _tam
   642  0006B6  6E21               	movwf	strcmp@s1+1,c
   643  0006B8  0E28               	movlw	low _moverx
   644  0006BA  6E22               	movwf	strcmp@s2,c
   645  0006BC  0E06               	movlw	high _moverx
   646  0006BE  6E23               	movwf	strcmp@s2+1,c
   647  0006C0  EC7E  F006         	call	_strcmp	;wreg free
   648  0006C4  C020  F02B         	movff	?_strcmp,_xtrue
   649  0006C8  C021  F02C         	movff	?_strcmp+1,_xtrue+1
   650                           
   651                           ;main.c: 87: digitos[0] = comando[6];
   652  0006CC  C086  F04C         	movff	_comando+6,_digitos
   653                           
   654                           ;main.c: 88: digitos[1] = comando[7];
   655  0006D0  C087  F04D         	movff	_comando+7,_digitos+1
   656                           
   657                           ;main.c: 89: digitos[2] = comando[8];
   658  0006D4  C088  F04E         	movff	_comando+8,_digitos+2
   659                           
   660                           ;main.c: 90: steps = stringtoint(digitos);
   661  0006D8  0E4C               	movlw	low _digitos
   662  0006DA  6E26               	movwf	stringtoint@string,c
   663  0006DC  0E00               	movlw	high _digitos
   664  0006DE  6E27               	movwf	stringtoint@string+1,c
   665  0006E0  EC30  F006         	call	_stringtoint	;wreg free
   666  0006E4  C026  F035         	movff	?_stringtoint,_steps
   667  0006E8  C027  F036         	movff	?_stringtoint+1,_steps+1
   668                           
   669                           ;main.c: 92: enter = 0;
   670  0006EC  0E00               	movlw	0
   671  0006EE  6E48               	movwf	_enter+1,c
   672  0006F0  0E00               	movlw	0
   673  0006F2  6E47               	movwf	_enter,c
   674  0006F4                     l1681:
   675  0006F4  FFFF               	dw	65535	; assembler added errata NOP
   676                           
   677                           ;main.c: 93: }
   678                           ;main.c: 94: }
   679                           ;main.c: 95: if (xtrue == 0) {
   680  0006F6  502B               	movf	_xtrue,w,c
   681  0006F8  102C               	iorwf	_xtrue+1,w,c
   682  0006FA  A4D8               	btfss	status,2,c
   683  0006FC  D7A4               	goto	l1649
   684                           
   685                           ;main.c: 96: if (steps > 0) {
   686  0006FE  BE36               	btfsc	_steps+1,7,c
   687  000700  D120               	goto	l1763
   688  000702  5036               	movf	_steps+1,w,c
   689  000704  E104               	bnz	u980
   690  000706  0435               	decf	_steps,w,c
   691  000708  B0D8               	btfsc	status,0,c
   692  00070A  D10F               	goto	l1759
   693  00070C  D11A               	goto	l1763
   694  00070E                     u980:
   695                           
   696                           ;main.c: 97: while (stepcont <= steps) {
   697  00070E  D10D               	goto	l1759
   698  000710                     l1687:
   699  000710  FFFF               	dw	65535	; assembler added errata NOP
   700                           
   701                           ;main.c: 99: if (actualstep > 7) {
   702  000712  BE50               	btfsc	_actualstep+1,7,c
   703  000714  D0E8               	goto	l1757
   704  000716  5050               	movf	_actualstep+1,w,c
   705  000718  E104               	bnz	u990
   706  00071A  0E08               	movlw	8
   707  00071C  5C4F               	subwf	_actualstep,w,c
   708  00071E  A0D8               	btfss	status,0,c
   709  000720  D0E2               	goto	l1757
   710  000722                     u990:
   711                           
   712                           ;main.c: 100: actualstep = 0;
   713  000722  0E00               	movlw	0
   714  000724  6E50               	movwf	_actualstep+1,c
   715  000726  0E00               	movlw	0
   716  000728  6E4F               	movwf	_actualstep,c
   717                           
   718                           ;main.c: 101: }
   719                           ;main.c: 102: switch (actualstep) {
   720  00072A  D0DD               	goto	l1757
   721  00072C                     l1691:
   722  00072C  FFFF               	dw	65535	; assembler added errata NOP
   723                           
   724                           ;main.c: 104: LATA = 0b0001;
   725  00072E  0E01               	movlw	1
   726  000730  6E89               	movwf	3977,c	;volatile
   727                           
   728                           ;main.c: 105: for (int i = 0; i <= vel; i++);
   729  000732  0E00               	movlw	0
   730  000734  0100               	movlb	0	; () banked
   731  000736  6FAE               	movwf	(main@i+1)& (0+255),b
   732  000738  0E00               	movlw	0
   733  00073A  6FAD               	movwf	main@i& (0+255),b
   734  00073C  D004               	goto	l1695
   735  00073E                     l1693:
   736  00073E  FFFF               	dw	65535	; assembler added errata NOP
   737                           
   738                           ; BSR set to: 0
   739  000740  0100               	movlb	0	; () banked
   740  000742  4BAD               	infsnz	main@i& (0+255),f,b
   741  000744  2BAE               	incf	(main@i+1)& (0+255),f,b
   742  000746                     l1695:
   743  000746  FFFF               	dw	65535	; assembler added errata NOP
   744                           
   745                           ; BSR set to: 0
   746  000748  0100               	movlb	0	; () banked
   747  00074A  51AD               	movf	main@i& (0+255),w,b
   748  00074C  5C53               	subwf	_vel,w,c
   749  00074E  5054               	movf	_vel+1,w,c
   750  000750  0A80               	xorlw	128
   751  000752  6E29               	movwf	??_main& (0+255),c
   752  000754  0100               	movlb	0	; () banked
   753  000756  51AE               	movf	(main@i+1)& (0+255),w,b
   754  000758  0A80               	xorlw	128
   755  00075A  5829               	subwfb	??_main& (0+255),w,c
   756  00075C  A0D8               	btfss	status,0,c
   757  00075E  D0BD               	goto	l1753
   758  000760  D7EE               	goto	l1693
   759  000762                     l1699:
   760  000762  FFFF               	dw	65535	; assembler added errata NOP
   761                           
   762                           ;main.c: 110: LATA = 0b0011;
   763  000764  0E03               	movlw	3
   764  000766  6E89               	movwf	3977,c	;volatile
   765                           
   766                           ;main.c: 111: for (int i = 0; i <= vel; i++);
   767  000768  0E00               	movlw	0
   768  00076A  0100               	movlb	0	; () banked
   769  00076C  6FB0               	movwf	(main@i_300+1)& (0+255),b
   770  00076E  0E00               	movlw	0
   771  000770  6FAF               	movwf	main@i_300& (0+255),b
   772  000772  D004               	goto	l1703
   773  000774                     l1701:
   774  000774  FFFF               	dw	65535	; assembler added errata NOP
   775                           
   776                           ; BSR set to: 0
   777  000776  0100               	movlb	0	; () banked
   778  000778  4BAF               	infsnz	main@i_300& (0+255),f,b
   779  00077A  2BB0               	incf	(main@i_300+1)& (0+255),f,b
   780  00077C                     l1703:
   781  00077C  FFFF               	dw	65535	; assembler added errata NOP
   782                           
   783                           ; BSR set to: 0
   784  00077E  0100               	movlb	0	; () banked
   785  000780  51AF               	movf	main@i_300& (0+255),w,b
   786  000782  5C53               	subwf	_vel,w,c
   787  000784  5054               	movf	_vel+1,w,c
   788  000786  0A80               	xorlw	128
   789  000788  6E29               	movwf	??_main& (0+255),c
   790  00078A  0100               	movlb	0	; () banked
   791  00078C  51B0               	movf	(main@i_300+1)& (0+255),w,b
   792  00078E  0A80               	xorlw	128
   793  000790  5829               	subwfb	??_main& (0+255),w,c
   794  000792  A0D8               	btfss	status,0,c
   795  000794  D0A2               	goto	l1753
   796  000796  D7EE               	goto	l1701
   797  000798                     l1707:
   798  000798  FFFF               	dw	65535	; assembler added errata NOP
   799                           
   800                           ;main.c: 116: LATA = 0b0010;
   801  00079A  0E02               	movlw	2
   802  00079C  6E89               	movwf	3977,c	;volatile
   803                           
   804                           ;main.c: 117: for (int i = 0; i <= vel; i++);
   805  00079E  0E00               	movlw	0
   806  0007A0  0100               	movlb	0	; () banked
   807  0007A2  6FB2               	movwf	(main@i_301+1)& (0+255),b
   808  0007A4  0E00               	movlw	0
   809  0007A6  6FB1               	movwf	main@i_301& (0+255),b
   810  0007A8  D004               	goto	l1711
   811  0007AA                     l1709:
   812  0007AA  FFFF               	dw	65535	; assembler added errata NOP
   813                           
   814                           ; BSR set to: 0
   815  0007AC  0100               	movlb	0	; () banked
   816  0007AE  4BB1               	infsnz	main@i_301& (0+255),f,b
   817  0007B0  2BB2               	incf	(main@i_301+1)& (0+255),f,b
   818  0007B2                     l1711:
   819  0007B2  FFFF               	dw	65535	; assembler added errata NOP
   820                           
   821                           ; BSR set to: 0
   822  0007B4  0100               	movlb	0	; () banked
   823  0007B6  51B1               	movf	main@i_301& (0+255),w,b
   824  0007B8  5C53               	subwf	_vel,w,c
   825  0007BA  5054               	movf	_vel+1,w,c
   826  0007BC  0A80               	xorlw	128
   827  0007BE  6E29               	movwf	??_main& (0+255),c
   828  0007C0  0100               	movlb	0	; () banked
   829  0007C2  51B2               	movf	(main@i_301+1)& (0+255),w,b
   830  0007C4  0A80               	xorlw	128
   831  0007C6  5829               	subwfb	??_main& (0+255),w,c
   832  0007C8  A0D8               	btfss	status,0,c
   833  0007CA  D087               	goto	l1753
   834  0007CC  D7EE               	goto	l1709
   835  0007CE                     l1715:
   836  0007CE  FFFF               	dw	65535	; assembler added errata NOP
   837                           
   838                           ;main.c: 122: LATA = 0b0110;
   839  0007D0  0E06               	movlw	6
   840  0007D2  6E89               	movwf	3977,c	;volatile
   841                           
   842                           ;main.c: 123: for (int i = 0; i <= vel; i++);
   843  0007D4  0E00               	movlw	0
   844  0007D6  0100               	movlb	0	; () banked
   845  0007D8  6FB4               	movwf	(main@i_302+1)& (0+255),b
   846  0007DA  0E00               	movlw	0
   847  0007DC  6FB3               	movwf	main@i_302& (0+255),b
   848  0007DE  D004               	goto	l1719
   849  0007E0                     l1717:
   850  0007E0  FFFF               	dw	65535	; assembler added errata NOP
   851                           
   852                           ; BSR set to: 0
   853  0007E2  0100               	movlb	0	; () banked
   854  0007E4  4BB3               	infsnz	main@i_302& (0+255),f,b
   855  0007E6  2BB4               	incf	(main@i_302+1)& (0+255),f,b
   856  0007E8                     l1719:
   857  0007E8  FFFF               	dw	65535	; assembler added errata NOP
   858                           
   859                           ; BSR set to: 0
   860  0007EA  0100               	movlb	0	; () banked
   861  0007EC  51B3               	movf	main@i_302& (0+255),w,b
   862  0007EE  5C53               	subwf	_vel,w,c
   863  0007F0  5054               	movf	_vel+1,w,c
   864  0007F2  0A80               	xorlw	128
   865  0007F4  6E29               	movwf	??_main& (0+255),c
   866  0007F6  0100               	movlb	0	; () banked
   867  0007F8  51B4               	movf	(main@i_302+1)& (0+255),w,b
   868  0007FA  0A80               	xorlw	128
   869  0007FC  5829               	subwfb	??_main& (0+255),w,c
   870  0007FE  A0D8               	btfss	status,0,c
   871  000800  D06C               	goto	l1753
   872  000802  D7EE               	goto	l1717
   873  000804                     l1723:
   874  000804  FFFF               	dw	65535	; assembler added errata NOP
   875                           
   876                           ;main.c: 128: LATA = 0b0100;
   877  000806  0E04               	movlw	4
   878  000808  6E89               	movwf	3977,c	;volatile
   879                           
   880                           ;main.c: 129: for (int i = 0; i <= vel; i++);
   881  00080A  0E00               	movlw	0
   882  00080C  0100               	movlb	0	; () banked
   883  00080E  6FB6               	movwf	(main@i_303+1)& (0+255),b
   884  000810  0E00               	movlw	0
   885  000812  6FB5               	movwf	main@i_303& (0+255),b
   886  000814  D004               	goto	l1727
   887  000816                     l1725:
   888  000816  FFFF               	dw	65535	; assembler added errata NOP
   889                           
   890                           ; BSR set to: 0
   891  000818  0100               	movlb	0	; () banked
   892  00081A  4BB5               	infsnz	main@i_303& (0+255),f,b
   893  00081C  2BB6               	incf	(main@i_303+1)& (0+255),f,b
   894  00081E                     l1727:
   895  00081E  FFFF               	dw	65535	; assembler added errata NOP
   896                           
   897                           ; BSR set to: 0
   898  000820  0100               	movlb	0	; () banked
   899  000822  51B5               	movf	main@i_303& (0+255),w,b
   900  000824  5C53               	subwf	_vel,w,c
   901  000826  5054               	movf	_vel+1,w,c
   902  000828  0A80               	xorlw	128
   903  00082A  6E29               	movwf	??_main& (0+255),c
   904  00082C  0100               	movlb	0	; () banked
   905  00082E  51B6               	movf	(main@i_303+1)& (0+255),w,b
   906  000830  0A80               	xorlw	128
   907  000832  5829               	subwfb	??_main& (0+255),w,c
   908  000834  A0D8               	btfss	status,0,c
   909  000836  D051               	goto	l1753
   910  000838  D7EE               	goto	l1725
   911  00083A                     l1731:
   912  00083A  FFFF               	dw	65535	; assembler added errata NOP
   913                           
   914                           ;main.c: 134: LATA = 0b1100;
   915  00083C  0E0C               	movlw	12
   916  00083E  6E89               	movwf	3977,c	;volatile
   917                           
   918                           ;main.c: 135: for (int i = 0; i <= vel; i++);
   919  000840  0E00               	movlw	0
   920  000842  0100               	movlb	0	; () banked
   921  000844  6FB8               	movwf	(main@i_304+1)& (0+255),b
   922  000846  0E00               	movlw	0
   923  000848  6FB7               	movwf	main@i_304& (0+255),b
   924  00084A  D004               	goto	l1735
   925  00084C                     l1733:
   926  00084C  FFFF               	dw	65535	; assembler added errata NOP
   927                           
   928                           ; BSR set to: 0
   929  00084E  0100               	movlb	0	; () banked
   930  000850  4BB7               	infsnz	main@i_304& (0+255),f,b
   931  000852  2BB8               	incf	(main@i_304+1)& (0+255),f,b
   932  000854                     l1735:
   933  000854  FFFF               	dw	65535	; assembler added errata NOP
   934                           
   935                           ; BSR set to: 0
   936  000856  0100               	movlb	0	; () banked
   937  000858  51B7               	movf	main@i_304& (0+255),w,b
   938  00085A  5C53               	subwf	_vel,w,c
   939  00085C  5054               	movf	_vel+1,w,c
   940  00085E  0A80               	xorlw	128
   941  000860  6E29               	movwf	??_main& (0+255),c
   942  000862  0100               	movlb	0	; () banked
   943  000864  51B8               	movf	(main@i_304+1)& (0+255),w,b
   944  000866  0A80               	xorlw	128
   945  000868  5829               	subwfb	??_main& (0+255),w,c
   946  00086A  A0D8               	btfss	status,0,c
   947  00086C  D036               	goto	l1753
   948  00086E  D7EE               	goto	l1733
   949  000870                     l1739:
   950  000870  FFFF               	dw	65535	; assembler added errata NOP
   951                           
   952                           ;main.c: 141: LATA = 0b1000;
   953  000872  0E08               	movlw	8
   954  000874  6E89               	movwf	3977,c	;volatile
   955                           
   956                           ;main.c: 142: for (int i = 0; i <= vel; i++);
   957  000876  0E00               	movlw	0
   958  000878  0100               	movlb	0	; () banked
   959  00087A  6FBA               	movwf	(main@i_305+1)& (0+255),b
   960  00087C  0E00               	movlw	0
   961  00087E  6FB9               	movwf	main@i_305& (0+255),b
   962  000880  D004               	goto	l1743
   963  000882                     l1741:
   964  000882  FFFF               	dw	65535	; assembler added errata NOP
   965                           
   966                           ; BSR set to: 0
   967  000884  0100               	movlb	0	; () banked
   968  000886  4BB9               	infsnz	main@i_305& (0+255),f,b
   969  000888  2BBA               	incf	(main@i_305+1)& (0+255),f,b
   970  00088A                     l1743:
   971  00088A  FFFF               	dw	65535	; assembler added errata NOP
   972                           
   973                           ; BSR set to: 0
   974  00088C  0100               	movlb	0	; () banked
   975  00088E  51B9               	movf	main@i_305& (0+255),w,b
   976  000890  5C53               	subwf	_vel,w,c
   977  000892  5054               	movf	_vel+1,w,c
   978  000894  0A80               	xorlw	128
   979  000896  6E29               	movwf	??_main& (0+255),c
   980  000898  0100               	movlb	0	; () banked
   981  00089A  51BA               	movf	(main@i_305+1)& (0+255),w,b
   982  00089C  0A80               	xorlw	128
   983  00089E  5829               	subwfb	??_main& (0+255),w,c
   984  0008A0  A0D8               	btfss	status,0,c
   985  0008A2  D01B               	goto	l1753
   986  0008A4  D7EE               	goto	l1741
   987  0008A6                     l1747:
   988  0008A6  FFFF               	dw	65535	; assembler added errata NOP
   989                           
   990                           ;main.c: 147: LATA = 0b1001;
   991  0008A8  0E09               	movlw	9
   992  0008AA  6E89               	movwf	3977,c	;volatile
   993                           
   994                           ;main.c: 148: for (int i = 0; i <= vel; i++);
   995  0008AC  0E00               	movlw	0
   996  0008AE  0100               	movlb	0	; () banked
   997  0008B0  6FBC               	movwf	(main@i_306+1)& (0+255),b
   998  0008B2  0E00               	movlw	0
   999  0008B4  6FBB               	movwf	main@i_306& (0+255),b
  1000  0008B6  D004               	goto	l1751
  1001  0008B8                     l1749:
  1002  0008B8  FFFF               	dw	65535	; assembler added errata NOP
  1003                           
  1004                           ; BSR set to: 0
  1005  0008BA  0100               	movlb	0	; () banked
  1006  0008BC  4BBB               	infsnz	main@i_306& (0+255),f,b
  1007  0008BE  2BBC               	incf	(main@i_306+1)& (0+255),f,b
  1008  0008C0                     l1751:
  1009  0008C0  FFFF               	dw	65535	; assembler added errata NOP
  1010                           
  1011                           ; BSR set to: 0
  1012  0008C2  0100               	movlb	0	; () banked
  1013  0008C4  51BB               	movf	main@i_306& (0+255),w,b
  1014  0008C6  5C53               	subwf	_vel,w,c
  1015  0008C8  5054               	movf	_vel+1,w,c
  1016  0008CA  0A80               	xorlw	128
  1017  0008CC  6E29               	movwf	??_main& (0+255),c
  1018  0008CE  0100               	movlb	0	; () banked
  1019  0008D0  51BC               	movf	(main@i_306+1)& (0+255),w,b
  1020  0008D2  0A80               	xorlw	128
  1021  0008D4  5829               	subwfb	??_main& (0+255),w,c
  1022  0008D6  B0D8               	btfsc	status,0,c
  1023  0008D8  D7EF               	goto	l1749
  1024  0008DA                     l1753:
  1025  0008DA  FFFF               	dw	65535	; assembler added errata NOP
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;main.c: 149: stepcont++;
  1029  0008DC  4A57               	infsnz	_stepcont,f,c
  1030  0008DE  2A58               	incf	_stepcont+1,f,c
  1031                           
  1032                           ;main.c: 150: actualstep++;
  1033  0008E0  4A4F               	infsnz	_actualstep,f,c
  1034  0008E2  2A50               	incf	_actualstep+1,f,c
  1035                           
  1036                           ; BSR set to: 0
  1037                           ;main.c: 152: }
  1038                           
  1039                           ;main.c: 151: break;
  1040  0008E4  D022               	goto	l1759
  1041  0008E6                     l1757:
  1042  0008E6  FFFF               	dw	65535	; assembler added errata NOP
  1043  0008E8  C04F  F029         	movff	_actualstep,??_main
  1044  0008EC  C050  F02A         	movff	_actualstep+1,??_main+1
  1045                           
  1046                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1047                           ; Switch size 1, requested type "space"
  1048                           ; Number of cases is 1, Range of values is 0 to 0
  1049                           ; switch strategies available:
  1050                           ; Name         Instructions Cycles
  1051                           ; simple_byte            4     3 (average)
  1052                           ;	Chosen strategy is simple_byte
  1053  0008F0  502A               	movf	??_main+1,w,c
  1054  0008F2  0A00               	xorlw	0	; case 0
  1055  0008F4  A4D8               	btfss	status,2,c
  1056  0008F6  D019               	goto	l1759
  1057                           
  1058                           ; Switch size 1, requested type "space"
  1059                           ; Number of cases is 8, Range of values is 0 to 7
  1060                           ; switch strategies available:
  1061                           ; Name         Instructions Cycles
  1062                           ; simple_byte           25    13 (average)
  1063                           ;	Chosen strategy is simple_byte
  1064  0008F8  5029               	movf	??_main,w,c
  1065  0008FA  0A00               	xorlw	0	; case 0
  1066  0008FC  B4D8               	btfsc	status,2,c
  1067  0008FE  D716               	goto	l1691
  1068  000900  0A01               	xorlw	1	; case 1
  1069  000902  B4D8               	btfsc	status,2,c
  1070  000904  D72E               	goto	l1699
  1071  000906  0A03               	xorlw	3	; case 2
  1072  000908  B4D8               	btfsc	status,2,c
  1073  00090A  D746               	goto	l1707
  1074  00090C  0A01               	xorlw	1	; case 3
  1075  00090E  B4D8               	btfsc	status,2,c
  1076  000910  D75E               	goto	l1715
  1077  000912  0A07               	xorlw	7	; case 4
  1078  000914  B4D8               	btfsc	status,2,c
  1079  000916  D776               	goto	l1723
  1080  000918  0A01               	xorlw	1	; case 5
  1081  00091A  B4D8               	btfsc	status,2,c
  1082  00091C  D78E               	goto	l1731
  1083  00091E  0A03               	xorlw	3	; case 6
  1084  000920  B4D8               	btfsc	status,2,c
  1085  000922  D7A6               	goto	l1739
  1086  000924  0A01               	xorlw	1	; case 7
  1087  000926  B4D8               	btfsc	status,2,c
  1088  000928  D7BE               	goto	l1747
  1089  00092A                     l1759:
  1090  00092A  FFFF               	dw	65535	; assembler added errata NOP
  1091  00092C  5057               	movf	_stepcont,w,c
  1092  00092E  5C35               	subwf	_steps,w,c
  1093  000930  5036               	movf	_steps+1,w,c
  1094  000932  0A80               	xorlw	128
  1095  000934  6E29               	movwf	??_main& (0+255),c
  1096  000936  5058               	movf	_stepcont+1,w,c
  1097  000938  0A80               	xorlw	128
  1098  00093A  5829               	subwfb	??_main& (0+255),w,c
  1099  00093C  A0D8               	btfss	status,0,c
  1100  00093E  D11C               	goto	l1845
  1101  000940  D6E7               	goto	l1687
  1102  000942                     l1763:
  1103  000942  FFFF               	dw	65535	; assembler added errata NOP
  1104  000944  BE36               	btfsc	_steps+1,7,c
  1105  000946  D10D               	goto	l1843
  1106  000948  D67E               	goto	l1649
  1107  00094A                     l1767:
  1108  00094A  FFFF               	dw	65535	; assembler added errata NOP
  1109                           
  1110                           ;main.c: 160: if (actualstep < 0) {
  1111  00094C  AE50               	btfss	_actualstep+1,7,c
  1112  00094E  D0E7               	goto	l1841
  1113                           
  1114                           ;main.c: 161: actualstep = 7;
  1115  000950  0E00               	movlw	0
  1116  000952  6E50               	movwf	_actualstep+1,c
  1117  000954  0E07               	movlw	7
  1118  000956  6E4F               	movwf	_actualstep,c
  1119                           
  1120                           ;main.c: 162: }
  1121                           ;main.c: 163: switch (actualstep) {
  1122  000958  D0E2               	goto	l1841
  1123  00095A                     l1771:
  1124  00095A  FFFF               	dw	65535	; assembler added errata NOP
  1125                           
  1126                           ;main.c: 165: LATA = 0b1001;
  1127  00095C  0E09               	movlw	9
  1128  00095E  6E89               	movwf	3977,c	;volatile
  1129                           
  1130                           ;main.c: 166: for (int i = 0; i <= vel; i++);
  1131  000960  0E00               	movlw	0
  1132  000962  0100               	movlb	0	; () banked
  1133  000964  6FBE               	movwf	(main@i_307+1)& (0+255),b
  1134  000966  0E00               	movlw	0
  1135  000968  6FBD               	movwf	main@i_307& (0+255),b
  1136  00096A  D004               	goto	l1775
  1137  00096C                     l1773:
  1138  00096C  FFFF               	dw	65535	; assembler added errata NOP
  1139                           
  1140                           ; BSR set to: 0
  1141  00096E  0100               	movlb	0	; () banked
  1142  000970  4BBD               	infsnz	main@i_307& (0+255),f,b
  1143  000972  2BBE               	incf	(main@i_307+1)& (0+255),f,b
  1144  000974                     l1775:
  1145  000974  FFFF               	dw	65535	; assembler added errata NOP
  1146                           
  1147                           ; BSR set to: 0
  1148  000976  0100               	movlb	0	; () banked
  1149  000978  51BD               	movf	main@i_307& (0+255),w,b
  1150  00097A  5C53               	subwf	_vel,w,c
  1151  00097C  5054               	movf	_vel+1,w,c
  1152  00097E  0A80               	xorlw	128
  1153  000980  6E29               	movwf	??_main& (0+255),c
  1154  000982  0100               	movlb	0	; () banked
  1155  000984  51BE               	movf	(main@i_307+1)& (0+255),w,b
  1156  000986  0A80               	xorlw	128
  1157  000988  5829               	subwfb	??_main& (0+255),w,c
  1158  00098A  A0D8               	btfss	status,0,c
  1159  00098C  D0C0               	goto	l1837
  1160  00098E  D7EE               	goto	l1773
  1161  000990                     l1779:
  1162  000990  FFFF               	dw	65535	; assembler added errata NOP
  1163                           
  1164                           ;main.c: 171: LATA = 0b1000;
  1165  000992  0E08               	movlw	8
  1166  000994  6E89               	movwf	3977,c	;volatile
  1167                           
  1168                           ;main.c: 172: for (int i = 0; i <= vel; i++);
  1169  000996  0E00               	movlw	0
  1170  000998  0100               	movlb	0	; () banked
  1171  00099A  6FC0               	movwf	(main@i_308+1)& (0+255),b
  1172  00099C  0E00               	movlw	0
  1173  00099E  6FBF               	movwf	main@i_308& (0+255),b
  1174  0009A0  D004               	goto	l1783
  1175  0009A2                     l1781:
  1176  0009A2  FFFF               	dw	65535	; assembler added errata NOP
  1177                           
  1178                           ; BSR set to: 0
  1179  0009A4  0100               	movlb	0	; () banked
  1180  0009A6  4BBF               	infsnz	main@i_308& (0+255),f,b
  1181  0009A8  2BC0               	incf	(main@i_308+1)& (0+255),f,b
  1182  0009AA                     l1783:
  1183  0009AA  FFFF               	dw	65535	; assembler added errata NOP
  1184                           
  1185                           ; BSR set to: 0
  1186  0009AC  0100               	movlb	0	; () banked
  1187  0009AE  51BF               	movf	main@i_308& (0+255),w,b
  1188  0009B0  5C53               	subwf	_vel,w,c
  1189  0009B2  5054               	movf	_vel+1,w,c
  1190  0009B4  0A80               	xorlw	128
  1191  0009B6  6E29               	movwf	??_main& (0+255),c
  1192  0009B8  0100               	movlb	0	; () banked
  1193  0009BA  51C0               	movf	(main@i_308+1)& (0+255),w,b
  1194  0009BC  0A80               	xorlw	128
  1195  0009BE  5829               	subwfb	??_main& (0+255),w,c
  1196  0009C0  A0D8               	btfss	status,0,c
  1197  0009C2  D0A5               	goto	l1837
  1198  0009C4  D7EE               	goto	l1781
  1199  0009C6                     l1787:
  1200  0009C6  FFFF               	dw	65535	; assembler added errata NOP
  1201                           
  1202                           ;main.c: 177: LATA = 0b1100;
  1203  0009C8  0E0C               	movlw	12
  1204  0009CA  6E89               	movwf	3977,c	;volatile
  1205                           
  1206                           ;main.c: 178: for (int i = 0; i <= vel; i++);
  1207  0009CC  0E00               	movlw	0
  1208  0009CE  0100               	movlb	0	; () banked
  1209  0009D0  6FC2               	movwf	(main@i_309+1)& (0+255),b
  1210  0009D2  0E00               	movlw	0
  1211  0009D4  6FC1               	movwf	main@i_309& (0+255),b
  1212  0009D6  D004               	goto	l1791
  1213  0009D8                     l1789:
  1214  0009D8  FFFF               	dw	65535	; assembler added errata NOP
  1215                           
  1216                           ; BSR set to: 0
  1217  0009DA  0100               	movlb	0	; () banked
  1218  0009DC  4BC1               	infsnz	main@i_309& (0+255),f,b
  1219  0009DE  2BC2               	incf	(main@i_309+1)& (0+255),f,b
  1220  0009E0                     l1791:
  1221  0009E0  FFFF               	dw	65535	; assembler added errata NOP
  1222                           
  1223                           ; BSR set to: 0
  1224  0009E2  0100               	movlb	0	; () banked
  1225  0009E4  51C1               	movf	main@i_309& (0+255),w,b
  1226  0009E6  5C53               	subwf	_vel,w,c
  1227  0009E8  5054               	movf	_vel+1,w,c
  1228  0009EA  0A80               	xorlw	128
  1229  0009EC  6E29               	movwf	??_main& (0+255),c
  1230  0009EE  0100               	movlb	0	; () banked
  1231  0009F0  51C2               	movf	(main@i_309+1)& (0+255),w,b
  1232  0009F2  0A80               	xorlw	128
  1233  0009F4  5829               	subwfb	??_main& (0+255),w,c
  1234  0009F6  A0D8               	btfss	status,0,c
  1235  0009F8  D08A               	goto	l1837
  1236  0009FA  D7EE               	goto	l1789
  1237  0009FC                     l1795:
  1238  0009FC  FFFF               	dw	65535	; assembler added errata NOP
  1239                           
  1240                           ;main.c: 183: LATA = 0b0100;
  1241  0009FE  0E04               	movlw	4
  1242  000A00  6E89               	movwf	3977,c	;volatile
  1243                           
  1244                           ;main.c: 184: for (int i = 0; i <= vel; i++);
  1245  000A02  0E00               	movlw	0
  1246  000A04  0100               	movlb	0	; () banked
  1247  000A06  6FC4               	movwf	(main@i_310+1)& (0+255),b
  1248  000A08  0E00               	movlw	0
  1249  000A0A  6FC3               	movwf	main@i_310& (0+255),b
  1250  000A0C  D004               	goto	l1799
  1251  000A0E                     l1797:
  1252  000A0E  FFFF               	dw	65535	; assembler added errata NOP
  1253                           
  1254                           ; BSR set to: 0
  1255  000A10  0100               	movlb	0	; () banked
  1256  000A12  4BC3               	infsnz	main@i_310& (0+255),f,b
  1257  000A14  2BC4               	incf	(main@i_310+1)& (0+255),f,b
  1258  000A16                     l1799:
  1259  000A16  FFFF               	dw	65535	; assembler added errata NOP
  1260                           
  1261                           ; BSR set to: 0
  1262  000A18  0100               	movlb	0	; () banked
  1263  000A1A  51C3               	movf	main@i_310& (0+255),w,b
  1264  000A1C  5C53               	subwf	_vel,w,c
  1265  000A1E  5054               	movf	_vel+1,w,c
  1266  000A20  0A80               	xorlw	128
  1267  000A22  6E29               	movwf	??_main& (0+255),c
  1268  000A24  0100               	movlb	0	; () banked
  1269  000A26  51C4               	movf	(main@i_310+1)& (0+255),w,b
  1270  000A28  0A80               	xorlw	128
  1271  000A2A  5829               	subwfb	??_main& (0+255),w,c
  1272  000A2C  A0D8               	btfss	status,0,c
  1273  000A2E  D06F               	goto	l1837
  1274  000A30  D7EE               	goto	l1797
  1275  000A32                     l1803:
  1276  000A32  FFFF               	dw	65535	; assembler added errata NOP
  1277                           
  1278                           ;main.c: 189: LATA = 0b0110;
  1279  000A34  0E06               	movlw	6
  1280  000A36  6E89               	movwf	3977,c	;volatile
  1281                           
  1282                           ;main.c: 190: for (int i = 0; i <= vel; i++);
  1283  000A38  0E00               	movlw	0
  1284  000A3A  0100               	movlb	0	; () banked
  1285  000A3C  6FC6               	movwf	(main@i_311+1)& (0+255),b
  1286  000A3E  0E00               	movlw	0
  1287  000A40  6FC5               	movwf	main@i_311& (0+255),b
  1288  000A42  D004               	goto	l1807
  1289  000A44                     l1805:
  1290  000A44  FFFF               	dw	65535	; assembler added errata NOP
  1291                           
  1292                           ; BSR set to: 0
  1293  000A46  0100               	movlb	0	; () banked
  1294  000A48  4BC5               	infsnz	main@i_311& (0+255),f,b
  1295  000A4A  2BC6               	incf	(main@i_311+1)& (0+255),f,b
  1296  000A4C                     l1807:
  1297  000A4C  FFFF               	dw	65535	; assembler added errata NOP
  1298                           
  1299                           ; BSR set to: 0
  1300  000A4E  0100               	movlb	0	; () banked
  1301  000A50  51C5               	movf	main@i_311& (0+255),w,b
  1302  000A52  5C53               	subwf	_vel,w,c
  1303  000A54  5054               	movf	_vel+1,w,c
  1304  000A56  0A80               	xorlw	128
  1305  000A58  6E29               	movwf	??_main& (0+255),c
  1306  000A5A  0100               	movlb	0	; () banked
  1307  000A5C  51C6               	movf	(main@i_311+1)& (0+255),w,b
  1308  000A5E  0A80               	xorlw	128
  1309  000A60  5829               	subwfb	??_main& (0+255),w,c
  1310  000A62  A0D8               	btfss	status,0,c
  1311  000A64  D054               	goto	l1837
  1312  000A66  D7EE               	goto	l1805
  1313  000A68                     l1811:
  1314  000A68  FFFF               	dw	65535	; assembler added errata NOP
  1315                           
  1316                           ;main.c: 195: LATA = 0b0010;
  1317  000A6A  0E02               	movlw	2
  1318  000A6C  6E89               	movwf	3977,c	;volatile
  1319                           
  1320                           ;main.c: 196: for (int i = 0; i <= vel; i++);
  1321  000A6E  0E00               	movlw	0
  1322  000A70  0100               	movlb	0	; () banked
  1323  000A72  6FC8               	movwf	(main@i_312+1)& (0+255),b
  1324  000A74  0E00               	movlw	0
  1325  000A76  6FC7               	movwf	main@i_312& (0+255),b
  1326  000A78  D004               	goto	l1815
  1327  000A7A                     l1813:
  1328  000A7A  FFFF               	dw	65535	; assembler added errata NOP
  1329                           
  1330                           ; BSR set to: 0
  1331  000A7C  0100               	movlb	0	; () banked
  1332  000A7E  4BC7               	infsnz	main@i_312& (0+255),f,b
  1333  000A80  2BC8               	incf	(main@i_312+1)& (0+255),f,b
  1334  000A82                     l1815:
  1335  000A82  FFFF               	dw	65535	; assembler added errata NOP
  1336                           
  1337                           ; BSR set to: 0
  1338  000A84  0100               	movlb	0	; () banked
  1339  000A86  51C7               	movf	main@i_312& (0+255),w,b
  1340  000A88  5C53               	subwf	_vel,w,c
  1341  000A8A  5054               	movf	_vel+1,w,c
  1342  000A8C  0A80               	xorlw	128
  1343  000A8E  6E29               	movwf	??_main& (0+255),c
  1344  000A90  0100               	movlb	0	; () banked
  1345  000A92  51C8               	movf	(main@i_312+1)& (0+255),w,b
  1346  000A94  0A80               	xorlw	128
  1347  000A96  5829               	subwfb	??_main& (0+255),w,c
  1348  000A98  B0D8               	btfsc	status,0,c
  1349  000A9A  D7EF               	goto	l1813
  1350                           
  1351                           ; BSR set to: 0
  1352                           ;main.c: 197: stepcont--;
  1353                           
  1354                           ; BSR set to: 0
  1355  000A9C  0657               	decf	_stepcont,f,c
  1356  000A9E  A0D8               	btfss	status,0,c
  1357  000AA0  0658               	decf	_stepcont+1,f,c
  1358                           
  1359                           ;main.c: 198: break;
  1360  000AA2  D05F               	goto	l1843
  1361  000AA4                     l1821:
  1362  000AA4  FFFF               	dw	65535	; assembler added errata NOP
  1363                           
  1364                           ;main.c: 201: LATA = 0b0011;
  1365  000AA6  0E03               	movlw	3
  1366  000AA8  6E89               	movwf	3977,c	;volatile
  1367                           
  1368                           ;main.c: 202: for (int i = 0; i <= vel; i++);
  1369  000AAA  0E00               	movlw	0
  1370  000AAC  0100               	movlb	0	; () banked
  1371  000AAE  6FCA               	movwf	(main@i_313+1)& (0+255),b
  1372  000AB0  0E00               	movlw	0
  1373  000AB2  6FC9               	movwf	main@i_313& (0+255),b
  1374  000AB4  D004               	goto	l1827
  1375  000AB6                     l1825:
  1376  000AB6  FFFF               	dw	65535	; assembler added errata NOP
  1377                           
  1378                           ; BSR set to: 0
  1379  000AB8  0100               	movlb	0	; () banked
  1380  000ABA  4BC9               	infsnz	main@i_313& (0+255),f,b
  1381  000ABC  2BCA               	incf	(main@i_313+1)& (0+255),f,b
  1382  000ABE                     l1827:
  1383  000ABE  FFFF               	dw	65535	; assembler added errata NOP
  1384                           
  1385                           ; BSR set to: 0
  1386  000AC0  0100               	movlb	0	; () banked
  1387  000AC2  51C9               	movf	main@i_313& (0+255),w,b
  1388  000AC4  5C53               	subwf	_vel,w,c
  1389  000AC6  5054               	movf	_vel+1,w,c
  1390  000AC8  0A80               	xorlw	128
  1391  000ACA  6E29               	movwf	??_main& (0+255),c
  1392  000ACC  0100               	movlb	0	; () banked
  1393  000ACE  51CA               	movf	(main@i_313+1)& (0+255),w,b
  1394  000AD0  0A80               	xorlw	128
  1395  000AD2  5829               	subwfb	??_main& (0+255),w,c
  1396  000AD4  A0D8               	btfss	status,0,c
  1397  000AD6  D01B               	goto	l1837
  1398  000AD8  D7EE               	goto	l1825
  1399  000ADA                     l1831:
  1400  000ADA  FFFF               	dw	65535	; assembler added errata NOP
  1401                           
  1402                           ;main.c: 207: LATA = 0b0001;
  1403  000ADC  0E01               	movlw	1
  1404  000ADE  6E89               	movwf	3977,c	;volatile
  1405                           
  1406                           ;main.c: 208: for (int i = 0; i <= vel; i++);
  1407  000AE0  0E00               	movlw	0
  1408  000AE2  0100               	movlb	0	; () banked
  1409  000AE4  6FCC               	movwf	(main@i_314+1)& (0+255),b
  1410  000AE6  0E00               	movlw	0
  1411  000AE8  6FCB               	movwf	main@i_314& (0+255),b
  1412  000AEA  D004               	goto	l1835
  1413  000AEC                     l1833:
  1414  000AEC  FFFF               	dw	65535	; assembler added errata NOP
  1415                           
  1416                           ; BSR set to: 0
  1417  000AEE  0100               	movlb	0	; () banked
  1418  000AF0  4BCB               	infsnz	main@i_314& (0+255),f,b
  1419  000AF2  2BCC               	incf	(main@i_314+1)& (0+255),f,b
  1420  000AF4                     l1835:
  1421  000AF4  FFFF               	dw	65535	; assembler added errata NOP
  1422                           
  1423                           ; BSR set to: 0
  1424  000AF6  0100               	movlb	0	; () banked
  1425  000AF8  51CB               	movf	main@i_314& (0+255),w,b
  1426  000AFA  5C53               	subwf	_vel,w,c
  1427  000AFC  5054               	movf	_vel+1,w,c
  1428  000AFE  0A80               	xorlw	128
  1429  000B00  6E29               	movwf	??_main& (0+255),c
  1430  000B02  0100               	movlb	0	; () banked
  1431  000B04  51CC               	movf	(main@i_314+1)& (0+255),w,b
  1432  000B06  0A80               	xorlw	128
  1433  000B08  5829               	subwfb	??_main& (0+255),w,c
  1434  000B0A  B0D8               	btfsc	status,0,c
  1435  000B0C  D7EF               	goto	l1833
  1436  000B0E                     l1837:
  1437  000B0E  FFFF               	dw	65535	; assembler added errata NOP
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;main.c: 209: stepcont--;
  1441  000B10  0657               	decf	_stepcont,f,c
  1442  000B12  A0D8               	btfss	status,0,c
  1443  000B14  0658               	decf	_stepcont+1,f,c
  1444                           
  1445                           ;main.c: 210: actualstep--;
  1446  000B16  064F               	decf	_actualstep,f,c
  1447  000B18  A0D8               	btfss	status,0,c
  1448  000B1A  0650               	decf	_actualstep+1,f,c
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;main.c: 212: }
  1452                           
  1453                           ;main.c: 211: break;
  1454  000B1C  D022               	goto	l1843
  1455  000B1E                     l1841:
  1456  000B1E  FFFF               	dw	65535	; assembler added errata NOP
  1457  000B20  C04F  F029         	movff	_actualstep,??_main
  1458  000B24  C050  F02A         	movff	_actualstep+1,??_main+1
  1459                           
  1460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1461                           ; Switch size 1, requested type "space"
  1462                           ; Number of cases is 1, Range of values is 0 to 0
  1463                           ; switch strategies available:
  1464                           ; Name         Instructions Cycles
  1465                           ; simple_byte            4     3 (average)
  1466                           ;	Chosen strategy is simple_byte
  1467  000B28  502A               	movf	??_main+1,w,c
  1468  000B2A  0A00               	xorlw	0	; case 0
  1469  000B2C  A4D8               	btfss	status,2,c
  1470  000B2E  D019               	goto	l1843
  1471                           
  1472                           ; Switch size 1, requested type "space"
  1473                           ; Number of cases is 8, Range of values is 0 to 7
  1474                           ; switch strategies available:
  1475                           ; Name         Instructions Cycles
  1476                           ; simple_byte           25    13 (average)
  1477                           ;	Chosen strategy is simple_byte
  1478  000B30  5029               	movf	??_main,w,c
  1479  000B32  0A00               	xorlw	0	; case 0
  1480  000B34  B4D8               	btfsc	status,2,c
  1481  000B36  D711               	goto	l1771
  1482  000B38  0A01               	xorlw	1	; case 1
  1483  000B3A  B4D8               	btfsc	status,2,c
  1484  000B3C  D729               	goto	l1779
  1485  000B3E  0A03               	xorlw	3	; case 2
  1486  000B40  B4D8               	btfsc	status,2,c
  1487  000B42  D741               	goto	l1787
  1488  000B44  0A01               	xorlw	1	; case 3
  1489  000B46  B4D8               	btfsc	status,2,c
  1490  000B48  D759               	goto	l1795
  1491  000B4A  0A07               	xorlw	7	; case 4
  1492  000B4C  B4D8               	btfsc	status,2,c
  1493  000B4E  D771               	goto	l1803
  1494  000B50  0A01               	xorlw	1	; case 5
  1495  000B52  B4D8               	btfsc	status,2,c
  1496  000B54  D789               	goto	l1811
  1497  000B56  0A03               	xorlw	3	; case 6
  1498  000B58  B4D8               	btfsc	status,2,c
  1499  000B5A  D7A4               	goto	l1821
  1500  000B5C  0A01               	xorlw	1	; case 7
  1501  000B5E  B4D8               	btfsc	status,2,c
  1502  000B60  D7BC               	goto	l1831
  1503  000B62                     l1843:
  1504  000B62  FFFF               	dw	65535	; assembler added errata NOP
  1505  000B64  5035               	movf	_steps,w,c
  1506  000B66  5C57               	subwf	_stepcont,w,c
  1507  000B68  5058               	movf	_stepcont+1,w,c
  1508  000B6A  0A80               	xorlw	128
  1509  000B6C  6E29               	movwf	??_main& (0+255),c
  1510  000B6E  5036               	movf	_steps+1,w,c
  1511  000B70  0A80               	xorlw	128
  1512  000B72  5829               	subwfb	??_main& (0+255),w,c
  1513  000B74  B0D8               	btfsc	status,0,c
  1514  000B76  D6E9               	goto	l1767
  1515  000B78                     l1845:
  1516  000B78  FFFF               	dw	65535	; assembler added errata NOP
  1517                           
  1518                           ;main.c: 213: }
  1519                           ;main.c: 214: stepcont = 0;
  1520  000B7A  0E00               	movlw	0
  1521  000B7C  6E58               	movwf	_stepcont+1,c
  1522  000B7E  0E00               	movlw	0
  1523  000B80  6E57               	movwf	_stepcont,c
  1524  000B82  D561               	goto	l1649
  1525  000B84                     __end_of_main:
  1526                           	opt stack 0
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           postinc0	equ	0xFEE
  1532                           wreg	equ	0xFE8
  1533                           indf1	equ	0xFE7
  1534                           postdec1	equ	0xFE5
  1535                           fsr1h	equ	0xFE2
  1536                           fsr1l	equ	0xFE1
  1537                           indf2	equ	0xFDF
  1538                           fsr2h	equ	0xFDA
  1539                           fsr2l	equ	0xFD9
  1540                           status	equ	0xFD8
  1541                           
  1542 ;; *************** function _stringtoint *****************
  1543 ;; Defined at:
  1544 ;;		line 247 in file "main.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  string          2   37[COMRAM] PTR unsigned char 
  1547 ;;		 -> digitos(3), 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  2   37[COMRAM] int 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1559 ;;      Params:         2       0       0       0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0       0       0
  1561 ;;      Temps:          1       0       0       0       0       0       0
  1562 ;;      Totals:         3       0       0       0       0       0       0
  1563 ;;Total ram usage:        3 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    3
  1566 ;; This function calls:
  1567 ;;		___wmul
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text1
  1574  000C60                     __ptext1:
  1575                           	opt stack 0
  1576  000C60                     _stringtoint:
  1577                           	opt stack 0
  1578  000C60  FFFF               	dw	65535	; assembler added errata NOP
  1579                           
  1580                           ;main.c: 248: n = 0;
  1581                           
  1582                           ;incstack = 0
  1583  000C62  0E00               	movlw	0
  1584  000C64  6E44               	movwf	_n+1,c
  1585  000C66  0E00               	movlw	0
  1586  000C68  6E43               	movwf	_n,c
  1587                           
  1588                           ;main.c: 249: o = 1;
  1589  000C6A  0E00               	movlw	0
  1590  000C6C  6E34               	movwf	_o+1,c
  1591  000C6E  0E01               	movlw	1
  1592  000C70  6E33               	movwf	_o,c
  1593                           
  1594                           ;main.c: 250: p = 2 ;
  1595  000C72  0E00               	movlw	0
  1596  000C74  6E32               	movwf	_p+1,c
  1597  000C76  0E02               	movlw	2
  1598  000C78  6E31               	movwf	_p,c
  1599                           
  1600                           ;main.c: 252: while (p >= 0) {
  1601  000C7A  D037               	goto	l1641
  1602  000C7C                     l1631:
  1603  000C7C  FFFF               	dw	65535	; assembler added errata NOP
  1604                           
  1605                           ;main.c: 253: help = string [p] - '0';
  1606  000C7E  5031               	movf	_p,w,c
  1607  000C80  2426               	addwf	stringtoint@string,w,c
  1608  000C82  6ED9               	movwf	fsr2l,c
  1609  000C84  5032               	movf	_p+1,w,c
  1610  000C86  2027               	addwfc	stringtoint@string+1,w,c
  1611  000C88  6EDA               	movwf	fsr2h,c
  1612  000C8A  50DF               	movf	indf2,w,c
  1613  000C8C  6E28               	movwf	??_stringtoint& (0+255),c
  1614  000C8E  0ED0               	movlw	208
  1615  000C90  2428               	addwf	??_stringtoint,w,c
  1616  000C92  6E2F               	movwf	_help,c
  1617  000C94  6A30               	clrf	_help+1,c
  1618  000C96  0EFF               	movlw	255
  1619  000C98  2230               	addwfc	_help+1,f,c
  1620                           
  1621                           ;main.c: 254: help = help*o;
  1622  000C9A  C02F  F020         	movff	_help,___wmul@multiplier
  1623  000C9E  C030  F021         	movff	_help+1,___wmul@multiplier+1
  1624  000CA2  C033  F022         	movff	_o,___wmul@multiplicand
  1625  000CA6  C034  F023         	movff	_o+1,___wmul@multiplicand+1
  1626  000CAA  EC3E  F007         	call	___wmul	;wreg free
  1627  000CAE  C020  F02F         	movff	?___wmul,_help
  1628  000CB2  C021  F030         	movff	?___wmul+1,_help+1
  1629                           
  1630                           ;main.c: 255: n = n + help;
  1631  000CB6  502F               	movf	_help,w,c
  1632  000CB8  2443               	addwf	_n,w,c
  1633  000CBA  6E43               	movwf	_n,c
  1634  000CBC  5030               	movf	_help+1,w,c
  1635  000CBE  2044               	addwfc	_n+1,w,c
  1636  000CC0  6E44               	movwf	_n+1,c
  1637                           
  1638                           ;main.c: 256: p = p - 1;
  1639  000CC2  0EFF               	movlw	255
  1640  000CC4  2431               	addwf	_p,w,c
  1641  000CC6  6E31               	movwf	_p,c
  1642  000CC8  0EFF               	movlw	255
  1643  000CCA  2032               	addwfc	_p+1,w,c
  1644  000CCC  6E32               	movwf	_p+1,c
  1645                           
  1646                           ;main.c: 257: o = o * 10;
  1647  000CCE  C033  F020         	movff	_o,___wmul@multiplier
  1648  000CD2  C034  F021         	movff	_o+1,___wmul@multiplier+1
  1649  000CD6  0E00               	movlw	0
  1650  000CD8  6E23               	movwf	___wmul@multiplicand+1,c
  1651  000CDA  0E0A               	movlw	10
  1652  000CDC  6E22               	movwf	___wmul@multiplicand,c
  1653  000CDE  EC3E  F007         	call	___wmul	;wreg free
  1654  000CE2  C020  F033         	movff	?___wmul,_o
  1655  000CE6  C021  F034         	movff	?___wmul+1,_o+1
  1656  000CEA                     l1641:
  1657  000CEA  FFFF               	dw	65535	; assembler added errata NOP
  1658  000CEC  AE32               	btfss	_p+1,7,c
  1659  000CEE  D7C6               	goto	l1631
  1660                           
  1661                           ;main.c: 258: }
  1662                           ;main.c: 259: return n ;
  1663  000CF0  C043  F026         	movff	_n,?_stringtoint
  1664  000CF4  C044  F027         	movff	_n+1,?_stringtoint+1
  1665  000CF8  0012               	return		;funcret
  1666  000CFA  FFFF               	dw	65535	; errata NOP
  1667  000CFC                     __end_of_stringtoint:
  1668                           	opt stack 0
  1669                           tblptru	equ	0xFF8
  1670                           tblptrh	equ	0xFF7
  1671                           tblptrl	equ	0xFF6
  1672                           tablat	equ	0xFF5
  1673                           postinc0	equ	0xFEE
  1674                           wreg	equ	0xFE8
  1675                           indf1	equ	0xFE7
  1676                           postdec1	equ	0xFE5
  1677                           fsr1h	equ	0xFE2
  1678                           fsr1l	equ	0xFE1
  1679                           indf2	equ	0xFDF
  1680                           fsr2h	equ	0xFDA
  1681                           fsr2l	equ	0xFD9
  1682                           status	equ	0xFD8
  1683                           
  1684 ;; *************** function ___wmul *****************
  1685 ;; Defined at:
  1686 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\Umul16.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;  multiplier      2   31[COMRAM] unsigned int 
  1689 ;;  multiplicand    2   33[COMRAM] unsigned int 
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  product         2   35[COMRAM] unsigned int 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  2   31[COMRAM] unsigned int 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0, prodl, prodh
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1701 ;;      Params:         4       0       0       0       0       0       0
  1702 ;;      Locals:         2       0       0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0       0       0
  1704 ;;      Totals:         6       0       0       0       0       0       0
  1705 ;;Total ram usage:        6 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    2
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_stringtoint
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text2
  1716  000E7C                     __ptext2:
  1717                           	opt stack 0
  1718  000E7C                     ___wmul:
  1719                           	opt stack 0
  1720  000E7C  FFFF               	dw	65535	; assembler added errata NOP
  1721                           
  1722                           ;incstack = 0
  1723  000E7E  5020               	movf	___wmul@multiplier,w,c
  1724  000E80  0222               	mulwf	___wmul@multiplicand,c
  1725  000E82  CFF3 F024          	movff	prodl,___wmul@product
  1726  000E86  CFF4 F025          	movff	prodh,___wmul@product+1
  1727  000E8A  5020               	movf	___wmul@multiplier,w,c
  1728  000E8C  0223               	mulwf	___wmul@multiplicand+1,c
  1729  000E8E  50F3               	movf	prodl,w,c
  1730  000E90  2625               	addwf	___wmul@product+1,f,c
  1731  000E92  5021               	movf	___wmul@multiplier+1,w,c
  1732  000E94  0222               	mulwf	___wmul@multiplicand,c
  1733  000E96  50F3               	movf	prodl,w,c
  1734  000E98  2625               	addwf	___wmul@product+1,f,c
  1735  000E9A  C024  F020         	movff	___wmul@product,?___wmul
  1736  000E9E  C025  F021         	movff	___wmul@product+1,?___wmul+1
  1737  000EA2  0012               	return		;funcret
  1738  000EA4  FFFF               	dw	65535	; errata NOP
  1739  000EA6                     __end_of___wmul:
  1740                           	opt stack 0
  1741                           tblptru	equ	0xFF8
  1742                           tblptrh	equ	0xFF7
  1743                           tblptrl	equ	0xFF6
  1744                           tablat	equ	0xFF5
  1745                           prodh	equ	0xFF4
  1746                           prodl	equ	0xFF3
  1747                           postinc0	equ	0xFEE
  1748                           wreg	equ	0xFE8
  1749                           indf1	equ	0xFE7
  1750                           postdec1	equ	0xFE5
  1751                           fsr1h	equ	0xFE2
  1752                           fsr1l	equ	0xFE1
  1753                           indf2	equ	0xFDF
  1754                           fsr2h	equ	0xFDA
  1755                           fsr2l	equ	0xFD9
  1756                           status	equ	0xFD8
  1757                           
  1758 ;; *************** function _strcmp *****************
  1759 ;; Defined at:
  1760 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\strcmp.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  s1              2   31[COMRAM] PTR const unsigned char 
  1763 ;;		 -> tam(20), 
  1764 ;;  s2              2   33[COMRAM] PTR const unsigned char 
  1765 ;;		 -> moverx(7), 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  r               1   36[COMRAM] char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  2   31[COMRAM] int 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1777 ;;      Params:         4       0       0       0       0       0       0
  1778 ;;      Locals:         1       0       0       0       0       0       0
  1779 ;;      Temps:          1       0       0       0       0       0       0
  1780 ;;      Totals:         6       0       0       0       0       0       0
  1781 ;;Total ram usage:        6 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    2
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_main
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text3
  1792  000CFC                     __ptext3:
  1793                           	opt stack 0
  1794  000CFC                     _strcmp:
  1795                           	opt stack 0
  1796  000CFC  FFFF               	dw	65535	; assembler added errata NOP
  1797                           
  1798                           ;incstack = 0
  1799  000CFE  D005               	goto	l1621
  1800  000D00                     l1619:
  1801  000D00  FFFF               	dw	65535	; assembler added errata NOP
  1802  000D02  4A20               	infsnz	strcmp@s1,f,c
  1803  000D04  2A21               	incf	strcmp@s1+1,f,c
  1804  000D06  4A22               	infsnz	strcmp@s2,f,c
  1805  000D08  2A23               	incf	strcmp@s2+1,f,c
  1806  000D0A                     l1621:
  1807  000D0A  FFFF               	dw	65535	; assembler added errata NOP
  1808  000D0C  C020  FFD9         	movff	strcmp@s1,fsr2l
  1809  000D10  C021  FFDA         	movff	strcmp@s1+1,fsr2h
  1810  000D14  50DF               	movf	indf2,w,c
  1811  000D16  6E24               	movwf	??_strcmp& (0+255),c
  1812  000D18  C022  FFF6         	movff	strcmp@s2,tblptrl
  1813  000D1C  C023  FFF7         	movff	strcmp@s2+1,tblptrh
  1814  000D20                     	if	0	;tblptru may be non-zero
  1815  000D20                     	endif
  1816  000D20                     	if	0	;tblptru may be non-zero
  1817  000D20                     	endif
  1818  000D20  0008               	tblrd		*
  1819  000D22  FFFF               	dw	65535	; errata NOP
  1820  000D24  50F5               	movf	tablat,w,c
  1821  000D26  0800               	sublw	0
  1822  000D28  2424               	addwf	??_strcmp,w,c
  1823  000D2A  6E25               	movwf	strcmp@r,c
  1824  000D2C  5025               	movf	strcmp@r,w,c
  1825  000D2E  A4D8               	btfss	status,2,c
  1826  000D30  D007               	goto	l1625
  1827  000D32  C020  FFD9         	movff	strcmp@s1,fsr2l
  1828  000D36  C021  FFDA         	movff	strcmp@s1+1,fsr2h
  1829  000D3A  50DF               	movf	indf2,w,c
  1830  000D3C  A4D8               	btfss	status,2,c
  1831  000D3E  D7E0               	goto	l1619
  1832  000D40                     l1625:
  1833  000D40  FFFF               	dw	65535	; assembler added errata NOP
  1834  000D42  5025               	movf	strcmp@r,w,c
  1835  000D44  6E20               	movwf	?_strcmp,c
  1836  000D46  6A21               	clrf	?_strcmp+1,c
  1837  000D48  BE20               	btfsc	?_strcmp,7,c
  1838  000D4A  0621               	decf	?_strcmp+1,f,c
  1839  000D4C  0012               	return		;funcret
  1840  000D4E  FFFF               	dw	65535	; errata NOP
  1841  000D50                     __end_of_strcmp:
  1842                           	opt stack 0
  1843                           tblptru	equ	0xFF8
  1844                           tblptrh	equ	0xFF7
  1845                           tblptrl	equ	0xFF6
  1846                           tablat	equ	0xFF5
  1847                           prodh	equ	0xFF4
  1848                           prodl	equ	0xFF3
  1849                           postinc0	equ	0xFEE
  1850                           wreg	equ	0xFE8
  1851                           indf1	equ	0xFE7
  1852                           postdec1	equ	0xFE5
  1853                           fsr1h	equ	0xFE2
  1854                           fsr1l	equ	0xFE1
  1855                           indf2	equ	0xFDF
  1856                           fsr2h	equ	0xFDA
  1857                           fsr2l	equ	0xFD9
  1858                           status	equ	0xFD8
  1859                           
  1860 ;; *************** function _ledestado *****************
  1861 ;; Defined at:
  1862 ;;		line 238 in file "main.c"
  1863 ;; Parameters:    Size  Location     Type
  1864 ;;  tiempoled       2   31[COMRAM] int 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;		None
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1876 ;;      Params:         2       0       0       0       0       0       0
  1877 ;;      Locals:         0       0       0       0       0       0       0
  1878 ;;      Temps:          1       0       0       0       0       0       0
  1879 ;;      Totals:         3       0       0       0       0       0       0
  1880 ;;Total ram usage:        3 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    2
  1883 ;; This function calls:
  1884 ;;		Nothing
  1885 ;; This function is called by:
  1886 ;;		_main
  1887 ;; This function uses a non-reentrant model
  1888 ;;
  1889                           
  1890                           	psect	text4
  1891  000D50                     __ptext4:
  1892                           	opt stack 0
  1893  000D50                     _ledestado:
  1894                           	opt stack 0
  1895  000D50  FFFF               	dw	65535	; assembler added errata NOP
  1896                           
  1897                           ;main.c: 239: cont_led++;
  1898                           
  1899                           ;incstack = 0
  1900  000D52  4A39               	infsnz	_cont_led,f,c
  1901  000D54  2A3A               	incf	_cont_led+1,f,c
  1902                           
  1903                           ;main.c: 240: if (cont_led >= tiempoled) {
  1904  000D56  5020               	movf	ledestado@tiempoled,w,c
  1905  000D58  5C39               	subwf	_cont_led,w,c
  1906  000D5A  503A               	movf	_cont_led+1,w,c
  1907  000D5C  0A80               	xorlw	128
  1908  000D5E  6E22               	movwf	??_ledestado& (0+255),c
  1909  000D60  5021               	movf	ledestado@tiempoled+1,w,c
  1910  000D62  0A80               	xorlw	128
  1911  000D64  5822               	subwfb	??_ledestado& (0+255),w,c
  1912  000D66  A0D8               	btfss	status,0,c
  1913  000D68  D014               	goto	l1615
  1914                           
  1915                           ;main.c: 241: LATBbits.LB7 = ~PORTBbits.RB7;
  1916  000D6A  AE81               	btfss	3969,7,c	;volatile
  1917  000D6C  D002               	goto	u880
  1918  000D6E  0E01               	movlw	1
  1919  000D70  D002               	goto	u886
  1920  000D72                     u880:
  1921  000D72  FFFF               	dw	65535	; assembler added errata NOP
  1922  000D74  0E00               	movlw	0
  1923  000D76                     u886:
  1924  000D76  FFFF               	dw	65535	; assembler added errata NOP
  1925  000D78  0AFF               	xorlw	255
  1926  000D7A  6E22               	movwf	??_ledestado& (0+255),c
  1927  000D7C  3222               	rrcf	??_ledestado,f,c
  1928  000D7E  3222               	rrcf	??_ledestado,f,c
  1929  000D80  508A               	movf	3978,w,c	;volatile
  1930  000D82  1822               	xorwf	??_ledestado,w,c
  1931  000D84  0B7F               	andlw	-129
  1932  000D86  1822               	xorwf	??_ledestado,w,c
  1933  000D88  6E8A               	movwf	3978,c	;volatile
  1934                           
  1935                           ;main.c: 242: cont_led = 0;
  1936  000D8A  0E00               	movlw	0
  1937  000D8C  6E3A               	movwf	_cont_led+1,c
  1938  000D8E  0E00               	movlw	0
  1939  000D90  6E39               	movwf	_cont_led,c
  1940  000D92                     l1615:
  1941  000D92  FFFF               	dw	65535	; assembler added errata NOP
  1942                           
  1943                           ;main.c: 243: }
  1944                           ;main.c: 244: led = 0;
  1945  000D94  0E00               	movlw	0
  1946  000D96  6E46               	movwf	_led+1,c
  1947  000D98  0E00               	movlw	0
  1948  000D9A  6E45               	movwf	_led,c
  1949  000D9C  0012               	return		;funcret
  1950  000D9E  FFFF               	dw	65535	; errata NOP
  1951  000DA0                     __end_of_ledestado:
  1952                           	opt stack 0
  1953                           tblptru	equ	0xFF8
  1954                           tblptrh	equ	0xFF7
  1955                           tblptrl	equ	0xFF6
  1956                           tablat	equ	0xFF5
  1957                           prodh	equ	0xFF4
  1958                           prodl	equ	0xFF3
  1959                           postinc0	equ	0xFEE
  1960                           wreg	equ	0xFE8
  1961                           indf1	equ	0xFE7
  1962                           postdec1	equ	0xFE5
  1963                           fsr1h	equ	0xFE2
  1964                           fsr1l	equ	0xFE1
  1965                           indf2	equ	0xFDF
  1966                           fsr2h	equ	0xFDA
  1967                           fsr2l	equ	0xFD9
  1968                           status	equ	0xFD8
  1969                           
  1970 ;; *************** function _enviarTrama *****************
  1971 ;; Defined at:
  1972 ;;		line 221 in file "main.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  datos           2   31[COMRAM] PTR unsigned char 
  1975 ;;		 -> saludo(39), 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1987 ;;      Params:         2       0       0       0       0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0
  1990 ;;      Totals:         2       0       0       0       0       0       0
  1991 ;;Total ram usage:        2 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:    2
  1994 ;; This function calls:
  1995 ;;		Nothing
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           	psect	text5
  2002  000DA0                     __ptext5:
  2003                           	opt stack 0
  2004  000DA0                     _enviarTrama:
  2005                           	opt stack 0
  2006  000DA0  FFFF               	dw	65535	; assembler added errata NOP
  2007                           
  2008                           ;main.c: 225: while (*datos != 0) {
  2009                           
  2010                           ;incstack = 0
  2011  000DA2  D00E               	goto	l1601
  2012  000DA4                     l1597:
  2013  000DA4  FFFF               	dw	65535	; assembler added errata NOP
  2014                           
  2015                           ;main.c: 226: TXREG = *datos;
  2016  000DA6  C020  FFF6         	movff	enviarTrama@datos,tblptrl
  2017  000DAA  C021  FFF7         	movff	enviarTrama@datos+1,tblptrh
  2018  000DAE                     	if	0	;tblptru may be non-zero
  2019  000DAE                     	endif
  2020  000DAE                     	if	0	;tblptru may be non-zero
  2021  000DAE                     	endif
  2022  000DAE  0008               	tblrd		*
  2023  000DB0  FFFF               	dw	65535	; errata NOP
  2024  000DB2  CFF5 FFAD          	movff	tablat,4013	;volatile
  2025  000DB6                     l207:
  2026  000DB6  FFFF               	dw	65535	; assembler added errata NOP
  2027  000DB8  A2AC               	btfss	4012,1,c	;volatile
  2028  000DBA  D7FD               	goto	l207
  2029                           
  2030                           ;main.c: 228: *datos++;
  2031  000DBC  4A20               	infsnz	enviarTrama@datos,f,c
  2032  000DBE  2A21               	incf	enviarTrama@datos+1,f,c
  2033  000DC0                     l1601:
  2034  000DC0  FFFF               	dw	65535	; assembler added errata NOP
  2035  000DC2  C020  FFF6         	movff	enviarTrama@datos,tblptrl
  2036  000DC6  C021  FFF7         	movff	enviarTrama@datos+1,tblptrh
  2037  000DCA                     	if	0	;tblptru may be non-zero
  2038  000DCA                     	endif
  2039  000DCA                     	if	0	;tblptru may be non-zero
  2040  000DCA                     	endif
  2041  000DCA  0008               	tblrd		*
  2042  000DCC  FFFF               	dw	65535	; errata NOP
  2043  000DCE  50F5               	movf	tablat,w,c
  2044  000DD0  0900               	iorlw	0
  2045  000DD2  A4D8               	btfss	status,2,c
  2046  000DD4  D7E7               	goto	l1597
  2047                           
  2048                           ;main.c: 229: }
  2049                           ;main.c: 231: TXREG = 0x0A;
  2050  000DD6  0E0A               	movlw	10
  2051  000DD8  6EAD               	movwf	4013,c	;volatile
  2052  000DDA                     l211:
  2053  000DDA  FFFF               	dw	65535	; assembler added errata NOP
  2054  000DDC  A2AC               	btfss	4012,1,c	;volatile
  2055  000DDE  D7FD               	goto	l211
  2056                           
  2057                           ;main.c: 233: TXREG = 0x0D;
  2058  000DE0  0E0D               	movlw	13
  2059  000DE2  6EAD               	movwf	4013,c	;volatile
  2060  000DE4                     l214:
  2061  000DE4  FFFF               	dw	65535	; assembler added errata NOP
  2062  000DE6  B2AC               	btfsc	4012,1,c	;volatile
  2063  000DE8  0012               	return		;funcret
  2064  000DEA  FFFF               	dw	65535	; assembler added errata NOP
  2065  000DEC  D7FB               	goto	l214
  2066  000DEE  FFFF               	dw	65535	; errata NOP
  2067  000DF0                     __end_of_enviarTrama:
  2068                           	opt stack 0
  2069                           tblptru	equ	0xFF8
  2070                           tblptrh	equ	0xFF7
  2071                           tblptrl	equ	0xFF6
  2072                           tablat	equ	0xFF5
  2073                           prodh	equ	0xFF4
  2074                           prodl	equ	0xFF3
  2075                           postinc0	equ	0xFEE
  2076                           wreg	equ	0xFE8
  2077                           indf1	equ	0xFE7
  2078                           postdec1	equ	0xFE5
  2079                           fsr1h	equ	0xFE2
  2080                           fsr1l	equ	0xFE1
  2081                           indf2	equ	0xFDF
  2082                           fsr2h	equ	0xFDA
  2083                           fsr2l	equ	0xFD9
  2084                           status	equ	0xFD8
  2085                           
  2086 ;; *************** function _InitApp *****************
  2087 ;; Defined at:
  2088 ;;		line 28 in file "user.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2102 ;;      Params:         0       0       0       0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0
  2105 ;;      Totals:         0       0       0       0       0       0       0
  2106 ;;Total ram usage:        0 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    2
  2109 ;; This function calls:
  2110 ;;		Nothing
  2111 ;; This function is called by:
  2112 ;;		_main
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text6
  2117  000E36                     __ptext6:
  2118                           	opt stack 0
  2119  000E36                     _InitApp:
  2120                           	opt stack 0
  2121  000E36  FFFF               	dw	65535	; assembler added errata NOP
  2122                           
  2123                           ;user.c: 30: PORTA = 0 ;
  2124                           
  2125                           ;incstack = 0
  2126  000E38  0E00               	movlw	0
  2127  000E3A  6E80               	movwf	3968,c	;volatile
  2128                           
  2129                           ;user.c: 31: PORTB = 0 ;
  2130  000E3C  0E00               	movlw	0
  2131  000E3E  6E81               	movwf	3969,c	;volatile
  2132                           
  2133                           ;user.c: 32: PORTC = 0 ;
  2134  000E40  0E00               	movlw	0
  2135  000E42  6E82               	movwf	3970,c	;volatile
  2136                           
  2137                           ;user.c: 34: TRISA = 0 ;
  2138  000E44  0E00               	movlw	0
  2139  000E46  6E92               	movwf	3986,c	;volatile
  2140                           
  2141                           ;user.c: 36: TRISBbits.RB7 = 0;
  2142  000E48  9E93               	bcf	3987,7,c	;volatile
  2143                           
  2144                           ;user.c: 37: T1CONbits.RD16 = 1;
  2145  000E4A  8ECD               	bsf	4045,7,c	;volatile
  2146                           
  2147                           ;user.c: 38: T1CONbits.T1CKPS = 0b11;
  2148  000E4C  0E30               	movlw	48
  2149  000E4E  12CD               	iorwf	4045,f,c	;volatile
  2150                           
  2151                           ;user.c: 39: T1CONbits.TMR1CS = 0;
  2152  000E50  92CD               	bcf	4045,1,c	;volatile
  2153                           
  2154                           ;user.c: 40: T1CONbits.T1SYNC = 1;
  2155  000E52  84CD               	bsf	4045,2,c	;volatile
  2156                           
  2157                           ;user.c: 41: T1CONbits.TMR1ON = 1;
  2158  000E54  80CD               	bsf	4045,0,c	;volatile
  2159                           
  2160                           ;user.c: 42: PIE1bits.TMR1IE = 1;
  2161  000E56  809D               	bsf	3997,0,c	;volatile
  2162                           
  2163                           ;user.c: 43: IPR1bits.TMR1IP = 1;
  2164  000E58  809F               	bsf	3999,0,c	;volatile
  2165                           
  2166                           ;user.c: 44: TMR1 = 3036;
  2167  000E5A  0E0B               	movlw	11
  2168  000E5C  6ECF               	movwf	4047,c	;volatile
  2169  000E5E  0EDC               	movlw	220
  2170  000E60  6ECE               	movwf	4046,c	;volatile
  2171                           
  2172                           ;user.c: 48: TRISCbits.RC7 = 1;
  2173  000E62  8E94               	bsf	3988,7,c	;volatile
  2174                           
  2175                           ;user.c: 49: TRISCbits.RC6 = 0;
  2176  000E64  9C94               	bcf	3988,6,c	;volatile
  2177                           
  2178                           ;user.c: 50: SPBRG = 10;
  2179  000E66  0E0A               	movlw	10
  2180  000E68  6EAF               	movwf	4015,c	;volatile
  2181                           
  2182                           ;user.c: 51: RCSTAbits.SPEN = 1;
  2183  000E6A  8EAB               	bsf	4011,7,c	;volatile
  2184                           
  2185                           ;user.c: 52: TXSTAbits.SYNC = 0;
  2186  000E6C  98AC               	bcf	4012,4,c	;volatile
  2187                           
  2188                           ;user.c: 53: TXSTAbits.BRGH = 1;
  2189  000E6E  84AC               	bsf	4012,2,c	;volatile
  2190                           
  2191                           ;user.c: 54: TXSTAbits.TXEN = 1;
  2192  000E70  8AAC               	bsf	4012,5,c	;volatile
  2193                           
  2194                           ;user.c: 55: RCSTAbits.CREN = 1;
  2195  000E72  88AB               	bsf	4011,4,c	;volatile
  2196                           
  2197                           ;user.c: 56: PIE1bits.RCIE = 1;
  2198  000E74  8A9D               	bsf	3997,5,c	;volatile
  2199                           
  2200                           ;user.c: 57: IPR1bits.RCIP = 1;
  2201  000E76  8A9F               	bsf	3999,5,c	;volatile
  2202  000E78  0012               	return		;funcret
  2203  000E7A  FFFF               	dw	65535	; errata NOP
  2204  000E7C                     __end_of_InitApp:
  2205                           	opt stack 0
  2206                           tblptru	equ	0xFF8
  2207                           tblptrh	equ	0xFF7
  2208                           tblptrl	equ	0xFF6
  2209                           tablat	equ	0xFF5
  2210                           prodh	equ	0xFF4
  2211                           prodl	equ	0xFF3
  2212                           postinc0	equ	0xFEE
  2213                           wreg	equ	0xFE8
  2214                           indf1	equ	0xFE7
  2215                           postdec1	equ	0xFE5
  2216                           fsr1h	equ	0xFE2
  2217                           fsr1l	equ	0xFE1
  2218                           indf2	equ	0xFDF
  2219                           fsr2h	equ	0xFDA
  2220                           fsr2l	equ	0xFD9
  2221                           status	equ	0xFD8
  2222                           
  2223 ;; *************** function _ConfigureOscillator *****************
  2224 ;; Defined at:
  2225 ;;		line 24 in file "system.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;		None
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  1    wreg      void 
  2232 ;; Registers used:
  2233 ;;		None
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2239 ;;      Params:         0       0       0       0       0       0       0
  2240 ;;      Locals:         0       0       0       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0       0
  2242 ;;      Totals:         0       0       0       0       0       0       0
  2243 ;;Total ram usage:        0 bytes
  2244 ;; Hardware stack levels used:    1
  2245 ;; Hardware stack levels required when called:    2
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_main
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text7
  2254  000EB0                     __ptext7:
  2255                           	opt stack 0
  2256  000EB0                     _ConfigureOscillator:
  2257                           	opt stack 0
  2258  000EB0  FFFF               	dw	65535	; assembler added errata NOP
  2259                           
  2260                           ;incstack = 0
  2261  000EB2  0012               	return		;funcret
  2262  000EB4  FFFF               	dw	65535	; errata NOP
  2263  000EB6                     __end_of_ConfigureOscillator:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           postinc0	equ	0xFEE
  2272                           wreg	equ	0xFE8
  2273                           indf1	equ	0xFE7
  2274                           postdec1	equ	0xFE5
  2275                           fsr1h	equ	0xFE2
  2276                           fsr1l	equ	0xFE1
  2277                           indf2	equ	0xFDF
  2278                           fsr2h	equ	0xFDA
  2279                           fsr2l	equ	0xFD9
  2280                           status	equ	0xFD8
  2281                           
  2282 ;; *************** function _low_isr *****************
  2283 ;; Defined at:
  2284 ;;		line 80 in file "interrupts.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      void 
  2291 ;; Registers used:
  2292 ;;		None
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2298 ;;      Params:         0       0       0       0       0       0       0
  2299 ;;      Locals:         0       0       0       0       0       0       0
  2300 ;;      Temps:         17       0       0       0       0       0       0
  2301 ;;      Totals:        17       0       0       0       0       0       0
  2302 ;;Total ram usage:       17 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    1
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		Interrupt level 1
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	intcodelo
  2313  000018                     __pintcodelo:
  2314                           	opt stack 0
  2315  000018                     _low_isr:
  2316                           	opt stack 0
  2317  000018  FFFF               	dw	65535	; assembler added errata NOP
  2318                           
  2319                           ;incstack = 0
  2320  00001A  8059               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2321  00001C  CFD8 F00F          	movff	status,??_low_isr
  2322  000020  CFE8 F010          	movff	wreg,??_low_isr+1
  2323  000024  CFE0 F011          	movff	bsr,??_low_isr+2
  2324  000028  CFFA F012          	movff	pclath,??_low_isr+3
  2325  00002C  CFFB F013          	movff	pclatu,??_low_isr+4
  2326  000030  CFE9 F014          	movff	fsr0l,??_low_isr+5
  2327  000034  CFEA F015          	movff	fsr0h,??_low_isr+6
  2328  000038  CFE1 F016          	movff	fsr1l,??_low_isr+7
  2329  00003C  CFE2 F017          	movff	fsr1h,??_low_isr+8
  2330  000040  CFD9 F018          	movff	fsr2l,??_low_isr+9
  2331  000044  CFDA F019          	movff	fsr2h,??_low_isr+10
  2332  000048  CFF3 F01A          	movff	prodl,??_low_isr+11
  2333  00004C  CFF4 F01B          	movff	prodh,??_low_isr+12
  2334  000050  CFF6 F01C          	movff	tblptrl,??_low_isr+13
  2335  000054  CFF7 F01D          	movff	tblptrh,??_low_isr+14
  2336  000058  CFF8 F01E          	movff	tblptru,??_low_isr+15
  2337  00005C  CFF5 F01F          	movff	tablat,??_low_isr+16
  2338  000060  C01F  FFF5         	movff	??_low_isr+16,tablat
  2339  000064  C01E  FFF8         	movff	??_low_isr+15,tblptru
  2340  000068  C01D  FFF7         	movff	??_low_isr+14,tblptrh
  2341  00006C  C01C  FFF6         	movff	??_low_isr+13,tblptrl
  2342  000070  C01B  FFF4         	movff	??_low_isr+12,prodh
  2343  000074  C01A  FFF3         	movff	??_low_isr+11,prodl
  2344  000078  C019  FFDA         	movff	??_low_isr+10,fsr2h
  2345  00007C  C018  FFD9         	movff	??_low_isr+9,fsr2l
  2346  000080  C017  FFE2         	movff	??_low_isr+8,fsr1h
  2347  000084  C016  FFE1         	movff	??_low_isr+7,fsr1l
  2348  000088  C015  FFEA         	movff	??_low_isr+6,fsr0h
  2349  00008C  C014  FFE9         	movff	??_low_isr+5,fsr0l
  2350  000090  C013  FFFB         	movff	??_low_isr+4,pclatu
  2351  000094  C012  FFFA         	movff	??_low_isr+3,pclath
  2352  000098  C011  FFE0         	movff	??_low_isr+2,bsr
  2353  00009C  C010  FFE8         	movff	??_low_isr+1,wreg
  2354  0000A0  C00F  FFD8         	movff	??_low_isr,status
  2355  0000A4  9059               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2356  0000A6  0010               	retfie	
  2357  0000A8  FFFF               	dw	65535	; errata NOP
  2358  0000AA                     __end_of_low_isr:
  2359                           	opt stack 0
  2360                           pclatu	equ	0xFFB
  2361                           pclath	equ	0xFFA
  2362                           tblptru	equ	0xFF8
  2363                           tblptrh	equ	0xFF7
  2364                           tblptrl	equ	0xFF6
  2365                           tablat	equ	0xFF5
  2366                           prodh	equ	0xFF4
  2367                           prodl	equ	0xFF3
  2368                           postinc0	equ	0xFEE
  2369                           fsr0h	equ	0xFEA
  2370                           fsr0l	equ	0xFE9
  2371                           wreg	equ	0xFE8
  2372                           indf1	equ	0xFE7
  2373                           postdec1	equ	0xFE5
  2374                           fsr1h	equ	0xFE2
  2375                           fsr1l	equ	0xFE1
  2376                           bsr	equ	0xFE0
  2377                           indf2	equ	0xFDF
  2378                           fsr2h	equ	0xFDA
  2379                           fsr2l	equ	0xFD9
  2380                           status	equ	0xFD8
  2381                           
  2382 ;; *************** function _high_isr *****************
  2383 ;; Defined at:
  2384 ;;		line 37 in file "interrupts.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2398 ;;      Params:         0       0       0       0       0       0       0
  2399 ;;      Locals:         0       0       0       0       0       0       0
  2400 ;;      Temps:         14       0       0       0       0       0       0
  2401 ;;      Totals:        14       0       0       0       0       0       0
  2402 ;;Total ram usage:       14 bytes
  2403 ;; Hardware stack levels used:    1
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		Interrupt level 2
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	intcode
  2412  000008                     __pintcode:
  2413                           	opt stack 0
  2414  000008                     _high_isr:
  2415                           	opt stack 0
  2416  000008  FFFF               	dw	65535	; assembler added errata NOP
  2417                           
  2418                           ;incstack = 0
  2419  00000A  8259               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2420  00000C  EFC2  F005         	goto	int_func
  2421                           pclatu	equ	0xFFB
  2422                           pclath	equ	0xFFA
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           prodh	equ	0xFF4
  2428                           prodl	equ	0xFF3
  2429                           postinc0	equ	0xFEE
  2430                           fsr0h	equ	0xFEA
  2431                           fsr0l	equ	0xFE9
  2432                           wreg	equ	0xFE8
  2433                           indf1	equ	0xFE7
  2434                           postdec1	equ	0xFE5
  2435                           fsr1h	equ	0xFE2
  2436                           fsr1l	equ	0xFE1
  2437                           bsr	equ	0xFE0
  2438                           indf2	equ	0xFDF
  2439                           fsr2h	equ	0xFDA
  2440                           fsr2l	equ	0xFD9
  2441                           status	equ	0xFD8
  2442                           
  2443                           	psect	intcode_body
  2444  000B84                     __pintcode_body:
  2445                           	opt stack 27
  2446  000B84                     int_func:
  2447                           	opt stack 27
  2448  000B84  FFFF               	dw	65535	; errata NOP
  2449  000B86  CFFA F001          	movff	pclath,??_high_isr
  2450  000B8A  CFFB F002          	movff	pclatu,??_high_isr+1
  2451  000B8E  CFE9 F003          	movff	fsr0l,??_high_isr+2
  2452  000B92  CFEA F004          	movff	fsr0h,??_high_isr+3
  2453  000B96  CFE1 F005          	movff	fsr1l,??_high_isr+4
  2454  000B9A  CFE2 F006          	movff	fsr1h,??_high_isr+5
  2455  000B9E  CFD9 F007          	movff	fsr2l,??_high_isr+6
  2456  000BA2  CFDA F008          	movff	fsr2h,??_high_isr+7
  2457  000BA6  CFF3 F009          	movff	prodl,??_high_isr+8
  2458  000BAA  CFF4 F00A          	movff	prodh,??_high_isr+9
  2459  000BAE  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  2460  000BB2  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  2461  000BB6  CFF8 F00D          	movff	tblptru,??_high_isr+12
  2462  000BBA  CFF5 F00E          	movff	tablat,??_high_isr+13
  2463                           
  2464                           ;interrupts.c: 48: if (PIR1bits.RCIF == 1) {
  2465  000BBE  AA9E               	btfss	3998,5,c	;volatile
  2466  000BC0  D022               	goto	i2l1329
  2467                           
  2468                           ;interrupts.c: 49: dato = RCREG;
  2469  000BC2  CFAE F04B          	movff	4014,_dato	;volatile
  2470                           
  2471                           ;interrupts.c: 50: if (dato != '\r') {
  2472  000BC6  0E0D               	movlw	13
  2473  000BC8  184B               	xorwf	_dato,w,c
  2474  000BCA  B4D8               	btfsc	status,2,c
  2475  000BCC  D00D               	goto	i2l1323
  2476                           
  2477                           ;interrupts.c: 51: comando[n] = dato;
  2478  000BCE  0E80               	movlw	low _comando
  2479  000BD0  2443               	addwf	_n,w,c
  2480  000BD2  6ED9               	movwf	fsr2l,c
  2481  000BD4  0E00               	movlw	high _comando
  2482  000BD6  2044               	addwfc	_n+1,w,c
  2483  000BD8  6EDA               	movwf	fsr2h,c
  2484  000BDA  C04B  FFDF         	movff	_dato,indf2
  2485                           
  2486                           ;interrupts.c: 52: n++;
  2487  000BDE  4A43               	infsnz	_n,f,c
  2488  000BE0  2A44               	incf	_n+1,f,c
  2489                           
  2490                           ;interrupts.c: 53: tama++;
  2491  000BE2  4A49               	infsnz	_tama,f,c
  2492  000BE4  2A4A               	incf	_tama+1,f,c
  2493                           
  2494                           ;interrupts.c: 54: } else if (dato == '\r') {
  2495  000BE6  D00D               	goto	i2l1327
  2496  000BE8                     i2l1323:
  2497  000BE8  FFFF               	dw	65535	; assembler added errata NOP
  2498  000BEA  0E0D               	movlw	13
  2499  000BEC  184B               	xorwf	_dato,w,c
  2500  000BEE  A4D8               	btfss	status,2,c
  2501  000BF0  D008               	goto	i2l1327
  2502                           
  2503                           ;interrupts.c: 55: n = 0;
  2504  000BF2  0E00               	movlw	0
  2505  000BF4  6E44               	movwf	_n+1,c
  2506  000BF6  0E00               	movlw	0
  2507  000BF8  6E43               	movwf	_n,c
  2508                           
  2509                           ;interrupts.c: 56: enter = 1;
  2510  000BFA  0E00               	movlw	0
  2511  000BFC  6E48               	movwf	_enter+1,c
  2512  000BFE  0E01               	movlw	1
  2513  000C00  6E47               	movwf	_enter,c
  2514  000C02                     i2l1327:
  2515  000C02  FFFF               	dw	65535	; assembler added errata NOP
  2516                           
  2517                           ;interrupts.c: 57: }
  2518                           ;interrupts.c: 60: PIR1bits.RCIF = 0;
  2519  000C04  9A9E               	bcf	3998,5,c	;volatile
  2520  000C06                     i2l1329:
  2521  000C06  FFFF               	dw	65535	; assembler added errata NOP
  2522                           
  2523                           ;interrupts.c: 61: }
  2524                           ;interrupts.c: 63: if (PIR1bits.TMR1IF == 1) {
  2525  000C08  A09E               	btfss	3998,0,c	;volatile
  2526  000C0A  D00A               	goto	i2l38
  2527                           
  2528                           ;interrupts.c: 64: PIR1bits.TMR1IF = 0;
  2529  000C0C  909E               	bcf	3998,0,c	;volatile
  2530                           
  2531                           ;interrupts.c: 65: __nop();
  2532  000C0E  F000               	nop	
  2533                           
  2534                           ;interrupts.c: 66: led = 1;
  2535  000C10  0E00               	movlw	0
  2536  000C12  6E46               	movwf	_led+1,c
  2537  000C14  0E01               	movlw	1
  2538  000C16  6E45               	movwf	_led,c
  2539                           
  2540                           ;interrupts.c: 67: TMR1 = 3036;
  2541  000C18  0E0B               	movlw	11
  2542  000C1A  6ECF               	movwf	4047,c	;volatile
  2543  000C1C  0EDC               	movlw	220
  2544  000C1E  6ECE               	movwf	4046,c	;volatile
  2545  000C20                     i2l38:
  2546  000C20  FFFF               	dw	65535	; assembler added errata NOP
  2547  000C22  C00E  FFF5         	movff	??_high_isr+13,tablat
  2548  000C26  C00D  FFF8         	movff	??_high_isr+12,tblptru
  2549  000C2A  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  2550  000C2E  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  2551  000C32  C00A  FFF4         	movff	??_high_isr+9,prodh
  2552  000C36  C009  FFF3         	movff	??_high_isr+8,prodl
  2553  000C3A  C008  FFDA         	movff	??_high_isr+7,fsr2h
  2554  000C3E  C007  FFD9         	movff	??_high_isr+6,fsr2l
  2555  000C42  C006  FFE2         	movff	??_high_isr+5,fsr1h
  2556  000C46  C005  FFE1         	movff	??_high_isr+4,fsr1l
  2557  000C4A  C004  FFEA         	movff	??_high_isr+3,fsr0h
  2558  000C4E  C003  FFE9         	movff	??_high_isr+2,fsr0l
  2559  000C52  C002  FFFB         	movff	??_high_isr+1,pclatu
  2560  000C56  C001  FFFA         	movff	??_high_isr,pclath
  2561  000C5A  9259               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2562  000C5C  0011               	retfie		f
  2563  000C5E  FFFF               	dw	65535	; errata NOP
  2564  000C60                     __end_of_high_isr:
  2565                           	opt stack 0
  2566                           pclatu	equ	0xFFB
  2567                           pclath	equ	0xFFA
  2568                           tblptru	equ	0xFF8
  2569                           tblptrh	equ	0xFF7
  2570                           tblptrl	equ	0xFF6
  2571                           tablat	equ	0xFF5
  2572                           prodh	equ	0xFF4
  2573                           prodl	equ	0xFF3
  2574                           postinc0	equ	0xFEE
  2575                           fsr0h	equ	0xFEA
  2576                           fsr0l	equ	0xFE9
  2577                           wreg	equ	0xFE8
  2578                           indf1	equ	0xFE7
  2579                           postdec1	equ	0xFE5
  2580                           fsr1h	equ	0xFE2
  2581                           fsr1l	equ	0xFE1
  2582                           bsr	equ	0xFE0
  2583                           indf2	equ	0xFDF
  2584                           fsr2h	equ	0xFDA
  2585                           fsr2l	equ	0xFD9
  2586                           status	equ	0xFD8
  2587                           pclatu	equ	0xFFB
  2588                           pclath	equ	0xFFA
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           prodh	equ	0xFF4
  2594                           prodl	equ	0xFF3
  2595                           postinc0	equ	0xFEE
  2596                           fsr0h	equ	0xFEA
  2597                           fsr0l	equ	0xFE9
  2598                           wreg	equ	0xFE8
  2599                           indf1	equ	0xFE7
  2600                           postdec1	equ	0xFE5
  2601                           fsr1h	equ	0xFE2
  2602                           fsr1l	equ	0xFE1
  2603                           bsr	equ	0xFE0
  2604                           indf2	equ	0xFDF
  2605                           fsr2h	equ	0xFDA
  2606                           fsr2l	equ	0xFD9
  2607                           status	equ	0xFD8
  2608                           
  2609                           	psect	rparam
  2610  0000                     pclatu	equ	0xFFB
  2611                           pclath	equ	0xFFA
  2612                           tblptru	equ	0xFF8
  2613                           tblptrh	equ	0xFF7
  2614                           tblptrl	equ	0xFF6
  2615                           tablat	equ	0xFF5
  2616                           prodh	equ	0xFF4
  2617                           prodl	equ	0xFF3
  2618                           postinc0	equ	0xFEE
  2619                           fsr0h	equ	0xFEA
  2620                           fsr0l	equ	0xFE9
  2621                           wreg	equ	0xFE8
  2622                           indf1	equ	0xFE7
  2623                           postdec1	equ	0xFE5
  2624                           fsr1h	equ	0xFE2
  2625                           fsr1l	equ	0xFE1
  2626                           bsr	equ	0xFE0
  2627                           indf2	equ	0xFDF
  2628                           fsr2h	equ	0xFDA
  2629                           fsr2l	equ	0xFD9
  2630                           status	equ	0xFD8
  2631                           
  2632                           	psect	temp
  2633  000059                     btemp:
  2634                           	opt stack 0
  2635  000059                     	ds	1
  2636  0000                     int$flags	set	btemp
  2637                           pclatu	equ	0xFFB
  2638                           pclath	equ	0xFFA
  2639                           tblptru	equ	0xFF8
  2640                           tblptrh	equ	0xFF7
  2641                           tblptrl	equ	0xFF6
  2642                           tablat	equ	0xFF5
  2643                           prodh	equ	0xFF4
  2644                           prodl	equ	0xFF3
  2645                           postinc0	equ	0xFEE
  2646                           fsr0h	equ	0xFEA
  2647                           fsr0l	equ	0xFE9
  2648                           wreg	equ	0xFE8
  2649                           indf1	equ	0xFE7
  2650                           postdec1	equ	0xFE5
  2651                           fsr1h	equ	0xFE2
  2652                           fsr1l	equ	0xFE1
  2653                           bsr	equ	0xFE0
  2654                           indf2	equ	0xFDF
  2655                           fsr2h	equ	0xFDA
  2656                           fsr2l	equ	0xFD9
  2657                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    46
    Data        10
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     42      88
    BANK0           128     32      77
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> moverx(CODE[7]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 20
		 -> tam(BANK0[20]), 

    stringtoint@string	PTR unsigned char  size(2) Largest target is 3
		 -> digitos(COMRAM[3]), 

    enviarTrama@datos	PTR unsigned char  size(2) Largest target is 39
		 -> saludo(CODE[39]), 


Critical Paths under _main in COMRAM

    _main->_stringtoint
    _stringtoint->___wmul

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    34      0    1894
                                             40 COMRAM     2     2      0
                                              0 BANK0     32    32      0
                _ConfigureOscillator
                            _InitApp
                        _enviarTrama
                          _ledestado
                             _strcmp
                        _stringtoint
 ---------------------------------------------------------------------------------
 (1) _stringtoint                                          3     1      2     713
                                             37 COMRAM     3     1      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     592
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               6     2      4     313
                                             31 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ledestado                                            3     1      2     121
                                             31 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _enviarTrama                                          2     0      2     155
                                             31 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                             17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _enviarTrama
   _ledestado
   _strcmp
   _stringtoint
     ___wmul

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     20      4D       5       60.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2A      58       1       69.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A5      15        0.0%
DATA                 0      0      A5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Nov 06 19:03:19 2017

                                                                          _c 0037  
                                                                          _g 003F  
                                                                          _n 0043  
                                                                          _o 0033  
                                                                          _p 0031  
                                                                          _r 002D  
                                                                         bsr 000FE0  
                                                        ___wmul@multiplicand 0022  
                                                                        l211 0DDA  
                                                                        l214 0DE4  
                                                                        l207 0DB6  
                                                                        u880 0D72  
                                                                        u980 070E  
                                                                        u886 0D76  
                                                                        u990 0722  
                                                                        _led 0045  
                                                                        _tam 0099  
                                                                        _vel 0053  
                                                                _stepsPerRev 0055  
                                                                        wreg 000FE8  
                                                                       l1601 0DC0  
                                                                       l1621 0D0A  
                                                                       l1701 0774  
                                                                       l1615 0D92  
                                                                       l1631 0C7C  
                                                                       l1711 07B2  
                                                                       l1703 077C  
                                                                       l1625 0D40  
                                                                       l1641 0CEA  
                                                                       l1619 0D00  
                                                                       l1811 0A68  
                                                                       l1803 0A32  
                                                                       l1731 083A  
                                                                       l1723 0804  
                                                                       l1715 07CE  
                                                                       l1707 0798  
                                                                       l1821 0AA4  
                                                                       l1813 0A7A  
                                                                       l1805 0A44  
                                                                       l1741 0882  
                                                                       l1733 084C  
                                                                       l1725 0816  
                                                                       l1717 07E0  
                                                                       l1709 07AA  
                                                                       l1653 065C  
                                                                       l1831 0ADA  
                                                                       l1815 0A82  
                                                                       l1807 0A4C  
                                                                       l1751 08C0  
                                                                       l1743 088A  
                                                                       l1735 0854  
                                                                       l1727 081E  
                                                                       l1719 07E8  
                                                                       l1663 068A  
                                                                       l1833 0AEC  
                                                                       l1825 0AB6  
                                                                       l1841 0B1E  
                                                                       l1753 08DA  
                                                                       l1681 06F4  
                                                                       l1649 0646  
                                                                       l1835 0AF4  
                                                                       l1827 0ABE  
                                                                       l1771 095A  
                                                                       l1843 0B62  
                                                                       l1747 08A6  
                                                                       l1739 0870  
                                                                       l1691 072C  
                                                                       l1763 0942  
                                                                       l1659 0678  
                                                                       l1597 0DA4  
                                                                       l1845 0B78  
                                                                       l1837 0B0E  
                                                                       l1781 09A2  
                                                                       l1773 096C  
                                                                       l1749 08B8  
                                                                       l1693 073E  
                                                                       l1757 08E6  
                                                                       l1669 06AE  
                                                                       l1791 09E0  
                                                                       l1783 09AA  
                                                                       l1775 0974  
                                                                       l1767 094A  
                                                                       l1695 0746  
                                                                       l1687 0710  
                                                                       l1759 092A  
                                                                       l1795 09FC  
                                                                       l1787 09C6  
                                                                       l1779 0990  
                                                                       l1699 0762  
                                                                       l1797 0A0E  
                                                                       l1789 09D8  
                                                                       l1799 0A16  
                                                                       _LATA 000F89  
                                                                       i2l38 0C20  
                                                                       _TMR1 000FCE  
                                                                       _dato 004B  
                                                                       _help 002F  
                                                                       _main 0630  
                                                                       _tama 0049  
                                                                       fsr0h 000FEA  
                                                                       fsr1h 000FE2  
                                                                       fsr2h 000FDA  
                                                                       fsr0l 000FE9  
                                                                       indf1 000FE7  
                                                                       indf2 000FDF  
                                                                       fsr1l 000FE1  
                                                                       fsr2l 000FD9  
                                                                       btemp 0059  
                                                               ?_enviarTrama 0020  
                                                                       prodh 000FF4  
                                                                       prodl 000FF3  
                                                                       start 00AA  
                                                         ledestado@tiempoled 0020  
                                                               ___param_bank 000000  
                                                            __end_of_InitApp 0E7C  
                                                                _stringtoint 0C60  
                                                                      ?_main 0001  
                                                                      _RCREG 000FAE  
                                                                      _SPBRG 000FAF  
                                                                      _PORTA 000F80  
                                                                      _PORTB 000F81  
                                                                      _PORTC 000F82  
                                                                      _TRISA 000F92  
                                                                      _TXREG 000FAD  
                                                        _ConfigureOscillator 0EB0  
                                                                      _enter 0047  
                                                                      _steps 0035  
                                                                      main@i 00AD  
                                                                      _xtrue 002B  
                                                            __end_of_low_isr 00AA  
                                                                      pclath 000FFA  
                                                                      tablat 000FF5  
                                                                      status 000FD8  
                                                       ?_ConfigureOscillator 0001  
                                                            __initialization 0DF0  
                                                               __end_of_main 0B84  
                                                                     ??_main 0029  
                                                              __activetblptr 000002  
                                                                     i2l1323 0BE8  
                                                                     i2l1327 0C02  
                                                                     i2l1329 0C06  
                                                                  ??_InitApp 0020  
                                                      ??_ConfigureOscillator 0020  
                                                           __end_of_high_isr 0C60  
                                                                     ___wmul 0E7C  
                                                              _visualizacion 003B  
                                                                     clear_0 0E16  
                                                                     clear_1 0E22  
                                                                     _saludo 0601  
                                                                     _moverx 0628  
                                                                     _strcmp 0CFC  
                                                               __pdataCOMRAM 004F  
                                                               __mediumconst 0000  
                                                                  ??_low_isr 000F  
                                                                     tblptrh 000FF7  
                                                                     tblptrl 000FF6  
                                                                     tblptru 000FF8  
                                                                 __accesstop 0080  
                                                    __end_of__initialization 0E28  
                                                              ___rparam_used 000001  
                                                       __size_of_enviarTrama 0050  
                                                             __pcstackCOMRAM 0001  
                                                         __size_of_ledestado 0050  
                                                                 __pbssBANK0 0080  
                                                                 _actualstep 004F  
                                                                    ?___wmul 0020  
                                                               ?_stringtoint 0026  
                                                                    ?_strcmp 0020  
                                                                  ?_high_isr 0001  
                                                                    _InitApp 0E36  
                                                                    __Hparam 0000  
                                                                    __Lparam 0000  
                                                            __size_of___wmul 002A  
                                                               __psmallconst 0600  
                                                          __end_of_ledestado 0DA0  
                                                                    __pcinit 0DF0  
                                                                    __ramtop 0600  
                                                                    _digitos 004C  
                                                                    __ptext0 0630  
                                                                    __ptext1 0C60  
                                                                    __ptext2 0E7C  
                                                                    __ptext3 0CFC  
                                                                    __ptext4 0D50  
                                                                    __ptext5 0DA0  
                                                                    __ptext6 0E36  
                                                                    __ptext7 0EB0  
                                                                    _comando 0080  
                                                            __size_of_strcmp 0054  
                                                                  _T1CONbits 000FCD  
                                                                    _low_isr 0018  
                                                                 ??_high_isr 0001  
                                                             __pintcode_body 0B84  
                                                       end_of_initialization 0E28  
                                                              __Lmediumconst 0000  
                                                                    int_func 0B84  
                                                                _StepCounter 0041  
                                                                  _RCSTAbits 000FAB  
                                                                    postdec1 000FE5  
                                                                    postinc0 000FEE  
                                                                    strcmp@r 0025  
                                                                  _PORTBbits 000F81  
                                                          stringtoint@string 0026  
                                                                  _TRISBbits 000F93  
                                                                  _TRISCbits 000F94  
                                                __end_of_ConfigureOscillator 0EB6  
                                                                  _TXSTAbits 000FAC  
                                                             __end_of___wmul 0EA6  
                                                              __pidataCOMRAM 0EA6  
                                                       __size_of_stringtoint 009C  
                                                             __end_of_saludo 0628  
                                                             __end_of_moverx 062F  
                                                             __end_of_strcmp 0D50  
                                                        start_initialization 0DF0  
                                                              ??_enviarTrama 0022  
                                                                   ??___wmul 0024  
                                                                   ??_strcmp 0024  
                                                                __pbssCOMRAM 002B  
                                                              __pcstackBANK0 00AD  
                                                          __size_of_high_isr 0C58  
                                                                   ?_InitApp 0001  
                                                                  __pintcode 0008  
                                                        __end_of_enviarTrama 0DF0  
                                                                __pintcodelo 0018  
                                                                __smallconst 0600  
                                                                  _ledestado 0D50  
                                                                   ?_low_isr 0001  
                                                             ___wmul@product 0024  
                                                                   _LATBbits 000F8A  
                                                                   _IPR1bits 000F9F  
                                                                   _PIE1bits 000F9D  
                                                                   _PIR1bits 000F9E  
                                                                  main@i_300 00AF  
                                                                  main@i_301 00B1  
                                                                  main@i_310 00C3  
                                                                  main@i_302 00B3  
                                                                  main@i_311 00C5  
                                                                  main@i_303 00B5  
                                                                  main@i_312 00C7  
                                                                  main@i_304 00B7  
                                                                  main@i_313 00C9  
                                                                  main@i_305 00B9  
                                                                  main@i_314 00CB  
                                                                  main@i_306 00BB  
                                                                  main@i_307 00BD  
                                                                  main@i_308 00BF  
                                                                  main@i_309 00C1  
                                                          ___wmul@multiplier 0020  
                                                                 ?_ledestado 0020  
                                                                  copy_data0 0E04  
                                                                _enviarTrama 0DA0  
                                                           __size_of_InitApp 0046  
                                                                   __Hrparam 0000  
                                                                   __Lrparam 0000  
                                                           enviarTrama@datos 0020  
                                                           __size_of_low_isr 0092  
                                                                   _high_isr 0008  
                                                                   _cont_led 0039  
                                                              __size_of_main 0554  
                                               __size_of_ConfigureOscillator 0006  
                                                                   _numSteps 0051  
                                                                   _muestreo 003D  
                                                                   int$flags 0059  
                                                              ??_stringtoint 0028  
                                                                   _stepcont 0057  
                                                                ??_ledestado 0022  
                                                                   intlevel1 0EB6  
                                                                   intlevel2 0EB6  
                                                                   strcmp@s1 0020  
                                                                   strcmp@s2 0022  
                                                        __end_of_stringtoint 0CFC  
