

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Nov 26 10:58:08 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F252
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 1.42
    46                           ; Generated 13/04/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F252 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  001FBC                     __pidataCOMRAM:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _relaciony
    85  001FBC  03                 	db	3
    86  001FBD  25                 	db	37
    87  001FBE  46                 	db	70
    88                           
    89                           ;initializer for _relacionx
    90  001FBF  FB                 	db	251
    91  001FC0  33                 	db	51
    92  001FC1  46                 	db	70
    93                           
    94                           ;initializer for _ytrue
    95  001FC2  0001               	dw	1
    96                           
    97                           ;initializer for _xtrue
    98  001FC4  0001               	dw	1
    99                           
   100                           ;initializer for _vel
   101  001FC6  01F4               	dw	500
   102                           
   103                           	psect	idataBANK0
   104  001FD8                     __pidataBANK0:
   105                           	opt stack 0
   106                           
   107                           ;initializer for _infotrue
   108  001FD8  0001               	dw	1
   109                           
   110                           ;initializer for _stepsPerRev
   111  001FDA  0FEC               	dw	4076
   112                           
   113                           	psect	mediumconst
   114  007EE8                     __pmediumconst:
   115                           	opt stack 0
   116  007EE8  00                 	db	0
   117  007EE9                     _dpowers:
   118                           	opt stack 0
   119  007EE9  0001               	dw	1
   120  007EEB  000A               	dw	10
   121  007EED  0064               	dw	100
   122  007EEF  03E8               	dw	1000
   123  007EF1  2710               	dw	10000
   124  007EF3                     __end_of_dpowers:
   125                           	opt stack 0
   126  007EF3                     _norango:
   127                           	opt stack 0
   128  007EF3  65                 	db	101
   129  007EF4  6C                 	db	108
   130  007EF5  20                 	db	32
   131  007EF6  6D                 	db	109
   132  007EF7  6F                 	db	111
   133  007EF8  76                 	db	118
   134  007EF9  69                 	db	105
   135  007EFA  6D                 	db	109
   136  007EFB  69                 	db	105
   137  007EFC  65                 	db	101
   138  007EFD  6E                 	db	110
   139  007EFE  74                 	db	116
   140  007EFF  6F                 	db	111
   141  007F00  20                 	db	32
   142  007F01  73                 	db	115
   143  007F02  6F                 	db	111
   144  007F03  6C                 	db	108
   145  007F04  69                 	db	105
   146  007F05  63                 	db	99
   147  007F06  69                 	db	105
   148  007F07  74                 	db	116
   149  007F08  61                 	db	97
   150  007F09  64                 	db	100
   151  007F0A  6F                 	db	111
   152  007F0B  20                 	db	32
   153  007F0C  73                 	db	115
   154  007F0D  65                 	db	101
   155  007F0E  20                 	db	32
   156  007F0F  65                 	db	101
   157  007F10  6E                 	db	110
   158  007F11  63                 	db	99
   159  007F12  75                 	db	117
   160  007F13  65                 	db	101
   161  007F14  6E                 	db	110
   162  007F15  74                 	db	116
   163  007F16  72                 	db	114
   164  007F17  61                 	db	97
   165  007F18  20                 	db	32
   166  007F19  66                 	db	102
   167  007F1A  75                 	db	117
   168  007F1B  65                 	db	101
   169  007F1C  72                 	db	114
   170  007F1D  61                 	db	97
   171  007F1E  20                 	db	32
   172  007F1F  64                 	db	100
   173  007F20  65                 	db	101
   174  007F21  6C                 	db	108
   175  007F22  20                 	db	32
   176  007F23  72                 	db	114
   177  007F24  61                 	db	97
   178  007F25  6E                 	db	110
   179  007F26  67                 	db	103
   180  007F27  6F                 	db	111
   181  007F28  20                 	db	32
   182  007F29  64                 	db	100
   183  007F2A  65                 	db	101
   184  007F2B  20                 	db	32
   185  007F2C  74                 	db	116
   186  007F2D  72                 	db	114
   187  007F2E  61                 	db	97
   188  007F2F  62                 	db	98
   189  007F30  61                 	db	97
   190  007F31  6A                 	db	106
   191  007F32  6F                 	db	111
   192  007F33  00                 	db	0
   193  007F34                     __end_of_norango:
   194                           	opt stack 0
   195  007F34                     _rangoy:
   196                           	opt stack 0
   197  007F34  20                 	db	32
   198  007F35  45                 	db	69
   199  007F36  6C                 	db	108
   200  007F37  20                 	db	32
   201  007F38  72                 	db	114
   202  007F39  61                 	db	97
   203  007F3A  6E                 	db	110
   204  007F3B  67                 	db	103
   205  007F3C  6F                 	db	111
   206  007F3D  20                 	db	32
   207  007F3E  64                 	db	100
   208  007F3F  65                 	db	101
   209  007F40  20                 	db	32
   210  007F41  74                 	db	116
   211  007F42  72                 	db	114
   212  007F43  61                 	db	97
   213  007F44  62                 	db	98
   214  007F45  61                 	db	97
   215  007F46  6A                 	db	106
   216  007F47  6F                 	db	111
   217  007F48  20                 	db	32
   218  007F49  65                 	db	101
   219  007F4A  6E                 	db	110
   220  007F4B  20                 	db	32
   221  007F4C  65                 	db	101
   222  007F4D  6C                 	db	108
   223  007F4E  20                 	db	32
   224  007F4F  65                 	db	101
   225  007F50  6A                 	db	106
   226  007F51  65                 	db	101
   227  007F52  20                 	db	32
   228  007F53  79                 	db	121
   229  007F54  20                 	db	32
   230  007F55  3A                 	db	58
   231  007F56  20                 	db	32
   232  007F57  5B                 	db	91
   233  007F58  30                 	db	48
   234  007F59  2C                 	db	44
   235  007F5A  33                 	db	51
   236  007F5B  30                 	db	48
   237  007F5C  5D                 	db	93
   238  007F5D  6D                 	db	109
   239  007F5E  6D                 	db	109
   240  007F5F  00                 	db	0
   241  007F60                     __end_of_rangoy:
   242                           	opt stack 0
   243  007F60                     _rangox:
   244                           	opt stack 0
   245  007F60  20                 	db	32
   246  007F61  45                 	db	69
   247  007F62  6C                 	db	108
   248  007F63  20                 	db	32
   249  007F64  72                 	db	114
   250  007F65  61                 	db	97
   251  007F66  6E                 	db	110
   252  007F67  67                 	db	103
   253  007F68  6F                 	db	111
   254  007F69  20                 	db	32
   255  007F6A  64                 	db	100
   256  007F6B  65                 	db	101
   257  007F6C  20                 	db	32
   258  007F6D  74                 	db	116
   259  007F6E  72                 	db	114
   260  007F6F  61                 	db	97
   261  007F70  62                 	db	98
   262  007F71  61                 	db	97
   263  007F72  6A                 	db	106
   264  007F73  6F                 	db	111
   265  007F74  20                 	db	32
   266  007F75  65                 	db	101
   267  007F76  6E                 	db	110
   268  007F77  20                 	db	32
   269  007F78  65                 	db	101
   270  007F79  6C                 	db	108
   271  007F7A  20                 	db	32
   272  007F7B  65                 	db	101
   273  007F7C  6A                 	db	106
   274  007F7D  65                 	db	101
   275  007F7E  20                 	db	32
   276  007F7F  78                 	db	120
   277  007F80  20                 	db	32
   278  007F81  3A                 	db	58
   279  007F82  20                 	db	32
   280  007F83  5B                 	db	91
   281  007F84  30                 	db	48
   282  007F85  2C                 	db	44
   283  007F86  32                 	db	50
   284  007F87  30                 	db	48
   285  007F88  5D                 	db	93
   286  007F89  6D                 	db	109
   287  007F8A  6D                 	db	109
   288  007F8B  00                 	db	0
   289  007F8C                     __end_of_rangox:
   290                           	opt stack 0
   291  007F8C                     _comandonoreconocido:
   292                           	opt stack 0
   293  007F8C  43                 	db	67
   294  007F8D  6F                 	db	111
   295  007F8E  6D                 	db	109
   296  007F8F  61                 	db	97
   297  007F90  6E                 	db	110
   298  007F91  64                 	db	100
   299  007F92  6F                 	db	111
   300  007F93  20                 	db	32
   301  007F94  6E                 	db	110
   302  007F95  6F                 	db	111
   303  007F96  20                 	db	32
   304  007F97  52                 	db	82
   305  007F98  65                 	db	101
   306  007F99  63                 	db	99
   307  007F9A  6F                 	db	111
   308  007F9B  6E                 	db	110
   309  007F9C  6F                 	db	111
   310  007F9D  63                 	db	99
   311  007F9E  69                 	db	105
   312  007F9F  64                 	db	100
   313  007FA0  6F                 	db	111
   314  007FA1  00                 	db	0
   315  007FA2                     __end_of_comandonoreconocido:
   316                           	opt stack 0
   317  007FA2                     _saludo:
   318                           	opt stack 0
   319  007FA2  42                 	db	66
   320  007FA3  69                 	db	105
   321  007FA4  65                 	db	101
   322  007FA5  6E                 	db	110
   323  007FA6  76                 	db	118
   324  007FA7  65                 	db	101
   325  007FA8  6E                 	db	110
   326  007FA9  69                 	db	105
   327  007FAA  64                 	db	100
   328  007FAB  6F                 	db	111
   329  007FAC  2C                 	db	44
   330  007FAD  00                 	db	0
   331  007FAE                     __end_of_saludo:
   332                           	opt stack 0
   333  007FAE                     _devolver:
   334                           	opt stack 0
   335  007FAE  44                 	db	68
   336  007FAF  45                 	db	69
   337  007FB0  56                 	db	86
   338  007FB1  4F                 	db	79
   339  007FB2  4C                 	db	76
   340  007FB3  56                 	db	86
   341  007FB4  45                 	db	69
   342  007FB5  52                 	db	82
   343  007FB6  00                 	db	0
   344  007FB7                     __end_of_devolver:
   345                           	opt stack 0
   346  007FB7                     _posicion_info:
   347                           	opt stack 0
   348  007FB7  50                 	db	80
   349  007FB8  4F                 	db	79
   350  007FB9  53                 	db	83
   351  007FBA  49                 	db	73
   352  007FBB  43                 	db	67
   353  007FBC  49                 	db	73
   354  007FBD  4F                 	db	79
   355  007FBE  4E                 	db	78
   356  007FBF  00                 	db	0
   357  007FC0                     __end_of_posicion_info:
   358                           	opt stack 0
   359  007FC0                     _movery:
   360                           	opt stack 0
   361  007FC0  4D                 	db	77
   362  007FC1  4F                 	db	79
   363  007FC2  56                 	db	86
   364  007FC3  45                 	db	69
   365  007FC4  52                 	db	82
   366  007FC5  59                 	db	89
   367  007FC6  00                 	db	0
   368  007FC7                     __end_of_movery:
   369                           	opt stack 0
   370  007FC7                     _moverx:
   371                           	opt stack 0
   372  007FC7  4D                 	db	77
   373  007FC8  4F                 	db	79
   374  007FC9  56                 	db	86
   375  007FCA  45                 	db	69
   376  007FCB  52                 	db	82
   377  007FCC  58                 	db	88
   378  007FCD  00                 	db	0
   379  007FCE                     __end_of_moverx:
   380                           	opt stack 0
   381  0000                     _TMR1	set	4046
   382  0000                     _PIE2bits	set	4000
   383  0000                     _RCSTAbits	set	4011
   384  0000                     _SPBRG	set	4015
   385  0000                     _TRISCbits	set	3988
   386  0000                     _IPR1bits	set	3999
   387  0000                     _PIE1bits	set	3997
   388  0000                     _T1CONbits	set	4045
   389  0000                     _TRISA	set	3986
   390  0000                     _TRISBbits	set	3987
   391  0000                     _PORTC	set	3970
   392  0000                     _PORTB	set	3969
   393  0000                     _PORTA	set	3968
   394  0000                     _PIR2bits	set	4001
   395  0000                     _EECON2	set	4007
   396  0000                     _INTCONbits	set	4082
   397  0000                     _EEDATA	set	4008
   398  0000                     _EECON1bits	set	4006
   399  0000                     _EEADR	set	4009
   400  0000                     _LATB	set	3978
   401  0000                     _LATA	set	3977
   402  0000                     _TXSTAbits	set	4012
   403  0000                     _TXREG	set	4013
   404  0000                     _PORTBbits	set	3969
   405  0000                     _LATBbits	set	3978
   406  0000                     _RCREG	set	4014
   407  0000                     _PIR1bits	set	3998
   408  007FCE                     STR_1:
   409  007FCE  70                 	db	112	;'p'
   410  007FCF  6F                 	db	111	;'o'
   411  007FD0  73                 	db	115	;'s'
   412  007FD1  69                 	db	105	;'i'
   413  007FD2  63                 	db	99	;'c'
   414  007FD3  69                 	db	105	;'i'
   415  007FD4  6F                 	db	111	;'o'
   416  007FD5  6E                 	db	110	;'n'
   417  007FD6  20                 	db	32
   418  007FD7  65                 	db	101	;'e'
   419  007FD8  6E                 	db	110	;'n'
   420  007FD9  20                 	db	32
   421  007FDA  65                 	db	101	;'e'
   422  007FDB  6A                 	db	106	;'j'
   423  007FDC  65                 	db	101	;'e'
   424  007FDD  20                 	db	32
   425  007FDE  78                 	db	120	;'x'
   426  007FDF  20                 	db	32
   427  007FE0  3A                 	db	58	;':'
   428  007FE1  20                 	db	32
   429  007FE2  25                 	db	37
   430  007FE3  64                 	db	100	;'d'
   431  007FE4  20                 	db	32
   432  007FE5  00                 	db	0
   433  007FE6                     STR_2:
   434  007FE6  70                 	db	112	;'p'
   435  007FE7  6F                 	db	111	;'o'
   436  007FE8  73                 	db	115	;'s'
   437  007FE9  69                 	db	105	;'i'
   438  007FEA  63                 	db	99	;'c'
   439  007FEB  69                 	db	105	;'i'
   440  007FEC  6F                 	db	111	;'o'
   441  007FED  6E                 	db	110	;'n'
   442  007FEE  20                 	db	32
   443  007FEF  65                 	db	101	;'e'
   444  007FF0  6E                 	db	110	;'n'
   445  007FF1  20                 	db	32
   446  007FF2  65                 	db	101	;'e'
   447  007FF3  6A                 	db	106	;'j'
   448  007FF4  65                 	db	101	;'e'
   449  007FF5  20                 	db	32
   450  007FF6  79                 	db	121	;'y'
   451  007FF7  20                 	db	32
   452  007FF8  3A                 	db	58	;':'
   453  007FF9  20                 	db	32
   454  007FFA  25                 	db	37
   455  007FFB  64                 	db	100	;'d'
   456  007FFC  20                 	db	32
   457  007FFD  00                 	db	0
   458  0000                     
   459                           ; #config settings
   460  007FFE  00                 	db	0	; dummy byte at the end
   461  0000                     
   462                           	psect	cinit
   463  001CEE                     __pcinit:
   464                           	opt stack 0
   465  001CEE                     start_initialization:
   466                           	opt stack 0
   467  001CEE                     __initialization:
   468                           	opt stack 0
   469                           
   470                           ; Initialize objects allocated to BANK0 (4 bytes)
   471                           ; load TBLPTR registers with __pidataBANK0
   472  001CEE  0ED8               	movlw	low __pidataBANK0
   473  001CF0  6EF6               	movwf	tblptrl,c
   474  001CF2  0E1F               	movlw	high __pidataBANK0
   475  001CF4  6EF7               	movwf	tblptrh,c
   476  001CF6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   477  001CF8  6EF8               	movwf	tblptru,c
   478  001CFA  EE00  F0F9         	lfsr	0,__pdataBANK0
   479  001CFE  EE10 F004          	lfsr	1,4
   480  001D02                     copy_data0:
   481  001D02  0009               	tblrd		*+
   482  001D04  CFF5 FFEE          	movff	tablat,postinc0
   483  001D08  50E5               	movf	postdec1,w,c
   484  001D0A  50E1               	movf	fsr1l,w,c
   485  001D0C  E1FA               	bnz	copy_data0
   486                           
   487                           ; Initialize objects allocated to COMRAM (12 bytes)
   488                           ; load TBLPTR registers with __pidataCOMRAM
   489  001D0E  0EBC               	movlw	low __pidataCOMRAM
   490  001D10  6EF6               	movwf	tblptrl,c
   491  001D12  0E1F               	movlw	high __pidataCOMRAM
   492  001D14  6EF7               	movwf	tblptrh,c
   493  001D16  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   494  001D18  6EF8               	movwf	tblptru,c
   495  001D1A  EE00  F053         	lfsr	0,__pdataCOMRAM
   496  001D1E  EE10 F00C          	lfsr	1,12
   497  001D22                     copy_data1:
   498  001D22  0009               	tblrd		*+
   499  001D24  CFF5 FFEE          	movff	tablat,postinc0
   500  001D28  50E5               	movf	postdec1,w,c
   501  001D2A  50E1               	movf	fsr1l,w,c
   502  001D2C  E1FA               	bnz	copy_data1
   503                           
   504                           ; Clear objects allocated to BANK1 (25 bytes)
   505  001D2E  EE01  F01D         	lfsr	0,__pbssBANK1
   506  001D32  0E19               	movlw	25
   507  001D34                     clear_0:
   508  001D34  6AEE               	clrf	postinc0,c
   509  001D36  06E8               	decf	wreg,f,c
   510  001D38  E1FD               	bnz	clear_0
   511                           
   512                           ; Clear objects allocated to BANK0 (121 bytes)
   513  001D3A  EE00  F080         	lfsr	0,__pbssBANK0
   514  001D3E  0E79               	movlw	121
   515  001D40                     clear_1:
   516  001D40  6AEE               	clrf	postinc0,c
   517  001D42  06E8               	decf	wreg,f,c
   518  001D44  E1FD               	bnz	clear_1
   519                           
   520                           ; Clear objects allocated to COMRAM (37 bytes)
   521  001D46  EE00  F02E         	lfsr	0,__pbssCOMRAM
   522  001D4A  0E25               	movlw	37
   523  001D4C                     clear_2:
   524  001D4C  6AEE               	clrf	postinc0,c
   525  001D4E  06E8               	decf	wreg,f,c
   526  001D50  E1FD               	bnz	clear_2
   527  001D52                     end_of_initialization:
   528                           	opt stack 0
   529  001D52                     __end_of__initialization:
   530                           	opt stack 0
   531  001D52  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   532  001D54  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   533  001D56  0E00               	movlw	low (__Lmediumconst shr (0+16))
   534  001D58  6EF8               	movwf	tblptru,c
   535  001D5A  0100               	movlb	0
   536  001D5C  EF57  F000         	goto	_main	;jump to C main() function
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           postdec1	equ	0xFE5
   544                           fsr1l	equ	0xFE1
   545                           
   546                           	psect	bssCOMRAM
   547  00002E                     __pbssCOMRAM:
   548                           	opt stack 0
   549  00002E                     _stepcount:
   550                           	opt stack 0
   551  00002E                     	ds	4
   552  000032                     _posicionx:
   553                           	opt stack 0
   554  000032                     	ds	2
   555  000034                     _posiciony:
   556                           	opt stack 0
   557  000034                     	ds	2
   558  000036                     _ptr_llegada:
   559                           	opt stack 0
   560  000036                     	ds	2
   561  000038                     _lleg:
   562                           	opt stack 0
   563  000038                     	ds	2
   564  00003A                     _i:
   565                           	opt stack 0
   566  00003A                     	ds	2
   567  00003C                     _r:
   568                           	opt stack 0
   569  00003C                     	ds	2
   570  00003E                     _currentstep:
   571                           	opt stack 0
   572  00003E                     	ds	2
   573  000040                     _tama:
   574                           	opt stack 0
   575  000040                     	ds	2
   576  000042                     _dato:
   577                           	opt stack 0
   578  000042                     	ds	1
   579  000043                     _stepsy_auxiliar:
   580                           	opt stack 0
   581  000043                     	ds	4
   582  000047                     _stepsy:
   583                           	opt stack 0
   584  000047                     	ds	4
   585  00004B                     _stepsx:
   586                           	opt stack 0
   587  00004B                     	ds	4
   588  00004F                     _movimientox:
   589                           	opt stack 0
   590  00004F                     	ds	2
   591  000051                     _movimientoy:
   592                           	opt stack 0
   593  000051                     	ds	2
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           postdec1	equ	0xFE5
   601                           fsr1l	equ	0xFE1
   602                           
   603                           	psect	dataCOMRAM
   604  000053                     __pdataCOMRAM:
   605                           	opt stack 0
   606  000053                     _relaciony:
   607                           	opt stack 0
   608  000053                     	ds	3
   609  000056                     _relacionx:
   610                           	opt stack 0
   611  000056                     	ds	3
   612  000059                     _ytrue:
   613                           	opt stack 0
   614  000059                     	ds	2
   615  00005B                     _xtrue:
   616                           	opt stack 0
   617  00005B                     	ds	2
   618  00005D                     _vel:
   619                           	opt stack 0
   620  00005D                     	ds	2
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           tblptrl	equ	0xFF6
   624                           tablat	equ	0xFF5
   625                           postinc0	equ	0xFEE
   626                           wreg	equ	0xFE8
   627                           postdec1	equ	0xFE5
   628                           fsr1l	equ	0xFE1
   629                           
   630                           	psect	bssBANK0
   631  000080                     __pbssBANK0:
   632                           	opt stack 0
   633  000080                     _help:
   634                           	opt stack 0
   635  000080                     	ds	4
   636  000084                     _p:
   637                           	opt stack 0
   638  000084                     	ds	4
   639  000088                     _o:
   640                           	opt stack 0
   641  000088                     	ds	4
   642  00008C                     _h:
   643                           	opt stack 0
   644  00008C                     	ds	4
   645  000090                     _digitos:
   646                           	opt stack 0
   647  000090                     	ds	3
   648  000093                     _tama2:
   649                           	opt stack 0
   650  000093                     	ds	2
   651  000095                     _tama1:
   652                           	opt stack 0
   653  000095                     	ds	2
   654  000097                     _devolvertrue:
   655                           	opt stack 0
   656  000097                     	ds	2
   657  000099                     _c:
   658                           	opt stack 0
   659  000099                     	ds	2
   660  00009B                     _cont_led:
   661                           	opt stack 0
   662  00009B                     	ds	2
   663  00009D                     _contadorled:
   664                           	opt stack 0
   665  00009D                     	ds	2
   666  00009F                     _visualizacion:
   667                           	opt stack 0
   668  00009F                     	ds	2
   669  0000A1                     _muestreo:
   670                           	opt stack 0
   671  0000A1                     	ds	2
   672  0000A3                     _g:
   673                           	opt stack 0
   674  0000A3                     	ds	2
   675  0000A5                     _StepCounter:
   676                           	opt stack 0
   677  0000A5                     	ds	2
   678  0000A7                     _n:
   679                           	opt stack 0
   680  0000A7                     	ds	2
   681  0000A9                     _movimiento:
   682                           	opt stack 0
   683  0000A9                     	ds	2
   684  0000AB                     _led:
   685                           	opt stack 0
   686  0000AB                     	ds	2
   687  0000AD                     _enter:
   688                           	opt stack 0
   689  0000AD                     	ds	2
   690  0000AF                     _salida:
   691                           	opt stack 0
   692  0000AF                     	ds	25
   693  0000C8                     _comando:
   694                           	opt stack 0
   695  0000C8                     	ds	25
   696  0000E1                     _tam:
   697                           	opt stack 0
   698  0000E1                     	ds	20
   699  0000F5                     _stepsx_auxiliar:
   700                           	opt stack 0
   701  0000F5                     	ds	4
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           postinc0	equ	0xFEE
   707                           wreg	equ	0xFE8
   708                           postdec1	equ	0xFE5
   709                           fsr1l	equ	0xFE1
   710                           
   711                           	psect	dataBANK0
   712  0000F9                     __pdataBANK0:
   713                           	opt stack 0
   714  0000F9                     _infotrue:
   715                           	opt stack 0
   716  0000F9                     	ds	2
   717  0000FB                     _stepsPerRev:
   718                           	opt stack 0
   719  0000FB                     	ds	2
   720                           tblptru	equ	0xFF8
   721                           tblptrh	equ	0xFF7
   722                           tblptrl	equ	0xFF6
   723                           tablat	equ	0xFF5
   724                           postinc0	equ	0xFEE
   725                           wreg	equ	0xFE8
   726                           postdec1	equ	0xFE5
   727                           fsr1l	equ	0xFE1
   728                           
   729                           	psect	bssBANK1
   730  00011D                     __pbssBANK1:
   731                           	opt stack 0
   732  00011D                     _entrada:
   733                           	opt stack 0
   734  00011D                     	ds	25
   735                           tblptru	equ	0xFF8
   736                           tblptrh	equ	0xFF7
   737                           tblptrl	equ	0xFF6
   738                           tablat	equ	0xFF5
   739                           postinc0	equ	0xFEE
   740                           wreg	equ	0xFE8
   741                           postdec1	equ	0xFE5
   742                           fsr1l	equ	0xFE1
   743                           
   744                           	psect	cstackBANK1
   745  000100                     __pcstackBANK1:
   746                           	opt stack 0
   747  000100                     ?_sprintf:
   748                           	opt stack 0
   749  000100                     ?___ftmul:
   750                           	opt stack 0
   751  000100                     ?_stringtolong:
   752                           	opt stack 0
   753  000100                     stringtolong@string:
   754                           	opt stack 0
   755  000100                     sprintf@sp:
   756                           	opt stack 0
   757  000100                     ___ftmul@f1:
   758                           	opt stack 0
   759                           
   760                           ; 3 bytes @ 0x0
   761  000100                     	ds	2
   762  000102                     stringtolong@tamanio:
   763                           	opt stack 0
   764  000102                     sprintf@f:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x2
   768  000102                     	ds	1
   769  000103                     ___ftmul@f2:
   770                           	opt stack 0
   771                           
   772                           ; 3 bytes @ 0x3
   773  000103                     	ds	1
   774  000104                     ??_stringtolong:
   775                           
   776                           ; 1 bytes @ 0x4
   777  000104                     	ds	2
   778  000106                     ___ftmul@exp:
   779                           	opt stack 0
   780  000106                     sprintf@ap:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x6
   784  000106                     	ds	1
   785  000107                     ___ftmul@f3_as_product:
   786                           	opt stack 0
   787                           
   788                           ; 3 bytes @ 0x7
   789  000107                     	ds	1
   790  000108                     sprintf@flag:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x8
   794  000108                     	ds	1
   795  000109                     sprintf@prec:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x9
   799  000109                     	ds	1
   800  00010A                     ___ftmul@cntr:
   801                           	opt stack 0
   802  00010A                     sprintf@val:
   803                           	opt stack 0
   804                           
   805                           ; 2 bytes @ 0xA
   806  00010A                     	ds	1
   807  00010B                     ___ftmul@sign:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0xB
   811  00010B                     	ds	1
   812  00010C                     ?___fttol:
   813                           	opt stack 0
   814  00010C                     sprintf@c:
   815                           	opt stack 0
   816  00010C                     ___fttol@f1:
   817                           	opt stack 0
   818                           
   819                           ; 3 bytes @ 0xC
   820  00010C                     	ds	4
   821  000110                     ??___fttol:
   822                           
   823                           ; 1 bytes @ 0x10
   824  000110                     	ds	5
   825  000115                     ___fttol@sign1:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x15
   829  000115                     	ds	1
   830  000116                     ___fttol@lval:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x16
   834  000116                     	ds	4
   835  00011A                     ___fttol@exp1:
   836                           	opt stack 0
   837                           
   838                           ; 1 bytes @ 0x1A
   839  00011A                     	ds	1
   840  00011B                     ??_main:
   841                           
   842                           ; 1 bytes @ 0x1B
   843  00011B                     	ds	2
   844                           tblptru	equ	0xFF8
   845                           tblptrh	equ	0xFF7
   846                           tblptrl	equ	0xFF6
   847                           tablat	equ	0xFF5
   848                           postinc0	equ	0xFEE
   849                           wreg	equ	0xFE8
   850                           postdec1	equ	0xFE5
   851                           fsr1l	equ	0xFE1
   852                           
   853                           	psect	cstackBANK0
   854  0000FD                     __pcstackBANK0:
   855                           	opt stack 0
   856  0000FD                     ??___ftmul:
   857                           
   858                           ; 1 bytes @ 0x0
   859  0000FD                     	ds	3
   860                           tblptru	equ	0xFF8
   861                           tblptrh	equ	0xFF7
   862                           tblptrl	equ	0xFF6
   863                           tablat	equ	0xFF5
   864                           postinc0	equ	0xFEE
   865                           wreg	equ	0xFE8
   866                           postdec1	equ	0xFE5
   867                           fsr1l	equ	0xFE1
   868                           
   869                           	psect	cstackCOMRAM
   870  000001                     __pcstackCOMRAM:
   871                           	opt stack 0
   872  000001                     ??_high_isr:
   873  000001                     
   874                           ; 1 bytes @ 0x0
   875  000001                     	ds	15
   876  000010                     ??_low_isr:
   877                           
   878                           ; 1 bytes @ 0xF
   879  000010                     	ds	17
   880  000021                     ?_strcmp:
   881                           	opt stack 0
   882  000021                     ?___lwdiv:
   883                           	opt stack 0
   884  000021                     ?___ftpack:
   885                           	opt stack 0
   886  000021                     ?___lmul:
   887                           	opt stack 0
   888  000021                     enviarTrama@datos:
   889                           	opt stack 0
   890  000021                     ledestado@tiempoled:
   891                           	opt stack 0
   892  000021                     ___lwdiv@dividend:
   893                           	opt stack 0
   894  000021                     strcmp@s1:
   895                           	opt stack 0
   896  000021                     ___ftpack@arg:
   897                           	opt stack 0
   898  000021                     ejexpositivo@paso:
   899                           	opt stack 0
   900  000021                     ejexnegativo@paso2:
   901                           	opt stack 0
   902  000021                     ejeypositivo@paso3:
   903                           	opt stack 0
   904  000021                     ejeynegativo@paso4:
   905                           	opt stack 0
   906  000021                     ___lmul@multiplier:
   907                           	opt stack 0
   908                           
   909                           ; 4 bytes @ 0x20
   910  000021                     	ds	2
   911  000023                     ??_ledestado:
   912  000023                     ___lwdiv@divisor:
   913                           	opt stack 0
   914  000023                     strcmp@s2:
   915                           	opt stack 0
   916                           
   917                           ; 2 bytes @ 0x22
   918  000023                     	ds	1
   919  000024                     ___ftpack@exp:
   920                           	opt stack 0
   921                           
   922                           ; 1 bytes @ 0x23
   923  000024                     	ds	1
   924  000025                     ??_strcmp:
   925  000025                     ??_ejeynegativo:
   926  000025                     ??_ejexnegativo:
   927  000025                     ??_ejexpositivo:
   928  000025                     ??_ejeypositivo:
   929  000025                     ___ftpack@sign:
   930                           	opt stack 0
   931  000025                     ___lwdiv@counter:
   932                           	opt stack 0
   933  000025                     ___lmul@multiplicand:
   934                           	opt stack 0
   935                           
   936                           ; 4 bytes @ 0x24
   937  000025                     	ds	1
   938  000026                     ??___ftpack:
   939  000026                     strcmp@r:
   940                           	opt stack 0
   941  000026                     ___lwdiv@quotient:
   942                           	opt stack 0
   943                           
   944                           ; 2 bytes @ 0x25
   945  000026                     	ds	2
   946  000028                     ?___lwmod:
   947                           	opt stack 0
   948  000028                     ___lwmod@dividend:
   949                           	opt stack 0
   950                           
   951                           ; 2 bytes @ 0x27
   952  000028                     	ds	1
   953  000029                     ?___awtoft:
   954                           	opt stack 0
   955  000029                     ___awtoft@c:
   956                           	opt stack 0
   957  000029                     ___lmul@product:
   958                           	opt stack 0
   959                           
   960                           ; 4 bytes @ 0x28
   961  000029                     	ds	1
   962  00002A                     ___lwmod@divisor:
   963                           	opt stack 0
   964                           
   965                           ; 2 bytes @ 0x29
   966  00002A                     	ds	2
   967  00002C                     ___awtoft@sign:
   968                           	opt stack 0
   969  00002C                     ___lwmod@counter:
   970                           	opt stack 0
   971                           
   972                           ; 1 bytes @ 0x2B
   973  00002C                     	ds	1
   974  00002D                     ??_sprintf:
   975                           
   976                           ; 1 bytes @ 0x2C
   977  00002D                     	ds	1
   978                           tblptru	equ	0xFF8
   979                           tblptrh	equ	0xFF7
   980                           tblptrl	equ	0xFF6
   981                           tablat	equ	0xFF5
   982                           postinc0	equ	0xFEE
   983                           wreg	equ	0xFE8
   984                           postdec1	equ	0xFE5
   985                           fsr1l	equ	0xFE1
   986                           
   987 ;;
   988 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   989 ;;
   990 ;; *************** function _main *****************
   991 ;; Defined at:
   992 ;;		line 102 in file "main.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      void 
   999 ;; Registers used:
  1000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1006 ;;      Params:         0       0       0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0       0       0
  1008 ;;      Temps:          0       0       2       0       0       0       0
  1009 ;;      Totals:         0       0       2       0       0       0       0
  1010 ;;Total ram usage:        2 bytes
  1011 ;; Hardware stack levels required when called:    4
  1012 ;; This function calls:
  1013 ;;		_ConfigureOscillator
  1014 ;;		_InitApp
  1015 ;;		___awtoft
  1016 ;;		___ftmul
  1017 ;;		___fttol
  1018 ;;		_apagarM1
  1019 ;;		_apagarM2
  1020 ;;		_ejexnegativo
  1021 ;;		_ejexpositivo
  1022 ;;		_ejeynegativo
  1023 ;;		_ejeypositivo
  1024 ;;		_enviarTrama
  1025 ;;		_ledestado
  1026 ;;		_sprintf
  1027 ;;		_strcmp
  1028 ;;		_stringtolong
  1029 ;; This function is called by:
  1030 ;;		Startup code after reset
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text0
  1035  0000AE                     __ptext0:
  1036                           	opt stack 0
  1037  0000AE                     _main:
  1038                           	opt stack 0
  1039  0000AE  FFFF               	dw	65535	; assembler added errata NOP
  1040                           
  1041                           ;main.c: 104: ConfigureOscillator();
  1042                           
  1043                           ;incstack = 0
  1044  0000B0  ECE9  F00F         	call	_ConfigureOscillator	;wreg free
  1045                           
  1046                           ;main.c: 107: InitApp();
  1047  0000B4  EC66  F00F         	call	_InitApp	;wreg free
  1048                           
  1049                           ;main.c: 111: enviarTrama(saludo);
  1050  0000B8  0EA2               	movlw	low _saludo
  1051  0000BA  6E21               	movwf	enviarTrama@datos,c
  1052  0000BC  0E7F               	movlw	high _saludo
  1053  0000BE  6E22               	movwf	enviarTrama@datos+1,c
  1054  0000C0  EC3B  F00E         	call	_enviarTrama	;wreg free
  1055                           
  1056                           ;main.c: 112: enviarTrama(rangox);
  1057  0000C4  0E60               	movlw	low _rangox
  1058  0000C6  6E21               	movwf	enviarTrama@datos,c
  1059  0000C8  0E7F               	movlw	high _rangox
  1060  0000CA  6E22               	movwf	enviarTrama@datos+1,c
  1061  0000CC  EC3B  F00E         	call	_enviarTrama	;wreg free
  1062                           
  1063                           ;main.c: 113: enviarTrama(rangoy);
  1064  0000D0  0E34               	movlw	low _rangoy
  1065  0000D2  6E21               	movwf	enviarTrama@datos,c
  1066  0000D4  0E7F               	movlw	high _rangoy
  1067  0000D6  6E22               	movwf	enviarTrama@datos+1,c
  1068  0000D8  EC3B  F00E         	call	_enviarTrama	;wreg free
  1069  0000DC                     l3788:
  1070  0000DC  FFFF               	dw	65535	; assembler added errata NOP
  1071                           
  1072                           ;main.c: 115: if (led == 1 && movimiento == 0) {
  1073  0000DE  0100               	movlb	0	; () banked
  1074  0000E0  05AB               	decf	_led& (0+255),w,b
  1075  0000E2  0100               	movlb	0	; () banked
  1076  0000E4  11AC               	iorwf	(_led+1)& (0+255),w,b
  1077  0000E6  A4D8               	btfss	status,2,c
  1078  0000E8  D00D               	goto	l3796
  1079                           
  1080                           ; BSR set to: 0
  1081  0000EA  0100               	movlb	0	; () banked
  1082  0000EC  51A9               	movf	_movimiento& (0+255),w,b
  1083  0000EE  0100               	movlb	0	; () banked
  1084  0000F0  11AA               	iorwf	(_movimiento+1)& (0+255),w,b
  1085  0000F2  A4D8               	btfss	status,2,c
  1086  0000F4  D007               	goto	l3796
  1087                           
  1088                           ; BSR set to: 0
  1089                           ;main.c: 116: __nop();
  1090  0000F6  F000               	nop	
  1091                           
  1092                           ;main.c: 117: ledestado(6);
  1093  0000F8  0E00               	movlw	0
  1094  0000FA  6E22               	movwf	ledestado@tiempoled+1,c
  1095  0000FC  0E06               	movlw	6
  1096  0000FE  6E21               	movwf	ledestado@tiempoled,c
  1097  000100  EC0F  F00F         	call	_ledestado	;wreg free
  1098  000104                     l3796:
  1099  000104  FFFF               	dw	65535	; assembler added errata NOP
  1100                           
  1101                           ;main.c: 118: }
  1102                           ;main.c: 121: if (enter == 1) {
  1103  000106  0100               	movlb	0	; () banked
  1104  000108  05AD               	decf	_enter& (0+255),w,b
  1105  00010A  0100               	movlb	0	; () banked
  1106  00010C  11AE               	iorwf	(_enter+1)& (0+255),w,b
  1107  00010E  A4D8               	btfss	status,2,c
  1108  000110  D39F               	goto	l4006
  1109                           
  1110                           ; BSR set to: 0
  1111                           ;main.c: 123: __nop();
  1112  000112  F000               	nop	
  1113                           
  1114                           ;main.c: 124: for (r = 0; r <= 5; r++) {
  1115  000114  0E00               	movlw	0
  1116  000116  6E3D               	movwf	_r+1,c
  1117  000118  0E00               	movlw	0
  1118  00011A  6E3C               	movwf	_r,c
  1119  00011C                     l3802:
  1120  00011C  FFFF               	dw	65535	; assembler added errata NOP
  1121  00011E  BE3D               	btfsc	_r+1,7,c
  1122  000120  D006               	goto	l3806
  1123  000122  503D               	movf	_r+1,w,c
  1124  000124  E116               	bnz	l3812
  1125  000126  0E06               	movlw	6
  1126  000128  5C3C               	subwf	_r,w,c
  1127  00012A  B0D8               	btfsc	status,0,c
  1128  00012C  D012               	goto	l3812
  1129  00012E                     l3806:
  1130  00012E  FFFF               	dw	65535	; assembler added errata NOP
  1131                           
  1132                           ;main.c: 125: tam[r] = comando[r];
  1133  000130  0EC8               	movlw	low _comando
  1134  000132  243C               	addwf	_r,w,c
  1135  000134  6ED9               	movwf	fsr2l,c
  1136  000136  0E00               	movlw	high _comando
  1137  000138  203D               	addwfc	_r+1,w,c
  1138  00013A  6EDA               	movwf	fsr2h,c
  1139  00013C  0EE1               	movlw	low _tam
  1140  00013E  243C               	addwf	_r,w,c
  1141  000140  6EE1               	movwf	fsr1l,c
  1142  000142  0E00               	movlw	high _tam
  1143  000144  203D               	addwfc	_r+1,w,c
  1144  000146  6EE2               	movwf	fsr1h,c
  1145  000148  CFDF FFE7          	movff	indf2,indf1
  1146  00014C  4A3C               	infsnz	_r,f,c
  1147  00014E  2A3D               	incf	_r+1,f,c
  1148  000150  D7E5               	goto	l3802
  1149  000152                     l3812:
  1150  000152  FFFF               	dw	65535	; assembler added errata NOP
  1151                           
  1152                           ;main.c: 126: }
  1153                           ;main.c: 127: xtrue = strcmp(tam, moverx);
  1154  000154  0EE1               	movlw	low _tam
  1155  000156  6E21               	movwf	strcmp@s1,c
  1156  000158  0E00               	movlw	high _tam
  1157  00015A  6E22               	movwf	strcmp@s1+1,c
  1158  00015C  0EC7               	movlw	low _moverx
  1159  00015E  6E23               	movwf	strcmp@s2,c
  1160  000160  0E7F               	movlw	high _moverx
  1161  000162  6E24               	movwf	strcmp@s2+1,c
  1162  000164  EC3C  F00F         	call	_strcmp	;wreg free
  1163  000168  C021  F05B         	movff	?_strcmp,_xtrue
  1164  00016C  C022  F05C         	movff	?_strcmp+1,_xtrue+1
  1165                           
  1166                           ;main.c: 128: ytrue = strcmp(tam, movery);
  1167  000170  0EE1               	movlw	low _tam
  1168  000172  6E21               	movwf	strcmp@s1,c
  1169  000174  0E00               	movlw	high _tam
  1170  000176  6E22               	movwf	strcmp@s1+1,c
  1171  000178  0EC0               	movlw	low _movery
  1172  00017A  6E23               	movwf	strcmp@s2,c
  1173  00017C  0E7F               	movlw	high _movery
  1174  00017E  6E24               	movwf	strcmp@s2+1,c
  1175  000180  EC3C  F00F         	call	_strcmp	;wreg free
  1176  000184  C021  F059         	movff	?_strcmp,_ytrue
  1177  000188  C022  F05A         	movff	?_strcmp+1,_ytrue+1
  1178                           
  1179                           ;main.c: 129: infotrue = strcmp(comando, posicion_info);
  1180  00018C  0EC8               	movlw	low _comando
  1181  00018E  6E21               	movwf	strcmp@s1,c
  1182  000190  0E00               	movlw	high _comando
  1183  000192  6E22               	movwf	strcmp@s1+1,c
  1184  000194  0EB7               	movlw	low _posicion_info
  1185  000196  6E23               	movwf	strcmp@s2,c
  1186  000198  0E7F               	movlw	high _posicion_info
  1187  00019A  6E24               	movwf	strcmp@s2+1,c
  1188  00019C  EC3C  F00F         	call	_strcmp	;wreg free
  1189  0001A0  C021  F0F9         	movff	?_strcmp,_infotrue
  1190  0001A4  C022  F0FA         	movff	?_strcmp+1,_infotrue+1
  1191                           
  1192                           ;main.c: 130: devolvertrue = strcmp(comando, devolver);
  1193  0001A8  0EC8               	movlw	low _comando
  1194  0001AA  6E21               	movwf	strcmp@s1,c
  1195  0001AC  0E00               	movlw	high _comando
  1196  0001AE  6E22               	movwf	strcmp@s1+1,c
  1197  0001B0  0EAE               	movlw	low _devolver
  1198  0001B2  6E23               	movwf	strcmp@s2,c
  1199  0001B4  0E7F               	movlw	high _devolver
  1200  0001B6  6E24               	movwf	strcmp@s2+1,c
  1201  0001B8  EC3C  F00F         	call	_strcmp	;wreg free
  1202  0001BC  C021  F097         	movff	?_strcmp,_devolvertrue
  1203  0001C0  C022  F098         	movff	?_strcmp+1,_devolvertrue+1
  1204                           
  1205                           ;main.c: 131: enviarTrama(comando);
  1206  0001C4  0EC8               	movlw	low _comando
  1207  0001C6  6E21               	movwf	enviarTrama@datos,c
  1208  0001C8  0E00               	movlw	high _comando
  1209  0001CA  6E22               	movwf	enviarTrama@datos+1,c
  1210  0001CC  EC3B  F00E         	call	_enviarTrama	;wreg free
  1211                           
  1212                           ;main.c: 132: if (xtrue != 0 && ytrue != 0 && infotrue != 0 && devolvertrue != 0) {
  1213  0001D0  505B               	movf	_xtrue,w,c
  1214  0001D2  105C               	iorwf	_xtrue+1,w,c
  1215  0001D4  B4D8               	btfsc	status,2,c
  1216  0001D6  D01B               	goto	l3828
  1217  0001D8  5059               	movf	_ytrue,w,c
  1218  0001DA  105A               	iorwf	_ytrue+1,w,c
  1219  0001DC  B4D8               	btfsc	status,2,c
  1220  0001DE  D017               	goto	l3828
  1221  0001E0  0100               	movlb	0	; () banked
  1222  0001E2  51F9               	movf	_infotrue& (0+255),w,b
  1223  0001E4  0100               	movlb	0	; () banked
  1224  0001E6  11FA               	iorwf	(_infotrue+1)& (0+255),w,b
  1225  0001E8  B4D8               	btfsc	status,2,c
  1226  0001EA  D011               	goto	l3828
  1227                           
  1228                           ; BSR set to: 0
  1229  0001EC  0100               	movlb	0	; () banked
  1230  0001EE  5197               	movf	_devolvertrue& (0+255),w,b
  1231  0001F0  0100               	movlb	0	; () banked
  1232  0001F2  1198               	iorwf	(_devolvertrue+1)& (0+255),w,b
  1233  0001F4  B4D8               	btfsc	status,2,c
  1234  0001F6  D00B               	goto	l3828
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;main.c: 133: enviarTrama(comandonoreconocido);
  1238  0001F8  0E8C               	movlw	low _comandonoreconocido
  1239  0001FA  6E21               	movwf	enviarTrama@datos,c
  1240  0001FC  0E7F               	movlw	high _comandonoreconocido
  1241  0001FE  6E22               	movwf	enviarTrama@datos+1,c
  1242  000200  EC3B  F00E         	call	_enviarTrama	;wreg free
  1243                           
  1244                           ;main.c: 134: enter = 0;
  1245  000204  0E00               	movlw	0
  1246  000206  0100               	movlb	0	; () banked
  1247  000208  6FAE               	movwf	(_enter+1)& (0+255),b
  1248  00020A  0E00               	movlw	0
  1249  00020C  6FAD               	movwf	_enter& (0+255),b
  1250  00020E                     l3828:
  1251  00020E  FFFF               	dw	65535	; assembler added errata NOP
  1252                           
  1253                           ;main.c: 135: }
  1254                           ;main.c: 137: if (xtrue == 0) {
  1255  000210  505B               	movf	_xtrue,w,c
  1256  000212  105C               	iorwf	_xtrue+1,w,c
  1257  000214  A4D8               	btfss	status,2,c
  1258  000216  D0E3               	goto	l3884
  1259                           
  1260                           ;main.c: 138: ptr_llegada = &comando[6];
  1261  000218  0ECE               	movlw	low (_comando+6)
  1262  00021A  6E36               	movwf	_ptr_llegada,c
  1263  00021C  0E00               	movlw	high (_comando+6)
  1264  00021E  6E37               	movwf	_ptr_llegada+1,c
  1265                           
  1266                           ;main.c: 139: if (*ptr_llegada == '-') {
  1267  000220  C036  FFD9         	movff	_ptr_llegada,fsr2l
  1268  000224  C037  FFDA         	movff	_ptr_llegada+1,fsr2h
  1269  000228  0E2D               	movlw	45
  1270  00022A  18DE               	xorwf	postinc2,w,c
  1271  00022C  A4D8               	btfss	status,2,c
  1272  00022E  D088               	goto	l3868
  1273                           
  1274                           ;main.c: 140: ptr_llegada = &comando[7];
  1275  000230  0ECF               	movlw	low (_comando+7)
  1276  000232  6E36               	movwf	_ptr_llegada,c
  1277  000234  0E00               	movlw	high (_comando+7)
  1278  000236  6E37               	movwf	_ptr_llegada+1,c
  1279                           
  1280                           ;main.c: 141: while (*ptr_llegada != 0) {
  1281  000238  D011               	goto	l3842
  1282  00023A                     l3836:
  1283  00023A  FFFF               	dw	65535	; assembler added errata NOP
  1284                           
  1285                           ;main.c: 142: entrada[lleg] = *ptr_llegada;
  1286  00023C  C036  FFD9         	movff	_ptr_llegada,fsr2l
  1287  000240  C037  FFDA         	movff	_ptr_llegada+1,fsr2h
  1288  000244  0E1D               	movlw	low _entrada
  1289  000246  2438               	addwf	_lleg,w,c
  1290  000248  6EE1               	movwf	fsr1l,c
  1291  00024A  0E01               	movlw	high _entrada
  1292  00024C  2039               	addwfc	_lleg+1,w,c
  1293  00024E  6EE2               	movwf	fsr1h,c
  1294  000250  CFDF FFE7          	movff	indf2,indf1
  1295                           
  1296                           ;main.c: 143: ptr_llegada++;
  1297  000254  4A36               	infsnz	_ptr_llegada,f,c
  1298  000256  2A37               	incf	_ptr_llegada+1,f,c
  1299                           
  1300                           ;main.c: 144: lleg++;
  1301  000258  4A38               	infsnz	_lleg,f,c
  1302  00025A  2A39               	incf	_lleg+1,f,c
  1303  00025C                     l3842:
  1304  00025C  FFFF               	dw	65535	; assembler added errata NOP
  1305  00025E  C036  FFD9         	movff	_ptr_llegada,fsr2l
  1306  000262  C037  FFDA         	movff	_ptr_llegada+1,fsr2h
  1307  000266  50DF               	movf	indf2,w,c
  1308  000268  A4D8               	btfss	status,2,c
  1309  00026A  D7E7               	goto	l3836
  1310                           
  1311                           ;main.c: 145: }
  1312                           ;main.c: 146: lleg = 0;
  1313  00026C  0E00               	movlw	0
  1314  00026E  6E39               	movwf	_lleg+1,c
  1315  000270  0E00               	movlw	0
  1316  000272  6E38               	movwf	_lleg,c
  1317                           
  1318                           ;main.c: 148: tama1 = tama - 7;
  1319  000274  0EF9               	movlw	249
  1320  000276  2440               	addwf	_tama,w,c
  1321  000278  0100               	movlb	0	; () banked
  1322  00027A  6F95               	movwf	_tama1& (0+255),b
  1323  00027C  0EFF               	movlw	255
  1324  00027E  2041               	addwfc	_tama+1,w,c
  1325  000280  0100               	movlb	0	; () banked
  1326  000282  6F96               	movwf	(_tama1+1)& (0+255),b
  1327                           
  1328                           ; BSR set to: 0
  1329                           ;main.c: 149: movimientox = stringtolong(entrada, tama1);
  1330  000284  0E1D               	movlw	low _entrada
  1331  000286  0101               	movlb	1	; () banked
  1332  000288  6F00               	movwf	stringtolong@string& (0+255),b
  1333  00028A  0E01               	movlw	high _entrada
  1334  00028C  0101               	movlb	1	; () banked
  1335  00028E  6F01               	movwf	(stringtolong@string+1)& (0+255),b
  1336  000290  C095  F102         	movff	_tama1,stringtolong@tamanio
  1337  000294  C096  F103         	movff	_tama1+1,stringtolong@tamanio+1
  1338  000298  EC25  F00B         	call	_stringtolong	;wreg free
  1339  00029C  C100  F04F         	movff	?_stringtolong,_movimientox
  1340  0002A0  C101  F050         	movff	?_stringtolong+1,_movimientox+1
  1341                           
  1342                           ;main.c: 150: stepsx = movimientox * relacionx;
  1343  0002A4  C056  F103         	movff	_relacionx,___ftmul@f2
  1344  0002A8  C057  F104         	movff	_relacionx+1,___ftmul@f2+1
  1345  0002AC  C058  F105         	movff	_relacionx+2,___ftmul@f2+2
  1346  0002B0  C04F  F029         	movff	_movimientox,___awtoft@c
  1347  0002B4  C050  F02A         	movff	_movimientox+1,___awtoft@c+1
  1348  0002B8  ECB8  F00F         	call	___awtoft	;wreg free
  1349  0002BC  C029  F100         	movff	?___awtoft,___ftmul@f1
  1350  0002C0  C02A  F101         	movff	?___awtoft+1,___ftmul@f1+1
  1351  0002C4  C02B  F102         	movff	?___awtoft+2,___ftmul@f1+2
  1352  0002C8  ECE7  F00B         	call	___ftmul	;wreg free
  1353  0002CC  C100  F10C         	movff	?___ftmul,___fttol@f1
  1354  0002D0  C101  F10D         	movff	?___ftmul+1,___fttol@f1+1
  1355  0002D4  C102  F10E         	movff	?___ftmul+2,___fttol@f1+2
  1356  0002D8  EC3F  F00D         	call	___fttol	;wreg free
  1357  0002DC  C10C  F04B         	movff	?___fttol,_stepsx
  1358  0002E0  C10D  F04C         	movff	?___fttol+1,_stepsx+1
  1359  0002E4  C10E  F04D         	movff	?___fttol+2,_stepsx+2
  1360  0002E8  C10F  F04E         	movff	?___fttol+3,_stepsx+3
  1361                           
  1362                           ;main.c: 151: movimientox = movimientox * (-1);
  1363  0002EC  6C4F               	negf	_movimientox,c
  1364  0002EE  1E50               	comf	_movimientox+1,f,c
  1365  0002F0  B0D8               	btfsc	status,0,c
  1366  0002F2  2A50               	incf	_movimientox+1,f,c
  1367                           
  1368                           ;main.c: 152: posicionx = movimientox + posicionx;
  1369  0002F4  5032               	movf	_posicionx,w,c
  1370  0002F6  244F               	addwf	_movimientox,w,c
  1371  0002F8  6E32               	movwf	_posicionx,c
  1372  0002FA  5033               	movf	_posicionx+1,w,c
  1373  0002FC  2050               	addwfc	_movimientox+1,w,c
  1374  0002FE  6E33               	movwf	_posicionx+1,c
  1375                           
  1376                           ;main.c: 153: stepsx = (-1) * stepsx;
  1377  000300  1E4E               	comf	_stepsx+3,f,c
  1378  000302  1E4D               	comf	_stepsx+2,f,c
  1379  000304  1E4C               	comf	_stepsx+1,f,c
  1380  000306  6C4B               	negf	_stepsx,c
  1381  000308  0E00               	movlw	0
  1382  00030A  224C               	addwfc	_stepsx+1,f,c
  1383  00030C  224D               	addwfc	_stepsx+2,f,c
  1384  00030E  224E               	addwfc	_stepsx+3,f,c
  1385  000310  D0E7               	goto	l3914
  1386  000312                     l3860:
  1387  000312  FFFF               	dw	65535	; assembler added errata NOP
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;main.c: 155: tama = 0;
  1391  000314  0E00               	movlw	0
  1392  000316  6E41               	movwf	_tama+1,c
  1393  000318  0E00               	movlw	0
  1394  00031A  6E40               	movwf	_tama,c
  1395                           
  1396                           ;main.c: 157: } else {
  1397  00031C  D265               	goto	l221
  1398  00031E                     l3862:
  1399  00031E  FFFF               	dw	65535	; assembler added errata NOP
  1400                           
  1401                           ;main.c: 159: entrada[lleg] = *ptr_llegada;
  1402  000320  C036  FFD9         	movff	_ptr_llegada,fsr2l
  1403  000324  C037  FFDA         	movff	_ptr_llegada+1,fsr2h
  1404  000328  0E1D               	movlw	low _entrada
  1405  00032A  2438               	addwf	_lleg,w,c
  1406  00032C  6EE1               	movwf	fsr1l,c
  1407  00032E  0E01               	movlw	high _entrada
  1408  000330  2039               	addwfc	_lleg+1,w,c
  1409  000332  6EE2               	movwf	fsr1h,c
  1410  000334  CFDF FFE7          	movff	indf2,indf1
  1411                           
  1412                           ;main.c: 160: ptr_llegada++;
  1413  000338  4A36               	infsnz	_ptr_llegada,f,c
  1414  00033A  2A37               	incf	_ptr_llegada+1,f,c
  1415                           
  1416                           ;main.c: 161: lleg++;
  1417  00033C  4A38               	infsnz	_lleg,f,c
  1418  00033E  2A39               	incf	_lleg+1,f,c
  1419  000340                     l3868:
  1420  000340  FFFF               	dw	65535	; assembler added errata NOP
  1421  000342  C036  FFD9         	movff	_ptr_llegada,fsr2l
  1422  000346  C037  FFDA         	movff	_ptr_llegada+1,fsr2h
  1423  00034A  50DF               	movf	indf2,w,c
  1424  00034C  A4D8               	btfss	status,2,c
  1425  00034E  D7E7               	goto	l3862
  1426                           
  1427                           ;main.c: 162: }
  1428                           ;main.c: 163: lleg = 0;
  1429  000350  0E00               	movlw	0
  1430  000352  6E39               	movwf	_lleg+1,c
  1431  000354  0E00               	movlw	0
  1432  000356  6E38               	movwf	_lleg,c
  1433                           
  1434                           ;main.c: 164: tama2 = tama - 6;
  1435  000358  0EFA               	movlw	250
  1436  00035A  2440               	addwf	_tama,w,c
  1437  00035C  0100               	movlb	0	; () banked
  1438  00035E  6F93               	movwf	_tama2& (0+255),b
  1439  000360  0EFF               	movlw	255
  1440  000362  2041               	addwfc	_tama+1,w,c
  1441  000364  0100               	movlb	0	; () banked
  1442  000366  6F94               	movwf	(_tama2+1)& (0+255),b
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;main.c: 165: movimientox = stringtolong(entrada, tama2);
  1446  000368  0E1D               	movlw	low _entrada
  1447  00036A  0101               	movlb	1	; () banked
  1448  00036C  6F00               	movwf	stringtolong@string& (0+255),b
  1449  00036E  0E01               	movlw	high _entrada
  1450  000370  0101               	movlb	1	; () banked
  1451  000372  6F01               	movwf	(stringtolong@string+1)& (0+255),b
  1452  000374  C093  F102         	movff	_tama2,stringtolong@tamanio
  1453  000378  C094  F103         	movff	_tama2+1,stringtolong@tamanio+1
  1454  00037C  EC25  F00B         	call	_stringtolong	;wreg free
  1455  000380  C100  F04F         	movff	?_stringtolong,_movimientox
  1456  000384  C101  F050         	movff	?_stringtolong+1,_movimientox+1
  1457                           
  1458                           ;main.c: 166: posicionx = movimientox + posicionx;
  1459  000388  5032               	movf	_posicionx,w,c
  1460  00038A  244F               	addwf	_movimientox,w,c
  1461  00038C  6E32               	movwf	_posicionx,c
  1462  00038E  5033               	movf	_posicionx+1,w,c
  1463  000390  2050               	addwfc	_movimientox+1,w,c
  1464  000392  6E33               	movwf	_posicionx+1,c
  1465                           
  1466                           ;main.c: 167: stepsx = movimientox * relacionx;
  1467  000394  C056  F103         	movff	_relacionx,___ftmul@f2
  1468  000398  C057  F104         	movff	_relacionx+1,___ftmul@f2+1
  1469  00039C  C058  F105         	movff	_relacionx+2,___ftmul@f2+2
  1470  0003A0  C04F  F029         	movff	_movimientox,___awtoft@c
  1471  0003A4  C050  F02A         	movff	_movimientox+1,___awtoft@c+1
  1472  0003A8  ECB8  F00F         	call	___awtoft	;wreg free
  1473  0003AC  C029  F100         	movff	?___awtoft,___ftmul@f1
  1474  0003B0  C02A  F101         	movff	?___awtoft+1,___ftmul@f1+1
  1475  0003B4  C02B  F102         	movff	?___awtoft+2,___ftmul@f1+2
  1476  0003B8  ECE7  F00B         	call	___ftmul	;wreg free
  1477  0003BC  C100  F10C         	movff	?___ftmul,___fttol@f1
  1478  0003C0  C101  F10D         	movff	?___ftmul+1,___fttol@f1+1
  1479  0003C4  C102  F10E         	movff	?___ftmul+2,___fttol@f1+2
  1480  0003C8  EC3F  F00D         	call	___fttol	;wreg free
  1481  0003CC  C10C  F04B         	movff	?___fttol,_stepsx
  1482  0003D0  C10D  F04C         	movff	?___fttol+1,_stepsx+1
  1483  0003D4  C10E  F04D         	movff	?___fttol+2,_stepsx+2
  1484  0003D8  C10F  F04E         	movff	?___fttol+3,_stepsx+3
  1485  0003DC  D081               	goto	l3914
  1486  0003DE                     l3884:
  1487  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  1488  0003E0  5059               	movf	_ytrue,w,c
  1489  0003E2  105A               	iorwf	_ytrue+1,w,c
  1490  0003E4  A4D8               	btfss	status,2,c
  1491  0003E6  D0ED               	goto	l3942
  1492                           
  1493                           ;main.c: 173: ptr_llegada = &comando[6];
  1494  0003E8  0ECE               	movlw	low (_comando+6)
  1495  0003EA  6E36               	movwf	_ptr_llegada,c
  1496  0003EC  0E00               	movlw	high (_comando+6)
  1497  0003EE  6E37               	movwf	_ptr_llegada+1,c
  1498                           
  1499                           ;main.c: 174: if (*ptr_llegada == '-') {
  1500  0003F0  C036  FFD9         	movff	_ptr_llegada,fsr2l
  1501  0003F4  C037  FFDA         	movff	_ptr_llegada+1,fsr2h
  1502  0003F8  0E2D               	movlw	45
  1503  0003FA  18DE               	xorwf	postinc2,w,c
  1504  0003FC  A4D8               	btfss	status,2,c
  1505  0003FE  D088               	goto	l3924
  1506                           
  1507                           ;main.c: 175: ptr_llegada = &comando[7];
  1508  000400  0ECF               	movlw	low (_comando+7)
  1509  000402  6E36               	movwf	_ptr_llegada,c
  1510  000404  0E00               	movlw	high (_comando+7)
  1511  000406  6E37               	movwf	_ptr_llegada+1,c
  1512                           
  1513                           ;main.c: 176: while (*ptr_llegada != 0) {
  1514  000408  D011               	goto	l3898
  1515  00040A                     l3892:
  1516  00040A  FFFF               	dw	65535	; assembler added errata NOP
  1517                           
  1518                           ;main.c: 177: entrada[lleg] = *ptr_llegada;
  1519  00040C  C036  FFD9         	movff	_ptr_llegada,fsr2l
  1520  000410  C037  FFDA         	movff	_ptr_llegada+1,fsr2h
  1521  000414  0E1D               	movlw	low _entrada
  1522  000416  2438               	addwf	_lleg,w,c
  1523  000418  6EE1               	movwf	fsr1l,c
  1524  00041A  0E01               	movlw	high _entrada
  1525  00041C  2039               	addwfc	_lleg+1,w,c
  1526  00041E  6EE2               	movwf	fsr1h,c
  1527  000420  CFDF FFE7          	movff	indf2,indf1
  1528                           
  1529                           ;main.c: 178: ptr_llegada++;
  1530  000424  4A36               	infsnz	_ptr_llegada,f,c
  1531  000426  2A37               	incf	_ptr_llegada+1,f,c
  1532                           
  1533                           ;main.c: 179: lleg++;
  1534  000428  4A38               	infsnz	_lleg,f,c
  1535  00042A  2A39               	incf	_lleg+1,f,c
  1536  00042C                     l3898:
  1537  00042C  FFFF               	dw	65535	; assembler added errata NOP
  1538  00042E  C036  FFD9         	movff	_ptr_llegada,fsr2l
  1539  000432  C037  FFDA         	movff	_ptr_llegada+1,fsr2h
  1540  000436  50DF               	movf	indf2,w,c
  1541  000438  A4D8               	btfss	status,2,c
  1542  00043A  D7E7               	goto	l3892
  1543                           
  1544                           ;main.c: 180: }
  1545                           ;main.c: 181: lleg = 0;
  1546  00043C  0E00               	movlw	0
  1547  00043E  6E39               	movwf	_lleg+1,c
  1548  000440  0E00               	movlw	0
  1549  000442  6E38               	movwf	_lleg,c
  1550                           
  1551                           ;main.c: 182: tama1 = tama - 7;
  1552  000444  0EF9               	movlw	249
  1553  000446  2440               	addwf	_tama,w,c
  1554  000448  0100               	movlb	0	; () banked
  1555  00044A  6F95               	movwf	_tama1& (0+255),b
  1556  00044C  0EFF               	movlw	255
  1557  00044E  2041               	addwfc	_tama+1,w,c
  1558  000450  0100               	movlb	0	; () banked
  1559  000452  6F96               	movwf	(_tama1+1)& (0+255),b
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;main.c: 183: movimientoy = stringtolong(entrada, tama1);
  1563  000454  0E1D               	movlw	low _entrada
  1564  000456  0101               	movlb	1	; () banked
  1565  000458  6F00               	movwf	stringtolong@string& (0+255),b
  1566  00045A  0E01               	movlw	high _entrada
  1567  00045C  0101               	movlb	1	; () banked
  1568  00045E  6F01               	movwf	(stringtolong@string+1)& (0+255),b
  1569  000460  C095  F102         	movff	_tama1,stringtolong@tamanio
  1570  000464  C096  F103         	movff	_tama1+1,stringtolong@tamanio+1
  1571  000468  EC25  F00B         	call	_stringtolong	;wreg free
  1572  00046C  C100  F051         	movff	?_stringtolong,_movimientoy
  1573  000470  C101  F052         	movff	?_stringtolong+1,_movimientoy+1
  1574                           
  1575                           ;main.c: 184: stepsy = movimientoy*relaciony;
  1576  000474  C053  F103         	movff	_relaciony,___ftmul@f2
  1577  000478  C054  F104         	movff	_relaciony+1,___ftmul@f2+1
  1578  00047C  C055  F105         	movff	_relaciony+2,___ftmul@f2+2
  1579  000480  C051  F029         	movff	_movimientoy,___awtoft@c
  1580  000484  C052  F02A         	movff	_movimientoy+1,___awtoft@c+1
  1581  000488  ECB8  F00F         	call	___awtoft	;wreg free
  1582  00048C  C029  F100         	movff	?___awtoft,___ftmul@f1
  1583  000490  C02A  F101         	movff	?___awtoft+1,___ftmul@f1+1
  1584  000494  C02B  F102         	movff	?___awtoft+2,___ftmul@f1+2
  1585  000498  ECE7  F00B         	call	___ftmul	;wreg free
  1586  00049C  C100  F10C         	movff	?___ftmul,___fttol@f1
  1587  0004A0  C101  F10D         	movff	?___ftmul+1,___fttol@f1+1
  1588  0004A4  C102  F10E         	movff	?___ftmul+2,___fttol@f1+2
  1589  0004A8  EC3F  F00D         	call	___fttol	;wreg free
  1590  0004AC  C10C  F047         	movff	?___fttol,_stepsy
  1591  0004B0  C10D  F048         	movff	?___fttol+1,_stepsy+1
  1592  0004B4  C10E  F049         	movff	?___fttol+2,_stepsy+2
  1593  0004B8  C10F  F04A         	movff	?___fttol+3,_stepsy+3
  1594                           
  1595                           ;main.c: 185: movimientoy = movimientoy * (-1);
  1596  0004BC  6C51               	negf	_movimientoy,c
  1597  0004BE  1E52               	comf	_movimientoy+1,f,c
  1598  0004C0  B0D8               	btfsc	status,0,c
  1599  0004C2  2A52               	incf	_movimientoy+1,f,c
  1600                           
  1601                           ;main.c: 186: posiciony = posiciony + movimientoy;
  1602  0004C4  5051               	movf	_movimientoy,w,c
  1603  0004C6  2434               	addwf	_posiciony,w,c
  1604  0004C8  6E34               	movwf	_posiciony,c
  1605  0004CA  5052               	movf	_movimientoy+1,w,c
  1606  0004CC  2035               	addwfc	_posiciony+1,w,c
  1607  0004CE  6E35               	movwf	_posiciony+1,c
  1608                           
  1609                           ;main.c: 187: stepsy = (-1) * stepsy;
  1610  0004D0  1E4A               	comf	_stepsy+3,f,c
  1611  0004D2  1E49               	comf	_stepsy+2,f,c
  1612  0004D4  1E48               	comf	_stepsy+1,f,c
  1613  0004D6  6C47               	negf	_stepsy,c
  1614  0004D8  0E00               	movlw	0
  1615  0004DA  2248               	addwfc	_stepsy+1,f,c
  1616  0004DC  2249               	addwfc	_stepsy+2,f,c
  1617  0004DE  224A               	addwfc	_stepsy+3,f,c
  1618  0004E0                     l3914:
  1619  0004E0  FFFF               	dw	65535	; assembler added errata NOP
  1620                           
  1621                           ;main.c: 188: enter = 0;
  1622  0004E2  0E00               	movlw	0
  1623  0004E4  0100               	movlb	0	; () banked
  1624  0004E6  6FAE               	movwf	(_enter+1)& (0+255),b
  1625  0004E8  0E00               	movlw	0
  1626  0004EA  6FAD               	movwf	_enter& (0+255),b
  1627  0004EC  D712               	goto	l3860
  1628  0004EE                     l3918:
  1629  0004EE  FFFF               	dw	65535	; assembler added errata NOP
  1630                           
  1631                           ;main.c: 193: entrada[lleg] = *ptr_llegada;
  1632  0004F0  C036  FFD9         	movff	_ptr_llegada,fsr2l
  1633  0004F4  C037  FFDA         	movff	_ptr_llegada+1,fsr2h
  1634  0004F8  0E1D               	movlw	low _entrada
  1635  0004FA  2438               	addwf	_lleg,w,c
  1636  0004FC  6EE1               	movwf	fsr1l,c
  1637  0004FE  0E01               	movlw	high _entrada
  1638  000500  2039               	addwfc	_lleg+1,w,c
  1639  000502  6EE2               	movwf	fsr1h,c
  1640  000504  CFDF FFE7          	movff	indf2,indf1
  1641                           
  1642                           ;main.c: 194: ptr_llegada++;
  1643  000508  4A36               	infsnz	_ptr_llegada,f,c
  1644  00050A  2A37               	incf	_ptr_llegada+1,f,c
  1645                           
  1646                           ;main.c: 195: lleg++;
  1647  00050C  4A38               	infsnz	_lleg,f,c
  1648  00050E  2A39               	incf	_lleg+1,f,c
  1649  000510                     l3924:
  1650  000510  FFFF               	dw	65535	; assembler added errata NOP
  1651  000512  C036  FFD9         	movff	_ptr_llegada,fsr2l
  1652  000516  C037  FFDA         	movff	_ptr_llegada+1,fsr2h
  1653  00051A  50DF               	movf	indf2,w,c
  1654  00051C  A4D8               	btfss	status,2,c
  1655  00051E  D7E7               	goto	l3918
  1656                           
  1657                           ;main.c: 196: }
  1658                           ;main.c: 197: lleg = 0;
  1659  000520  0E00               	movlw	0
  1660  000522  6E39               	movwf	_lleg+1,c
  1661  000524  0E00               	movlw	0
  1662  000526  6E38               	movwf	_lleg,c
  1663                           
  1664                           ;main.c: 198: tama2 = tama - 6;
  1665  000528  0EFA               	movlw	250
  1666  00052A  2440               	addwf	_tama,w,c
  1667  00052C  0100               	movlb	0	; () banked
  1668  00052E  6F93               	movwf	_tama2& (0+255),b
  1669  000530  0EFF               	movlw	255
  1670  000532  2041               	addwfc	_tama+1,w,c
  1671  000534  0100               	movlb	0	; () banked
  1672  000536  6F94               	movwf	(_tama2+1)& (0+255),b
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;main.c: 199: movimientoy = stringtolong(entrada, tama2);
  1676  000538  0E1D               	movlw	low _entrada
  1677  00053A  0101               	movlb	1	; () banked
  1678  00053C  6F00               	movwf	stringtolong@string& (0+255),b
  1679  00053E  0E01               	movlw	high _entrada
  1680  000540  0101               	movlb	1	; () banked
  1681  000542  6F01               	movwf	(stringtolong@string+1)& (0+255),b
  1682  000544  C093  F102         	movff	_tama2,stringtolong@tamanio
  1683  000548  C094  F103         	movff	_tama2+1,stringtolong@tamanio+1
  1684  00054C  EC25  F00B         	call	_stringtolong	;wreg free
  1685  000550  C100  F051         	movff	?_stringtolong,_movimientoy
  1686  000554  C101  F052         	movff	?_stringtolong+1,_movimientoy+1
  1687                           
  1688                           ;main.c: 200: posiciony = posiciony + movimientoy;
  1689  000558  5051               	movf	_movimientoy,w,c
  1690  00055A  2434               	addwf	_posiciony,w,c
  1691  00055C  6E34               	movwf	_posiciony,c
  1692  00055E  5052               	movf	_movimientoy+1,w,c
  1693  000560  2035               	addwfc	_posiciony+1,w,c
  1694  000562  6E35               	movwf	_posiciony+1,c
  1695                           
  1696                           ;main.c: 201: stepsy = movimientoy*relaciony;
  1697  000564  C053  F103         	movff	_relaciony,___ftmul@f2
  1698  000568  C054  F104         	movff	_relaciony+1,___ftmul@f2+1
  1699  00056C  C055  F105         	movff	_relaciony+2,___ftmul@f2+2
  1700  000570  C051  F029         	movff	_movimientoy,___awtoft@c
  1701  000574  C052  F02A         	movff	_movimientoy+1,___awtoft@c+1
  1702  000578  ECB8  F00F         	call	___awtoft	;wreg free
  1703  00057C  C029  F100         	movff	?___awtoft,___ftmul@f1
  1704  000580  C02A  F101         	movff	?___awtoft+1,___ftmul@f1+1
  1705  000584  C02B  F102         	movff	?___awtoft+2,___ftmul@f1+2
  1706  000588  ECE7  F00B         	call	___ftmul	;wreg free
  1707  00058C  C100  F10C         	movff	?___ftmul,___fttol@f1
  1708  000590  C101  F10D         	movff	?___ftmul+1,___fttol@f1+1
  1709  000594  C102  F10E         	movff	?___ftmul+2,___fttol@f1+2
  1710  000598  EC3F  F00D         	call	___fttol	;wreg free
  1711  00059C  C10C  F047         	movff	?___fttol,_stepsy
  1712  0005A0  C10D  F048         	movff	?___fttol+1,_stepsy+1
  1713  0005A4  C10E  F049         	movff	?___fttol+2,_stepsy+2
  1714  0005A8  C10F  F04A         	movff	?___fttol+3,_stepsy+3
  1715                           
  1716                           ;main.c: 202: enter = 0;
  1717  0005AC  0E00               	movlw	0
  1718  0005AE  0100               	movlb	0	; () banked
  1719  0005B0  6FAE               	movwf	(_enter+1)& (0+255),b
  1720  0005B2  0E00               	movlw	0
  1721  0005B4  6FAD               	movwf	_enter& (0+255),b
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;main.c: 203: tama = 0;
  1725  0005B6  0E00               	movlw	0
  1726  0005B8  6E41               	movwf	_tama+1,c
  1727  0005BA  0E00               	movlw	0
  1728  0005BC  6E40               	movwf	_tama,c
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;main.c: 204: __nop();
  1732  0005BE  F000               	nop	
  1733                           
  1734                           ;main.c: 205: }
  1735                           ;main.c: 206: } else if (infotrue == 0) {
  1736  0005C0  D113               	goto	l221
  1737  0005C2                     l3942:
  1738  0005C2  FFFF               	dw	65535	; assembler added errata NOP
  1739  0005C4  0100               	movlb	0	; () banked
  1740  0005C6  51F9               	movf	_infotrue& (0+255),w,b
  1741  0005C8  0100               	movlb	0	; () banked
  1742  0005CA  11FA               	iorwf	(_infotrue+1)& (0+255),w,b
  1743  0005CC  A4D8               	btfss	status,2,c
  1744  0005CE  D036               	goto	l3952
  1745                           
  1746                           ; BSR set to: 0
  1747                           ;main.c: 207: sprintf(salida, "posicion en eje x : %d ", posicionx);
  1748  0005D0  0EAF               	movlw	low _salida
  1749  0005D2  0101               	movlb	1	; () banked
  1750  0005D4  6F00               	movwf	sprintf@sp& (0+255),b
  1751  0005D6  0E00               	movlw	high _salida
  1752  0005D8  0101               	movlb	1	; () banked
  1753  0005DA  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  1754  0005DC  0ECE               	movlw	low STR_1
  1755  0005DE  0101               	movlb	1	; () banked
  1756  0005E0  6F02               	movwf	sprintf@f& (0+255),b
  1757  0005E2  0E7F               	movlw	high STR_1
  1758  0005E4  0101               	movlb	1	; () banked
  1759  0005E6  6F03               	movwf	(sprintf@f+1)& (0+255),b
  1760  0005E8  C032  F104         	movff	_posicionx,?_sprintf+4
  1761  0005EC  C033  F105         	movff	_posicionx+1,?_sprintf+5
  1762  0005F0  EC55  F00A         	call	_sprintf	;wreg free
  1763                           
  1764                           ;main.c: 208: enviarTrama(salida);
  1765  0005F4  0EAF               	movlw	low _salida
  1766  0005F6  6E21               	movwf	enviarTrama@datos,c
  1767  0005F8  0E00               	movlw	high _salida
  1768  0005FA  6E22               	movwf	enviarTrama@datos+1,c
  1769  0005FC  EC3B  F00E         	call	_enviarTrama	;wreg free
  1770                           
  1771                           ;main.c: 209: sprintf(salida, "posicion en eje y : %d ", posiciony);
  1772  000600  0EAF               	movlw	low _salida
  1773  000602  0101               	movlb	1	; () banked
  1774  000604  6F00               	movwf	sprintf@sp& (0+255),b
  1775  000606  0E00               	movlw	high _salida
  1776  000608  0101               	movlb	1	; () banked
  1777  00060A  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  1778  00060C  0EE6               	movlw	low STR_2
  1779  00060E  0101               	movlb	1	; () banked
  1780  000610  6F02               	movwf	sprintf@f& (0+255),b
  1781  000612  0E7F               	movlw	high STR_2
  1782  000614  0101               	movlb	1	; () banked
  1783  000616  6F03               	movwf	(sprintf@f+1)& (0+255),b
  1784  000618  C034  F104         	movff	_posiciony,?_sprintf+4
  1785  00061C  C035  F105         	movff	_posiciony+1,?_sprintf+5
  1786  000620  EC55  F00A         	call	_sprintf	;wreg free
  1787                           
  1788                           ;main.c: 210: enviarTrama(salida);
  1789  000624  0EAF               	movlw	low _salida
  1790  000626  6E21               	movwf	enviarTrama@datos,c
  1791  000628  0E00               	movlw	high _salida
  1792  00062A  6E22               	movwf	enviarTrama@datos+1,c
  1793  00062C  EC3B  F00E         	call	_enviarTrama	;wreg free
  1794                           
  1795                           ;main.c: 211: enter = 0;
  1796  000630  0E00               	movlw	0
  1797  000632  0100               	movlb	0	; () banked
  1798  000634  6FAE               	movwf	(_enter+1)& (0+255),b
  1799  000636  0E00               	movlw	0
  1800  000638  6FAD               	movwf	_enter& (0+255),b
  1801                           
  1802                           ;main.c: 212: }else if(devolvertrue == 0){
  1803  00063A  D0D6               	goto	l221
  1804  00063C                     l3952:
  1805  00063C  FFFF               	dw	65535	; assembler added errata NOP
  1806                           
  1807                           ; BSR set to: 0
  1808  00063E  0100               	movlb	0	; () banked
  1809  000640  5197               	movf	_devolvertrue& (0+255),w,b
  1810  000642  0100               	movlb	0	; () banked
  1811  000644  1198               	iorwf	(_devolvertrue+1)& (0+255),w,b
  1812  000646  A4D8               	btfss	status,2,c
  1813  000648  D0CF               	goto	l221
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;main.c: 213: stepsy_auxiliar = posiciony*relaciony;
  1817  00064A  C053  F103         	movff	_relaciony,___ftmul@f2
  1818  00064E  C054  F104         	movff	_relaciony+1,___ftmul@f2+1
  1819  000652  C055  F105         	movff	_relaciony+2,___ftmul@f2+2
  1820  000656  C034  F029         	movff	_posiciony,___awtoft@c
  1821  00065A  C035  F02A         	movff	_posiciony+1,___awtoft@c+1
  1822  00065E  ECB8  F00F         	call	___awtoft	;wreg free
  1823  000662  C029  F100         	movff	?___awtoft,___ftmul@f1
  1824  000666  C02A  F101         	movff	?___awtoft+1,___ftmul@f1+1
  1825  00066A  C02B  F102         	movff	?___awtoft+2,___ftmul@f1+2
  1826  00066E  ECE7  F00B         	call	___ftmul	;wreg free
  1827  000672  C100  F10C         	movff	?___ftmul,___fttol@f1
  1828  000676  C101  F10D         	movff	?___ftmul+1,___fttol@f1+1
  1829  00067A  C102  F10E         	movff	?___ftmul+2,___fttol@f1+2
  1830  00067E  EC3F  F00D         	call	___fttol	;wreg free
  1831  000682  C10C  F043         	movff	?___fttol,_stepsy_auxiliar
  1832  000686  C10D  F044         	movff	?___fttol+1,_stepsy_auxiliar+1
  1833  00068A  C10E  F045         	movff	?___fttol+2,_stepsy_auxiliar+2
  1834  00068E  C10F  F046         	movff	?___fttol+3,_stepsy_auxiliar+3
  1835                           
  1836                           ;main.c: 214: stepsy_auxiliar = stepsy_auxiliar * (-1);
  1837  000692  1E46               	comf	_stepsy_auxiliar+3,f,c
  1838  000694  1E45               	comf	_stepsy_auxiliar+2,f,c
  1839  000696  1E44               	comf	_stepsy_auxiliar+1,f,c
  1840  000698  6C43               	negf	_stepsy_auxiliar,c
  1841  00069A  0E00               	movlw	0
  1842  00069C  2244               	addwfc	_stepsy_auxiliar+1,f,c
  1843  00069E  2245               	addwfc	_stepsy_auxiliar+2,f,c
  1844  0006A0  2246               	addwfc	_stepsy_auxiliar+3,f,c
  1845                           
  1846                           ;main.c: 215: ejeynegativo(stepsy_auxiliar);
  1847  0006A2  C043  F021         	movff	_stepsy_auxiliar,ejeynegativo@paso4
  1848  0006A6  C044  F022         	movff	_stepsy_auxiliar+1,ejeynegativo@paso4+1
  1849  0006AA  C045  F023         	movff	_stepsy_auxiliar+2,ejeynegativo@paso4+2
  1850  0006AE  C046  F024         	movff	_stepsy_auxiliar+3,ejeynegativo@paso4+3
  1851  0006B2  EC39  F008         	call	_ejeynegativo	;wreg free
  1852                           
  1853                           ;main.c: 216: apagarM2();
  1854  0006B6  ECD7  F00F         	call	_apagarM2	;wreg free
  1855                           
  1856                           ;main.c: 217: stepcount = 0;
  1857  0006BA  0E00               	movlw	0
  1858  0006BC  6E2E               	movwf	_stepcount,c
  1859  0006BE  0E00               	movlw	0
  1860  0006C0  6E2F               	movwf	_stepcount+1,c
  1861  0006C2  0E00               	movlw	0
  1862  0006C4  6E30               	movwf	_stepcount+2,c
  1863  0006C6  0E00               	movlw	0
  1864  0006C8  6E31               	movwf	_stepcount+3,c
  1865                           
  1866                           ;main.c: 218: stepsy_auxiliar = 0;
  1867  0006CA  0E00               	movlw	0
  1868  0006CC  6E43               	movwf	_stepsy_auxiliar,c
  1869  0006CE  0E00               	movlw	0
  1870  0006D0  6E44               	movwf	_stepsy_auxiliar+1,c
  1871  0006D2  0E00               	movlw	0
  1872  0006D4  6E45               	movwf	_stepsy_auxiliar+2,c
  1873  0006D6  0E00               	movlw	0
  1874  0006D8  6E46               	movwf	_stepsy_auxiliar+3,c
  1875                           
  1876                           ;main.c: 219: posiciony = 0 ;
  1877  0006DA  0E00               	movlw	0
  1878  0006DC  6E35               	movwf	_posiciony+1,c
  1879  0006DE  0E00               	movlw	0
  1880  0006E0  6E34               	movwf	_posiciony,c
  1881                           
  1882                           ;main.c: 220: stepsx_auxiliar = posicionx*relacionx;
  1883  0006E2  C056  F103         	movff	_relacionx,___ftmul@f2
  1884  0006E6  C057  F104         	movff	_relacionx+1,___ftmul@f2+1
  1885  0006EA  C058  F105         	movff	_relacionx+2,___ftmul@f2+2
  1886  0006EE  C032  F029         	movff	_posicionx,___awtoft@c
  1887  0006F2  C033  F02A         	movff	_posicionx+1,___awtoft@c+1
  1888  0006F6  ECB8  F00F         	call	___awtoft	;wreg free
  1889  0006FA  C029  F100         	movff	?___awtoft,___ftmul@f1
  1890  0006FE  C02A  F101         	movff	?___awtoft+1,___ftmul@f1+1
  1891  000702  C02B  F102         	movff	?___awtoft+2,___ftmul@f1+2
  1892  000706  ECE7  F00B         	call	___ftmul	;wreg free
  1893  00070A  C100  F10C         	movff	?___ftmul,___fttol@f1
  1894  00070E  C101  F10D         	movff	?___ftmul+1,___fttol@f1+1
  1895  000712  C102  F10E         	movff	?___ftmul+2,___fttol@f1+2
  1896  000716  EC3F  F00D         	call	___fttol	;wreg free
  1897  00071A  C10C  F0F5         	movff	?___fttol,_stepsx_auxiliar
  1898  00071E  C10D  F0F6         	movff	?___fttol+1,_stepsx_auxiliar+1
  1899  000722  C10E  F0F7         	movff	?___fttol+2,_stepsx_auxiliar+2
  1900  000726  C10F  F0F8         	movff	?___fttol+3,_stepsx_auxiliar+3
  1901                           
  1902                           ;main.c: 221: stepsx_auxiliar = stepsx_auxiliar * (-1);
  1903  00072A  0100               	movlb	0	; () banked
  1904  00072C  1FF8               	comf	(_stepsx_auxiliar+3)& (0+255),f,b
  1905  00072E  1FF7               	comf	(_stepsx_auxiliar+2)& (0+255),f,b
  1906  000730  1FF6               	comf	(_stepsx_auxiliar+1)& (0+255),f,b
  1907  000732  6DF5               	negf	_stepsx_auxiliar& (0+255),b
  1908  000734  0E00               	movlw	0
  1909  000736  23F6               	addwfc	(_stepsx_auxiliar+1)& (0+255),f,b
  1910  000738  23F7               	addwfc	(_stepsx_auxiliar+2)& (0+255),f,b
  1911  00073A  23F8               	addwfc	(_stepsx_auxiliar+3)& (0+255),f,b
  1912                           
  1913                           ; BSR set to: 0
  1914                           ;main.c: 222: ejexnegativo(stepsx_auxiliar);
  1915  00073C  C0F5  F021         	movff	_stepsx_auxiliar,ejexnegativo@paso2
  1916  000740  C0F6  F022         	movff	_stepsx_auxiliar+1,ejexnegativo@paso2+1
  1917  000744  C0F7  F023         	movff	_stepsx_auxiliar+2,ejexnegativo@paso2+2
  1918  000748  C0F8  F024         	movff	_stepsx_auxiliar+3,ejexnegativo@paso2+3
  1919  00074C  EC47  F009         	call	_ejexnegativo	;wreg free
  1920                           
  1921                           ;main.c: 223: apagarM2();
  1922  000750  ECD7  F00F         	call	_apagarM2	;wreg free
  1923                           
  1924                           ;main.c: 224: stepcount = 0;
  1925  000754  0E00               	movlw	0
  1926  000756  6E2E               	movwf	_stepcount,c
  1927  000758  0E00               	movlw	0
  1928  00075A  6E2F               	movwf	_stepcount+1,c
  1929  00075C  0E00               	movlw	0
  1930  00075E  6E30               	movwf	_stepcount+2,c
  1931  000760  0E00               	movlw	0
  1932  000762  6E31               	movwf	_stepcount+3,c
  1933                           
  1934                           ;main.c: 225: stepsx_auxiliar = 0;
  1935  000764  0E00               	movlw	0
  1936  000766  0100               	movlb	0	; () banked
  1937  000768  6FF5               	movwf	_stepsx_auxiliar& (0+255),b
  1938  00076A  0E00               	movlw	0
  1939  00076C  6FF6               	movwf	(_stepsx_auxiliar+1)& (0+255),b
  1940  00076E  0E00               	movlw	0
  1941  000770  6FF7               	movwf	(_stepsx_auxiliar+2)& (0+255),b
  1942  000772  0E00               	movlw	0
  1943  000774  6FF8               	movwf	(_stepsx_auxiliar+3)& (0+255),b
  1944                           
  1945                           ;main.c: 226: enter = 0 ;
  1946  000776  0E00               	movlw	0
  1947  000778  0100               	movlb	0	; () banked
  1948  00077A  6FAE               	movwf	(_enter+1)& (0+255),b
  1949  00077C  0E00               	movlw	0
  1950  00077E  6FAD               	movwf	_enter& (0+255),b
  1951                           
  1952                           ;main.c: 227: posiciony = 0;
  1953  000780  0E00               	movlw	0
  1954  000782  6E35               	movwf	_posiciony+1,c
  1955  000784  0E00               	movlw	0
  1956  000786  6E34               	movwf	_posiciony,c
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;main.c: 228: sprintf(salida, "posicion en eje x : %d ", posicionx);
  1960  000788  0EAF               	movlw	low _salida
  1961  00078A  0101               	movlb	1	; () banked
  1962  00078C  6F00               	movwf	sprintf@sp& (0+255),b
  1963  00078E  0E00               	movlw	high _salida
  1964  000790  0101               	movlb	1	; () banked
  1965  000792  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  1966  000794  0ECE               	movlw	low STR_1
  1967  000796  0101               	movlb	1	; () banked
  1968  000798  6F02               	movwf	sprintf@f& (0+255),b
  1969  00079A  0E7F               	movlw	high STR_1
  1970  00079C  0101               	movlb	1	; () banked
  1971  00079E  6F03               	movwf	(sprintf@f+1)& (0+255),b
  1972  0007A0  C032  F104         	movff	_posicionx,?_sprintf+4
  1973  0007A4  C033  F105         	movff	_posicionx+1,?_sprintf+5
  1974  0007A8  EC55  F00A         	call	_sprintf	;wreg free
  1975                           
  1976                           ;main.c: 229: enviarTrama(salida);
  1977  0007AC  0EAF               	movlw	low _salida
  1978  0007AE  6E21               	movwf	enviarTrama@datos,c
  1979  0007B0  0E00               	movlw	high _salida
  1980  0007B2  6E22               	movwf	enviarTrama@datos+1,c
  1981  0007B4  EC3B  F00E         	call	_enviarTrama	;wreg free
  1982                           
  1983                           ;main.c: 230: sprintf(salida, "posicion en eje y : %d ", posiciony);
  1984  0007B8  0EAF               	movlw	low _salida
  1985  0007BA  0101               	movlb	1	; () banked
  1986  0007BC  6F00               	movwf	sprintf@sp& (0+255),b
  1987  0007BE  0E00               	movlw	high _salida
  1988  0007C0  0101               	movlb	1	; () banked
  1989  0007C2  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  1990  0007C4  0EE6               	movlw	low STR_2
  1991  0007C6  0101               	movlb	1	; () banked
  1992  0007C8  6F02               	movwf	sprintf@f& (0+255),b
  1993  0007CA  0E7F               	movlw	high STR_2
  1994  0007CC  0101               	movlb	1	; () banked
  1995  0007CE  6F03               	movwf	(sprintf@f+1)& (0+255),b
  1996  0007D0  C034  F104         	movff	_posiciony,?_sprintf+4
  1997  0007D4  C035  F105         	movff	_posiciony+1,?_sprintf+5
  1998  0007D8  EC55  F00A         	call	_sprintf	;wreg free
  1999                           
  2000                           ;main.c: 231: enviarTrama(salida);
  2001  0007DC  0EAF               	movlw	low _salida
  2002  0007DE  6E21               	movwf	enviarTrama@datos,c
  2003  0007E0  0E00               	movlw	high _salida
  2004  0007E2  6E22               	movwf	enviarTrama@datos+1,c
  2005  0007E4  EC3B  F00E         	call	_enviarTrama	;wreg free
  2006  0007E8                     l221:
  2007  0007E8  FFFF               	dw	65535	; assembler added errata NOP
  2008                           
  2009                           ;main.c: 232: }
  2010                           ;main.c: 233: for (i = 0; i < 25; i++) {
  2011  0007EA  0E00               	movlw	0
  2012  0007EC  6E3B               	movwf	_i+1,c
  2013  0007EE  0E00               	movlw	0
  2014  0007F0  6E3A               	movwf	_i,c
  2015  0007F2                     l3984:
  2016  0007F2  FFFF               	dw	65535	; assembler added errata NOP
  2017  0007F4  BE3B               	btfsc	_i+1,7,c
  2018  0007F6  D006               	goto	l3988
  2019  0007F8  503B               	movf	_i+1,w,c
  2020  0007FA  E110               	bnz	l3994
  2021  0007FC  0E19               	movlw	25
  2022  0007FE  5C3A               	subwf	_i,w,c
  2023  000800  B0D8               	btfsc	status,0,c
  2024  000802  D00C               	goto	l3994
  2025  000804                     l3988:
  2026  000804  FFFF               	dw	65535	; assembler added errata NOP
  2027                           
  2028                           ;main.c: 234: comando[i] = '\0';
  2029  000806  0EC8               	movlw	low _comando
  2030  000808  243A               	addwf	_i,w,c
  2031  00080A  6ED9               	movwf	fsr2l,c
  2032  00080C  0E00               	movlw	high _comando
  2033  00080E  203B               	addwfc	_i+1,w,c
  2034  000810  6EDA               	movwf	fsr2h,c
  2035  000812  0E00               	movlw	0
  2036  000814  6EDF               	movwf	indf2,c
  2037  000816  4A3A               	infsnz	_i,f,c
  2038  000818  2A3B               	incf	_i+1,f,c
  2039  00081A  D7EB               	goto	l3984
  2040  00081C                     l3994:
  2041  00081C  FFFF               	dw	65535	; assembler added errata NOP
  2042                           
  2043                           ;main.c: 235: }
  2044                           ;main.c: 236: for (i = 0; i < 25; i++) {
  2045  00081E  0E00               	movlw	0
  2046  000820  6E3B               	movwf	_i+1,c
  2047  000822  0E00               	movlw	0
  2048  000824  6E3A               	movwf	_i,c
  2049  000826                     l3996:
  2050  000826  FFFF               	dw	65535	; assembler added errata NOP
  2051  000828  BE3B               	btfsc	_i+1,7,c
  2052  00082A  D006               	goto	l4000
  2053  00082C  503B               	movf	_i+1,w,c
  2054  00082E  E110               	bnz	l4006
  2055  000830  0E19               	movlw	25
  2056  000832  5C3A               	subwf	_i,w,c
  2057  000834  B0D8               	btfsc	status,0,c
  2058  000836  D00C               	goto	l4006
  2059  000838                     l4000:
  2060  000838  FFFF               	dw	65535	; assembler added errata NOP
  2061                           
  2062                           ;main.c: 237: entrada[i] = '\0';
  2063  00083A  0E1D               	movlw	low _entrada
  2064  00083C  243A               	addwf	_i,w,c
  2065  00083E  6ED9               	movwf	fsr2l,c
  2066  000840  0E01               	movlw	high _entrada
  2067  000842  203B               	addwfc	_i+1,w,c
  2068  000844  6EDA               	movwf	fsr2h,c
  2069  000846  0E00               	movlw	0
  2070  000848  6EDF               	movwf	indf2,c
  2071  00084A  4A3A               	infsnz	_i,f,c
  2072  00084C  2A3B               	incf	_i+1,f,c
  2073  00084E  D7EB               	goto	l3996
  2074  000850                     l4006:
  2075  000850  FFFF               	dw	65535	; assembler added errata NOP
  2076                           
  2077                           ;main.c: 238: }
  2078                           ;main.c: 241: }
  2079                           ;main.c: 245: if (xtrue == 0) {
  2080  000852  505B               	movf	_xtrue,w,c
  2081  000854  105C               	iorwf	_xtrue+1,w,c
  2082  000856  A4D8               	btfss	status,2,c
  2083  000858  D12C               	goto	l239
  2084                           
  2085                           ;main.c: 246: if (posicionx >= 0 && posicionx <= 20) {
  2086  00085A  BE33               	btfsc	_posicionx+1,7,c
  2087  00085C  D103               	goto	l4066
  2088  00085E  BE33               	btfsc	_posicionx+1,7,c
  2089  000860  D006               	goto	l4012
  2090  000862  5033               	movf	_posicionx+1,w,c
  2091  000864  E103               	bnz	u3271
  2092  000866  0E15               	movlw	21
  2093  000868  5C32               	subwf	_posicionx,w,c
  2094  00086A  B0D8               	btfsc	status,0,c
  2095  00086C                     u3271:
  2096  00086C  D0FB               	goto	l4066
  2097  00086E                     l4012:
  2098  00086E  FFFF               	dw	65535	; assembler added errata NOP
  2099                           
  2100                           ;main.c: 247: stepsy_auxiliar = posiciony*relaciony;
  2101  000870  C053  F103         	movff	_relaciony,___ftmul@f2
  2102  000874  C054  F104         	movff	_relaciony+1,___ftmul@f2+1
  2103  000878  C055  F105         	movff	_relaciony+2,___ftmul@f2+2
  2104  00087C  C034  F029         	movff	_posiciony,___awtoft@c
  2105  000880  C035  F02A         	movff	_posiciony+1,___awtoft@c+1
  2106  000884  ECB8  F00F         	call	___awtoft	;wreg free
  2107  000888  C029  F100         	movff	?___awtoft,___ftmul@f1
  2108  00088C  C02A  F101         	movff	?___awtoft+1,___ftmul@f1+1
  2109  000890  C02B  F102         	movff	?___awtoft+2,___ftmul@f1+2
  2110  000894  ECE7  F00B         	call	___ftmul	;wreg free
  2111  000898  C100  F10C         	movff	?___ftmul,___fttol@f1
  2112  00089C  C101  F10D         	movff	?___ftmul+1,___fttol@f1+1
  2113  0008A0  C102  F10E         	movff	?___ftmul+2,___fttol@f1+2
  2114  0008A4  EC3F  F00D         	call	___fttol	;wreg free
  2115  0008A8  C10C  F043         	movff	?___fttol,_stepsy_auxiliar
  2116  0008AC  C10D  F044         	movff	?___fttol+1,_stepsy_auxiliar+1
  2117  0008B0  C10E  F045         	movff	?___fttol+2,_stepsy_auxiliar+2
  2118  0008B4  C10F  F046         	movff	?___fttol+3,_stepsy_auxiliar+3
  2119                           
  2120                           ;main.c: 248: stepsy_auxiliar = stepsy_auxiliar * (-1);
  2121  0008B8  1E46               	comf	_stepsy_auxiliar+3,f,c
  2122  0008BA  1E45               	comf	_stepsy_auxiliar+2,f,c
  2123  0008BC  1E44               	comf	_stepsy_auxiliar+1,f,c
  2124  0008BE  6C43               	negf	_stepsy_auxiliar,c
  2125  0008C0  0E00               	movlw	0
  2126  0008C2  2244               	addwfc	_stepsy_auxiliar+1,f,c
  2127  0008C4  2245               	addwfc	_stepsy_auxiliar+2,f,c
  2128  0008C6  2246               	addwfc	_stepsy_auxiliar+3,f,c
  2129                           
  2130                           ;main.c: 249: ejeynegativo(stepsy_auxiliar);
  2131  0008C8  C043  F021         	movff	_stepsy_auxiliar,ejeynegativo@paso4
  2132  0008CC  C044  F022         	movff	_stepsy_auxiliar+1,ejeynegativo@paso4+1
  2133  0008D0  C045  F023         	movff	_stepsy_auxiliar+2,ejeynegativo@paso4+2
  2134  0008D4  C046  F024         	movff	_stepsy_auxiliar+3,ejeynegativo@paso4+3
  2135  0008D8  EC39  F008         	call	_ejeynegativo	;wreg free
  2136                           
  2137                           ;main.c: 250: apagarM2();
  2138  0008DC  ECD7  F00F         	call	_apagarM2	;wreg free
  2139                           
  2140                           ;main.c: 251: stepcount = 0;
  2141  0008E0  0E00               	movlw	0
  2142  0008E2  6E2E               	movwf	_stepcount,c
  2143  0008E4  0E00               	movlw	0
  2144  0008E6  6E2F               	movwf	_stepcount+1,c
  2145  0008E8  0E00               	movlw	0
  2146  0008EA  6E30               	movwf	_stepcount+2,c
  2147  0008EC  0E00               	movlw	0
  2148  0008EE  6E31               	movwf	_stepcount+3,c
  2149                           
  2150                           ;main.c: 252: stepsy_auxiliar = 0;
  2151  0008F0  0E00               	movlw	0
  2152  0008F2  6E43               	movwf	_stepsy_auxiliar,c
  2153  0008F4  0E00               	movlw	0
  2154  0008F6  6E44               	movwf	_stepsy_auxiliar+1,c
  2155  0008F8  0E00               	movlw	0
  2156  0008FA  6E45               	movwf	_stepsy_auxiliar+2,c
  2157  0008FC  0E00               	movlw	0
  2158  0008FE  6E46               	movwf	_stepsy_auxiliar+3,c
  2159                           
  2160                           ;main.c: 255: if (stepsx > 0) {
  2161  000900  BE4E               	btfsc	_stepsx+3,7,c
  2162  000902  D02D               	goto	l4038
  2163  000904  504E               	movf	_stepsx+3,w,c
  2164  000906  104D               	iorwf	_stepsx+2,w,c
  2165  000908  104C               	iorwf	_stepsx+1,w,c
  2166  00090A  E103               	bnz	u3280
  2167  00090C  044B               	decf	_stepsx,w,c
  2168  00090E  A0D8               	btfss	status,0,c
  2169  000910  D026               	goto	l4038
  2170  000912                     u3280:
  2171                           
  2172                           ;main.c: 257: ejexpositivo(stepsx);
  2173  000912  C04B  F021         	movff	_stepsx,ejexpositivo@paso
  2174  000916  C04C  F022         	movff	_stepsx+1,ejexpositivo@paso+1
  2175  00091A  C04D  F023         	movff	_stepsx+2,ejexpositivo@paso+2
  2176  00091E  C04E  F024         	movff	_stepsx+3,ejexpositivo@paso+3
  2177  000922  EC25  F007         	call	_ejexpositivo	;wreg free
  2178                           
  2179                           ;main.c: 259: apagarM1();
  2180  000926  ECE4  F00F         	call	_apagarM1	;wreg free
  2181                           
  2182                           ;main.c: 260: stepcount = 0;
  2183  00092A  0E00               	movlw	0
  2184  00092C  6E2E               	movwf	_stepcount,c
  2185  00092E  0E00               	movlw	0
  2186  000930  6E2F               	movwf	_stepcount+1,c
  2187  000932  0E00               	movlw	0
  2188  000934  6E30               	movwf	_stepcount+2,c
  2189  000936  0E00               	movlw	0
  2190  000938  6E31               	movwf	_stepcount+3,c
  2191                           
  2192                           ;main.c: 261: stepsx = 0;
  2193  00093A  0E00               	movlw	0
  2194  00093C  6E4B               	movwf	_stepsx,c
  2195  00093E  0E00               	movlw	0
  2196  000940  6E4C               	movwf	_stepsx+1,c
  2197  000942  0E00               	movlw	0
  2198  000944  6E4D               	movwf	_stepsx+2,c
  2199  000946  0E00               	movlw	0
  2200  000948  6E4E               	movwf	_stepsx+3,c
  2201                           
  2202                           ;main.c: 262: movimiento = 0;
  2203  00094A  0E00               	movlw	0
  2204  00094C  0100               	movlb	0	; () banked
  2205  00094E  6FAA               	movwf	(_movimiento+1)& (0+255),b
  2206  000950  0E00               	movlw	0
  2207  000952  6FA9               	movwf	_movimiento& (0+255),b
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;main.c: 263: movimientox = 0;
  2211  000954  0E00               	movlw	0
  2212  000956  6E50               	movwf	_movimientox+1,c
  2213  000958  0E00               	movlw	0
  2214  00095A  6E4F               	movwf	_movimientox,c
  2215                           
  2216                           ;main.c: 272: } else if (stepsx < 0) {
  2217  00095C  D024               	goto	l4050
  2218  00095E                     l4038:
  2219  00095E  FFFF               	dw	65535	; assembler added errata NOP
  2220  000960  AE4E               	btfss	_stepsx+3,7,c
  2221  000962  D021               	goto	l4050
  2222                           
  2223                           ;main.c: 274: ejexnegativo(stepsx);
  2224  000964  C04B  F021         	movff	_stepsx,ejexnegativo@paso2
  2225  000968  C04C  F022         	movff	_stepsx+1,ejexnegativo@paso2+1
  2226  00096C  C04D  F023         	movff	_stepsx+2,ejexnegativo@paso2+2
  2227  000970  C04E  F024         	movff	_stepsx+3,ejexnegativo@paso2+3
  2228  000974  EC47  F009         	call	_ejexnegativo	;wreg free
  2229                           
  2230                           ;main.c: 276: apagarM1();
  2231  000978  ECE4  F00F         	call	_apagarM1	;wreg free
  2232                           
  2233                           ;main.c: 277: stepcount = 0;
  2234  00097C  0E00               	movlw	0
  2235  00097E  6E2E               	movwf	_stepcount,c
  2236  000980  0E00               	movlw	0
  2237  000982  6E2F               	movwf	_stepcount+1,c
  2238  000984  0E00               	movlw	0
  2239  000986  6E30               	movwf	_stepcount+2,c
  2240  000988  0E00               	movlw	0
  2241  00098A  6E31               	movwf	_stepcount+3,c
  2242                           
  2243                           ;main.c: 278: stepsx = 0;
  2244  00098C  0E00               	movlw	0
  2245  00098E  6E4B               	movwf	_stepsx,c
  2246  000990  0E00               	movlw	0
  2247  000992  6E4C               	movwf	_stepsx+1,c
  2248  000994  0E00               	movlw	0
  2249  000996  6E4D               	movwf	_stepsx+2,c
  2250  000998  0E00               	movlw	0
  2251  00099A  6E4E               	movwf	_stepsx+3,c
  2252                           
  2253                           ;main.c: 279: movimiento = 0;
  2254  00099C  0E00               	movlw	0
  2255  00099E  0100               	movlb	0	; () banked
  2256  0009A0  6FAA               	movwf	(_movimiento+1)& (0+255),b
  2257  0009A2  0E00               	movlw	0
  2258  0009A4  6FA9               	movwf	_movimiento& (0+255),b
  2259  0009A6                     l4050:
  2260  0009A6  FFFF               	dw	65535	; assembler added errata NOP
  2261                           
  2262                           ;main.c: 288: }
  2263                           ;main.c: 289: stepsy_auxiliar = posiciony*relaciony;
  2264  0009A8  C053  F103         	movff	_relaciony,___ftmul@f2
  2265  0009AC  C054  F104         	movff	_relaciony+1,___ftmul@f2+1
  2266  0009B0  C055  F105         	movff	_relaciony+2,___ftmul@f2+2
  2267  0009B4  C034  F029         	movff	_posiciony,___awtoft@c
  2268  0009B8  C035  F02A         	movff	_posiciony+1,___awtoft@c+1
  2269  0009BC  ECB8  F00F         	call	___awtoft	;wreg free
  2270  0009C0  C029  F100         	movff	?___awtoft,___ftmul@f1
  2271  0009C4  C02A  F101         	movff	?___awtoft+1,___ftmul@f1+1
  2272  0009C8  C02B  F102         	movff	?___awtoft+2,___ftmul@f1+2
  2273  0009CC  ECE7  F00B         	call	___ftmul	;wreg free
  2274  0009D0  C100  F10C         	movff	?___ftmul,___fttol@f1
  2275  0009D4  C101  F10D         	movff	?___ftmul+1,___fttol@f1+1
  2276  0009D8  C102  F10E         	movff	?___ftmul+2,___fttol@f1+2
  2277  0009DC  EC3F  F00D         	call	___fttol	;wreg free
  2278  0009E0  C10C  F043         	movff	?___fttol,_stepsy_auxiliar
  2279  0009E4  C10D  F044         	movff	?___fttol+1,_stepsy_auxiliar+1
  2280  0009E8  C10E  F045         	movff	?___fttol+2,_stepsy_auxiliar+2
  2281  0009EC  C10F  F046         	movff	?___fttol+3,_stepsy_auxiliar+3
  2282                           
  2283                           ;main.c: 291: ejeypositivo(stepsy_auxiliar);
  2284  0009F0  C043  F021         	movff	_stepsy_auxiliar,ejeypositivo@paso3
  2285  0009F4  C044  F022         	movff	_stepsy_auxiliar+1,ejeypositivo@paso3+1
  2286  0009F8  C045  F023         	movff	_stepsy_auxiliar+2,ejeypositivo@paso3+2
  2287  0009FC  C046  F024         	movff	_stepsy_auxiliar+3,ejeypositivo@paso3+3
  2288  000A00  EC11  F006         	call	_ejeypositivo	;wreg free
  2289                           
  2290                           ;main.c: 292: apagarM2();
  2291  000A04  ECD7  F00F         	call	_apagarM2	;wreg free
  2292                           
  2293                           ;main.c: 293: stepcount = 0;
  2294  000A08  0E00               	movlw	0
  2295  000A0A  6E2E               	movwf	_stepcount,c
  2296  000A0C  0E00               	movlw	0
  2297  000A0E  6E2F               	movwf	_stepcount+1,c
  2298  000A10  0E00               	movlw	0
  2299  000A12  6E30               	movwf	_stepcount+2,c
  2300  000A14  0E00               	movlw	0
  2301  000A16  6E31               	movwf	_stepcount+3,c
  2302                           
  2303                           ;main.c: 294: stepsy_auxiliar = 0;
  2304  000A18  0E00               	movlw	0
  2305  000A1A  6E43               	movwf	_stepsy_auxiliar,c
  2306  000A1C  0E00               	movlw	0
  2307  000A1E  6E44               	movwf	_stepsy_auxiliar+1,c
  2308  000A20  0E00               	movlw	0
  2309  000A22  6E45               	movwf	_stepsy_auxiliar+2,c
  2310  000A24  0E00               	movlw	0
  2311  000A26  6E46               	movwf	_stepsy_auxiliar+3,c
  2312                           
  2313                           ;main.c: 296: sprintf(salida, "posicion en eje x : %d ", posicionx);
  2314  000A28  0EAF               	movlw	low _salida
  2315  000A2A  0101               	movlb	1	; () banked
  2316  000A2C  6F00               	movwf	sprintf@sp& (0+255),b
  2317  000A2E  0E00               	movlw	high _salida
  2318  000A30  0101               	movlb	1	; () banked
  2319  000A32  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  2320  000A34  0ECE               	movlw	low STR_1
  2321  000A36  0101               	movlb	1	; () banked
  2322  000A38  6F02               	movwf	sprintf@f& (0+255),b
  2323  000A3A  0E7F               	movlw	high STR_1
  2324  000A3C  0101               	movlb	1	; () banked
  2325  000A3E  6F03               	movwf	(sprintf@f+1)& (0+255),b
  2326  000A40  C032  F104         	movff	_posicionx,?_sprintf+4
  2327  000A44  C033  F105         	movff	_posicionx+1,?_sprintf+5
  2328  000A48  EC55  F00A         	call	_sprintf	;wreg free
  2329                           
  2330                           ;main.c: 297: enviarTrama(salida);
  2331  000A4C  0EAF               	movlw	low _salida
  2332  000A4E  6E21               	movwf	enviarTrama@datos,c
  2333  000A50  0E00               	movlw	high _salida
  2334  000A52  6E22               	movwf	enviarTrama@datos+1,c
  2335  000A54  EC3B  F00E         	call	_enviarTrama	;wreg free
  2336                           
  2337                           ;main.c: 298: movimiento = 0;
  2338  000A58  0E00               	movlw	0
  2339  000A5A  0100               	movlb	0	; () banked
  2340  000A5C  6FAA               	movwf	(_movimiento+1)& (0+255),b
  2341  000A5E  0E00               	movlw	0
  2342  000A60  6FA9               	movwf	_movimiento& (0+255),b
  2343                           
  2344                           ;main.c: 300: } else {
  2345  000A62  D022               	goto	l4074
  2346  000A64                     l4066:
  2347  000A64  FFFF               	dw	65535	; assembler added errata NOP
  2348                           
  2349                           ;main.c: 301: enviarTrama(norango);
  2350  000A66  0EF3               	movlw	low _norango
  2351  000A68  6E21               	movwf	enviarTrama@datos,c
  2352  000A6A  0E7E               	movlw	high _norango
  2353  000A6C  6E22               	movwf	enviarTrama@datos+1,c
  2354  000A6E  EC3B  F00E         	call	_enviarTrama	;wreg free
  2355                           
  2356                           ;main.c: 302: posicionx = posicionx - movimientox;
  2357  000A72  C04F  F11B         	movff	_movimientox,??_main
  2358  000A76  C050  F11C         	movff	_movimientox+1,??_main+1
  2359  000A7A  0101               	movlb	1	; () banked
  2360  000A7C  1F1B               	comf	??_main& (0+255),f,b
  2361  000A7E  1F1C               	comf	(??_main+1)& (0+255),f,b
  2362  000A80  4B1B               	infsnz	??_main& (0+255),f,b
  2363  000A82  2B1C               	incf	(??_main+1)& (0+255),f,b
  2364  000A84  5032               	movf	_posicionx,w,c
  2365  000A86  0101               	movlb	1	; () banked
  2366  000A88  251B               	addwf	??_main& (0+255),w,b
  2367  000A8A  6E32               	movwf	_posicionx,c
  2368  000A8C  5033               	movf	_posicionx+1,w,c
  2369  000A8E  0101               	movlb	1	; () banked
  2370  000A90  211C               	addwfc	(??_main+1)& (0+255),w,b
  2371  000A92  6E33               	movwf	_posicionx+1,c
  2372                           
  2373                           ; BSR set to: 1
  2374                           ;main.c: 303: movimientox = 0;
  2375  000A94  0E00               	movlw	0
  2376  000A96  6E50               	movwf	_movimientox+1,c
  2377  000A98  0E00               	movlw	0
  2378  000A9A  6E4F               	movwf	_movimientox,c
  2379                           
  2380                           ; BSR set to: 1
  2381                           ;main.c: 304: enviarTrama(rangox);
  2382  000A9C  0E60               	movlw	low _rangox
  2383  000A9E  6E21               	movwf	enviarTrama@datos,c
  2384  000AA0  0E7F               	movlw	high _rangox
  2385  000AA2  6E22               	movwf	enviarTrama@datos+1,c
  2386  000AA4  EC3B  F00E         	call	_enviarTrama	;wreg free
  2387  000AA8                     l4074:
  2388  000AA8  FFFF               	dw	65535	; assembler added errata NOP
  2389                           
  2390                           ;main.c: 305: }
  2391                           ;main.c: 306: xtrue = 1;
  2392  000AAA  0E00               	movlw	0
  2393  000AAC  6E5C               	movwf	_xtrue+1,c
  2394  000AAE  0E01               	movlw	1
  2395  000AB0  6E5B               	movwf	_xtrue,c
  2396  000AB2                     l239:
  2397  000AB2  FFFF               	dw	65535	; assembler added errata NOP
  2398                           
  2399                           ;main.c: 307: }
  2400                           ;main.c: 309: if (ytrue == 0) {
  2401  000AB4  5059               	movf	_ytrue,w,c
  2402  000AB6  105A               	iorwf	_ytrue+1,w,c
  2403  000AB8  A4D8               	btfss	status,2,c
  2404  000ABA  EF6E  F000         	goto	l3788
  2405                           
  2406                           ;main.c: 310: if (posiciony >= 0 && posiciony <= 30) {
  2407  000ABE  BE35               	btfsc	_posiciony+1,7,c
  2408  000AC0  D086               	goto	l4118
  2409  000AC2  BE35               	btfsc	_posiciony+1,7,c
  2410  000AC4  D006               	goto	l4080
  2411  000AC6  5035               	movf	_posiciony+1,w,c
  2412  000AC8  E103               	bnz	u3321
  2413  000ACA  0E1F               	movlw	31
  2414  000ACC  5C34               	subwf	_posiciony,w,c
  2415  000ACE  B0D8               	btfsc	status,0,c
  2416  000AD0                     u3321:
  2417  000AD0  D07E               	goto	l4118
  2418  000AD2                     l4080:
  2419  000AD2  FFFF               	dw	65535	; assembler added errata NOP
  2420                           
  2421                           ;main.c: 311: if (stepsy >= 0) {
  2422  000AD4  BE4A               	btfsc	_stepsy+3,7,c
  2423  000AD6  D03E               	goto	l4100
  2424                           
  2425                           ;main.c: 313: __nop();
  2426  000AD8  F000               	nop	
  2427                           
  2428                           ;main.c: 314: ejeypositivo(stepsy);
  2429  000ADA  C047  F021         	movff	_stepsy,ejeypositivo@paso3
  2430  000ADE  C048  F022         	movff	_stepsy+1,ejeypositivo@paso3+1
  2431  000AE2  C049  F023         	movff	_stepsy+2,ejeypositivo@paso3+2
  2432  000AE6  C04A  F024         	movff	_stepsy+3,ejeypositivo@paso3+3
  2433  000AEA  EC11  F006         	call	_ejeypositivo	;wreg free
  2434                           
  2435                           ;main.c: 315: sprintf(salida, "posicion en eje y : %d ", posiciony);
  2436  000AEE  0EAF               	movlw	low _salida
  2437  000AF0  0101               	movlb	1	; () banked
  2438  000AF2  6F00               	movwf	sprintf@sp& (0+255),b
  2439  000AF4  0E00               	movlw	high _salida
  2440  000AF6  0101               	movlb	1	; () banked
  2441  000AF8  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  2442  000AFA  0EE6               	movlw	low STR_2
  2443  000AFC  0101               	movlb	1	; () banked
  2444  000AFE  6F02               	movwf	sprintf@f& (0+255),b
  2445  000B00  0E7F               	movlw	high STR_2
  2446  000B02  0101               	movlb	1	; () banked
  2447  000B04  6F03               	movwf	(sprintf@f+1)& (0+255),b
  2448  000B06  C034  F104         	movff	_posiciony,?_sprintf+4
  2449  000B0A  C035  F105         	movff	_posiciony+1,?_sprintf+5
  2450  000B0E  EC55  F00A         	call	_sprintf	;wreg free
  2451                           
  2452                           ;main.c: 316: enviarTrama(salida);
  2453  000B12  0EAF               	movlw	low _salida
  2454  000B14  6E21               	movwf	enviarTrama@datos,c
  2455  000B16  0E00               	movlw	high _salida
  2456  000B18  6E22               	movwf	enviarTrama@datos+1,c
  2457  000B1A  EC3B  F00E         	call	_enviarTrama	;wreg free
  2458                           
  2459                           ;main.c: 317: apagarM2();
  2460  000B1E  ECD7  F00F         	call	_apagarM2	;wreg free
  2461                           
  2462                           ;main.c: 318: stepcount = 0;
  2463  000B22  0E00               	movlw	0
  2464  000B24  6E2E               	movwf	_stepcount,c
  2465  000B26  0E00               	movlw	0
  2466  000B28  6E2F               	movwf	_stepcount+1,c
  2467  000B2A  0E00               	movlw	0
  2468  000B2C  6E30               	movwf	_stepcount+2,c
  2469  000B2E  0E00               	movlw	0
  2470  000B30  6E31               	movwf	_stepcount+3,c
  2471                           
  2472                           ;main.c: 319: stepsy = 0;
  2473  000B32  0E00               	movlw	0
  2474  000B34  6E47               	movwf	_stepsy,c
  2475  000B36  0E00               	movlw	0
  2476  000B38  6E48               	movwf	_stepsy+1,c
  2477  000B3A  0E00               	movlw	0
  2478  000B3C  6E49               	movwf	_stepsy+2,c
  2479  000B3E  0E00               	movlw	0
  2480  000B40  6E4A               	movwf	_stepsy+3,c
  2481                           
  2482                           ;main.c: 320: movimiento = 0;
  2483  000B42  0E00               	movlw	0
  2484  000B44  0100               	movlb	0	; () banked
  2485  000B46  6FAA               	movwf	(_movimiento+1)& (0+255),b
  2486  000B48  0E00               	movlw	0
  2487  000B4A  6FA9               	movwf	_movimiento& (0+255),b
  2488                           
  2489                           ; BSR set to: 0
  2490                           ;main.c: 321: movimientoy = 0;
  2491  000B4C  0E00               	movlw	0
  2492  000B4E  6E52               	movwf	_movimientoy+1,c
  2493  000B50  0E00               	movlw	0
  2494  000B52  6E51               	movwf	_movimientoy,c
  2495  000B54                     l4100:
  2496  000B54  FFFF               	dw	65535	; assembler added errata NOP
  2497                           
  2498                           ;main.c: 329: }
  2499                           ;main.c: 330: if (stepsy < 0) {
  2500  000B56  AE4A               	btfss	_stepsy+3,7,c
  2501  000B58  D05D               	goto	l4124
  2502                           
  2503                           ;main.c: 333: ejeynegativo(stepsy);
  2504  000B5A  C047  F021         	movff	_stepsy,ejeynegativo@paso4
  2505  000B5E  C048  F022         	movff	_stepsy+1,ejeynegativo@paso4+1
  2506  000B62  C049  F023         	movff	_stepsy+2,ejeynegativo@paso4+2
  2507  000B66  C04A  F024         	movff	_stepsy+3,ejeynegativo@paso4+3
  2508  000B6A  EC39  F008         	call	_ejeynegativo	;wreg free
  2509                           
  2510                           ;main.c: 334: sprintf(salida, "posicion en eje y : %d ", posiciony);
  2511  000B6E  0EAF               	movlw	low _salida
  2512  000B70  0101               	movlb	1	; () banked
  2513  000B72  6F00               	movwf	sprintf@sp& (0+255),b
  2514  000B74  0E00               	movlw	high _salida
  2515  000B76  0101               	movlb	1	; () banked
  2516  000B78  6F01               	movwf	(sprintf@sp+1)& (0+255),b
  2517  000B7A  0EE6               	movlw	low STR_2
  2518  000B7C  0101               	movlb	1	; () banked
  2519  000B7E  6F02               	movwf	sprintf@f& (0+255),b
  2520  000B80  0E7F               	movlw	high STR_2
  2521  000B82  0101               	movlb	1	; () banked
  2522  000B84  6F03               	movwf	(sprintf@f+1)& (0+255),b
  2523  000B86  C034  F104         	movff	_posiciony,?_sprintf+4
  2524  000B8A  C035  F105         	movff	_posiciony+1,?_sprintf+5
  2525  000B8E  EC55  F00A         	call	_sprintf	;wreg free
  2526                           
  2527                           ;main.c: 335: enviarTrama(salida);
  2528  000B92  0EAF               	movlw	low _salida
  2529  000B94  6E21               	movwf	enviarTrama@datos,c
  2530  000B96  0E00               	movlw	high _salida
  2531  000B98  6E22               	movwf	enviarTrama@datos+1,c
  2532  000B9A  EC3B  F00E         	call	_enviarTrama	;wreg free
  2533                           
  2534                           ;main.c: 336: apagarM2();
  2535  000B9E  ECD7  F00F         	call	_apagarM2	;wreg free
  2536                           
  2537                           ;main.c: 337: stepcount = 0;
  2538  000BA2  0E00               	movlw	0
  2539  000BA4  6E2E               	movwf	_stepcount,c
  2540  000BA6  0E00               	movlw	0
  2541  000BA8  6E2F               	movwf	_stepcount+1,c
  2542  000BAA  0E00               	movlw	0
  2543  000BAC  6E30               	movwf	_stepcount+2,c
  2544  000BAE  0E00               	movlw	0
  2545  000BB0  6E31               	movwf	_stepcount+3,c
  2546                           
  2547                           ;main.c: 338: stepsy = 0;
  2548  000BB2  0E00               	movlw	0
  2549  000BB4  6E47               	movwf	_stepsy,c
  2550  000BB6  0E00               	movlw	0
  2551  000BB8  6E48               	movwf	_stepsy+1,c
  2552  000BBA  0E00               	movlw	0
  2553  000BBC  6E49               	movwf	_stepsy+2,c
  2554  000BBE  0E00               	movlw	0
  2555  000BC0  6E4A               	movwf	_stepsy+3,c
  2556                           
  2557                           ;main.c: 339: movimiento = 0;
  2558  000BC2  0E00               	movlw	0
  2559  000BC4  0100               	movlb	0	; () banked
  2560  000BC6  6FAA               	movwf	(_movimiento+1)& (0+255),b
  2561  000BC8  0E00               	movlw	0
  2562  000BCA  6FA9               	movwf	_movimiento& (0+255),b
  2563  000BCC  D01E               	goto	l4122
  2564  000BCE                     l4118:
  2565  000BCE  FFFF               	dw	65535	; assembler added errata NOP
  2566                           
  2567                           ;main.c: 350: enviarTrama(norango);
  2568  000BD0  0EF3               	movlw	low _norango
  2569  000BD2  6E21               	movwf	enviarTrama@datos,c
  2570  000BD4  0E7E               	movlw	high _norango
  2571  000BD6  6E22               	movwf	enviarTrama@datos+1,c
  2572  000BD8  EC3B  F00E         	call	_enviarTrama	;wreg free
  2573                           
  2574                           ;main.c: 351: enviarTrama(rangoy);
  2575  000BDC  0E34               	movlw	low _rangoy
  2576  000BDE  6E21               	movwf	enviarTrama@datos,c
  2577  000BE0  0E7F               	movlw	high _rangoy
  2578  000BE2  6E22               	movwf	enviarTrama@datos+1,c
  2579  000BE4  EC3B  F00E         	call	_enviarTrama	;wreg free
  2580                           
  2581                           ;main.c: 352: posiciony = posiciony - movimientoy;
  2582  000BE8  C051  F11B         	movff	_movimientoy,??_main
  2583  000BEC  C052  F11C         	movff	_movimientoy+1,??_main+1
  2584  000BF0  0101               	movlb	1	; () banked
  2585  000BF2  1F1B               	comf	??_main& (0+255),f,b
  2586  000BF4  1F1C               	comf	(??_main+1)& (0+255),f,b
  2587  000BF6  4B1B               	infsnz	??_main& (0+255),f,b
  2588  000BF8  2B1C               	incf	(??_main+1)& (0+255),f,b
  2589  000BFA  5034               	movf	_posiciony,w,c
  2590  000BFC  0101               	movlb	1	; () banked
  2591  000BFE  251B               	addwf	??_main& (0+255),w,b
  2592  000C00  6E34               	movwf	_posiciony,c
  2593  000C02  5035               	movf	_posiciony+1,w,c
  2594  000C04  0101               	movlb	1	; () banked
  2595  000C06  211C               	addwfc	(??_main+1)& (0+255),w,b
  2596  000C08  6E35               	movwf	_posiciony+1,c
  2597  000C0A                     l4122:
  2598  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  2599                           
  2600                           ; BSR set to: 1
  2601                           ;main.c: 353: movimientoy = 0;
  2602  000C0C  0E00               	movlw	0
  2603  000C0E  6E52               	movwf	_movimientoy+1,c
  2604  000C10  0E00               	movlw	0
  2605  000C12  6E51               	movwf	_movimientoy,c
  2606  000C14                     l4124:
  2607  000C14  FFFF               	dw	65535	; assembler added errata NOP
  2608                           
  2609                           ;main.c: 354: }
  2610                           ;main.c: 355: ytrue =1;
  2611  000C16  0E00               	movlw	0
  2612  000C18  6E5A               	movwf	_ytrue+1,c
  2613  000C1A  0E01               	movlw	1
  2614  000C1C  6E59               	movwf	_ytrue,c
  2615  000C1E  EF6E  F000         	goto	l3788
  2616  000C22                     __end_of_main:
  2617                           	opt stack 0
  2618                           tblptru	equ	0xFF8
  2619                           tblptrh	equ	0xFF7
  2620                           tblptrl	equ	0xFF6
  2621                           tablat	equ	0xFF5
  2622                           postinc0	equ	0xFEE
  2623                           wreg	equ	0xFE8
  2624                           indf1	equ	0xFE7
  2625                           postdec1	equ	0xFE5
  2626                           fsr1h	equ	0xFE2
  2627                           fsr1l	equ	0xFE1
  2628                           indf2	equ	0xFDF
  2629                           postinc2	equ	0xFDE
  2630                           fsr2h	equ	0xFDA
  2631                           fsr2l	equ	0xFD9
  2632                           status	equ	0xFD8
  2633                           
  2634 ;; *************** function _stringtolong *****************
  2635 ;; Defined at:
  2636 ;;		line 387 in file "main.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  string          2    0[BANK1 ] PTR unsigned char 
  2639 ;;		 -> entrada(25), 
  2640 ;;  tamanio         2    2[BANK1 ] int 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  4    0[BANK1 ] long 
  2645 ;; Registers used:
  2646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2652 ;;      Params:         0       0       4       0       0       0       0
  2653 ;;      Locals:         0       0       0       0       0       0       0
  2654 ;;      Temps:          0       0       4       0       0       0       0
  2655 ;;      Totals:         0       0       8       0       0       0       0
  2656 ;;Total ram usage:        8 bytes
  2657 ;; Hardware stack levels used:    1
  2658 ;; Hardware stack levels required when called:    3
  2659 ;; This function calls:
  2660 ;;		___lmul
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text1
  2667  00164A                     __ptext1:
  2668                           	opt stack 0
  2669  00164A                     _stringtolong:
  2670                           	opt stack 0
  2671  00164A  FFFF               	dw	65535	; assembler added errata NOP
  2672                           
  2673                           ;main.c: 388: h = 0;
  2674                           
  2675                           ;incstack = 0
  2676  00164C  0E00               	movlw	0
  2677  00164E  0100               	movlb	0	; () banked
  2678  001650  6F8C               	movwf	_h& (0+255),b
  2679  001652  0E00               	movlw	0
  2680  001654  6F8D               	movwf	(_h+1)& (0+255),b
  2681  001656  0E00               	movlw	0
  2682  001658  6F8E               	movwf	(_h+2)& (0+255),b
  2683  00165A  0E00               	movlw	0
  2684  00165C  6F8F               	movwf	(_h+3)& (0+255),b
  2685                           
  2686                           ;main.c: 389: o = 1;
  2687  00165E  0E01               	movlw	1
  2688  001660  0100               	movlb	0	; () banked
  2689  001662  6F88               	movwf	_o& (0+255),b
  2690  001664  0E00               	movlw	0
  2691  001666  6F89               	movwf	(_o+1)& (0+255),b
  2692  001668  0E00               	movlw	0
  2693  00166A  6F8A               	movwf	(_o+2)& (0+255),b
  2694  00166C  0E00               	movlw	0
  2695  00166E  6F8B               	movwf	(_o+3)& (0+255),b
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;main.c: 390: p = tamanio - 1;
  2699  001670  0EFF               	movlw	255
  2700  001672  0101               	movlb	1	; () banked
  2701  001674  6F04               	movwf	??_stringtolong& (0+255),b
  2702  001676  0EFF               	movlw	255
  2703  001678  0101               	movlb	1	; () banked
  2704  00167A  6F05               	movwf	(??_stringtolong+1)& (0+255),b
  2705  00167C  C102  F106         	movff	stringtolong@tamanio,??_stringtolong+2
  2706  001680  C103  F107         	movff	stringtolong@tamanio+1,??_stringtolong+3
  2707  001684  0101               	movlb	1	; () banked
  2708  001686  5104               	movf	??_stringtolong& (0+255),w,b
  2709  001688  0101               	movlb	1	; () banked
  2710  00168A  2706               	addwf	(??_stringtolong+2)& (0+255),f,b
  2711  00168C  0101               	movlb	1	; () banked
  2712  00168E  5105               	movf	(??_stringtolong+1)& (0+255),w,b
  2713  001690  0101               	movlb	1	; () banked
  2714  001692  2307               	addwfc	(??_stringtolong+3)& (0+255),f,b
  2715  001694  C106  F084         	movff	??_stringtolong+2,_p
  2716  001698  C107  F085         	movff	??_stringtolong+3,_p+1
  2717  00169C  0100               	movlb	0	; () banked
  2718  00169E  0E00               	movlw	0
  2719  0016A0  BF85               	btfsc	(_p+1)& (0+255),7,b
  2720  0016A2  0EFF               	movlw	-1
  2721  0016A4  6F86               	movwf	(_p+2)& (0+255),b
  2722  0016A6  6F87               	movwf	(_p+3)& (0+255),b
  2723                           
  2724                           ;main.c: 392: while (p >= 0) {
  2725  0016A8  D084               	goto	l3610
  2726  0016AA                     l3600:
  2727  0016AA  FFFF               	dw	65535	; assembler added errata NOP
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;main.c: 393: help = string[p] - '0';
  2731  0016AC  0ED0               	movlw	208
  2732  0016AE  0101               	movlb	1	; () banked
  2733  0016B0  6F04               	movwf	??_stringtolong& (0+255),b
  2734  0016B2  0EFF               	movlw	255
  2735  0016B4  0101               	movlb	1	; () banked
  2736  0016B6  6F05               	movwf	(??_stringtolong+1)& (0+255),b
  2737  0016B8  0100               	movlb	0	; () banked
  2738  0016BA  5184               	movf	_p& (0+255),w,b
  2739  0016BC  0101               	movlb	1	; () banked
  2740  0016BE  2500               	addwf	stringtolong@string& (0+255),w,b
  2741  0016C0  6ED9               	movwf	fsr2l,c
  2742  0016C2  0100               	movlb	0	; () banked
  2743  0016C4  5185               	movf	(_p+1)& (0+255),w,b
  2744  0016C6  0101               	movlb	1	; () banked
  2745  0016C8  2101               	addwfc	(stringtolong@string+1)& (0+255),w,b
  2746  0016CA  6EDA               	movwf	fsr2h,c
  2747  0016CC  50DF               	movf	indf2,w,c
  2748  0016CE  0101               	movlb	1	; () banked
  2749  0016D0  6F06               	movwf	(??_stringtolong+2)& (0+255),b
  2750  0016D2  6B07               	clrf	(??_stringtolong+3)& (0+255),b
  2751  0016D4  0101               	movlb	1	; () banked
  2752  0016D6  5104               	movf	??_stringtolong& (0+255),w,b
  2753  0016D8  0101               	movlb	1	; () banked
  2754  0016DA  2706               	addwf	(??_stringtolong+2)& (0+255),f,b
  2755  0016DC  0101               	movlb	1	; () banked
  2756  0016DE  5105               	movf	(??_stringtolong+1)& (0+255),w,b
  2757  0016E0  0101               	movlb	1	; () banked
  2758  0016E2  2307               	addwfc	(??_stringtolong+3)& (0+255),f,b
  2759  0016E4  C106  F080         	movff	??_stringtolong+2,_help
  2760  0016E8  C107  F081         	movff	??_stringtolong+3,_help+1
  2761  0016EC  0100               	movlb	0	; () banked
  2762  0016EE  6B82               	clrf	(_help+2)& (0+255),b
  2763  0016F0  6B83               	clrf	(_help+3)& (0+255),b
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;main.c: 394: help = help*o;
  2767  0016F2  C080  F021         	movff	_help,___lmul@multiplier
  2768  0016F6  C081  F022         	movff	_help+1,___lmul@multiplier+1
  2769  0016FA  C082  F023         	movff	_help+2,___lmul@multiplier+2
  2770  0016FE  C083  F024         	movff	_help+3,___lmul@multiplier+3
  2771  001702  C088  F025         	movff	_o,___lmul@multiplicand
  2772  001706  C089  F026         	movff	_o+1,___lmul@multiplicand+1
  2773  00170A  C08A  F027         	movff	_o+2,___lmul@multiplicand+2
  2774  00170E  C08B  F028         	movff	_o+3,___lmul@multiplicand+3
  2775  001712  ECE0  F00E         	call	___lmul	;wreg free
  2776  001716  C021  F080         	movff	?___lmul,_help
  2777  00171A  C022  F081         	movff	?___lmul+1,_help+1
  2778  00171E  C023  F082         	movff	?___lmul+2,_help+2
  2779  001722  C024  F083         	movff	?___lmul+3,_help+3
  2780                           
  2781                           ;main.c: 395: h = h + help;
  2782  001726  0100               	movlb	0	; () banked
  2783  001728  5180               	movf	_help& (0+255),w,b
  2784  00172A  0100               	movlb	0	; () banked
  2785  00172C  258C               	addwf	_h& (0+255),w,b
  2786  00172E  0100               	movlb	0	; () banked
  2787  001730  6F8C               	movwf	_h& (0+255),b
  2788  001732  0100               	movlb	0	; () banked
  2789  001734  5181               	movf	(_help+1)& (0+255),w,b
  2790  001736  0100               	movlb	0	; () banked
  2791  001738  218D               	addwfc	(_h+1)& (0+255),w,b
  2792  00173A  0100               	movlb	0	; () banked
  2793  00173C  6F8D               	movwf	(_h+1)& (0+255),b
  2794  00173E  0100               	movlb	0	; () banked
  2795  001740  5182               	movf	(_help+2)& (0+255),w,b
  2796  001742  0100               	movlb	0	; () banked
  2797  001744  218E               	addwfc	(_h+2)& (0+255),w,b
  2798  001746  0100               	movlb	0	; () banked
  2799  001748  6F8E               	movwf	(_h+2)& (0+255),b
  2800  00174A  0100               	movlb	0	; () banked
  2801  00174C  5183               	movf	(_help+3)& (0+255),w,b
  2802  00174E  0100               	movlb	0	; () banked
  2803  001750  218F               	addwfc	(_h+3)& (0+255),w,b
  2804  001752  0100               	movlb	0	; () banked
  2805  001754  6F8F               	movwf	(_h+3)& (0+255),b
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;main.c: 396: p = p - 1;
  2809  001756  0EFF               	movlw	255
  2810  001758  0100               	movlb	0	; () banked
  2811  00175A  2584               	addwf	_p& (0+255),w,b
  2812  00175C  0100               	movlb	0	; () banked
  2813  00175E  6F84               	movwf	_p& (0+255),b
  2814  001760  0EFF               	movlw	255
  2815  001762  0100               	movlb	0	; () banked
  2816  001764  2185               	addwfc	(_p+1)& (0+255),w,b
  2817  001766  0100               	movlb	0	; () banked
  2818  001768  6F85               	movwf	(_p+1)& (0+255),b
  2819  00176A  0EFF               	movlw	255
  2820  00176C  0100               	movlb	0	; () banked
  2821  00176E  2186               	addwfc	(_p+2)& (0+255),w,b
  2822  001770  0100               	movlb	0	; () banked
  2823  001772  6F86               	movwf	(_p+2)& (0+255),b
  2824  001774  0EFF               	movlw	255
  2825  001776  0100               	movlb	0	; () banked
  2826  001778  2187               	addwfc	(_p+3)& (0+255),w,b
  2827  00177A  0100               	movlb	0	; () banked
  2828  00177C  6F87               	movwf	(_p+3)& (0+255),b
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;main.c: 397: o = o * 10;
  2832  00177E  C088  F021         	movff	_o,___lmul@multiplier
  2833  001782  C089  F022         	movff	_o+1,___lmul@multiplier+1
  2834  001786  C08A  F023         	movff	_o+2,___lmul@multiplier+2
  2835  00178A  C08B  F024         	movff	_o+3,___lmul@multiplier+3
  2836  00178E  0E0A               	movlw	10
  2837  001790  6E25               	movwf	___lmul@multiplicand,c
  2838  001792  0E00               	movlw	0
  2839  001794  6E26               	movwf	___lmul@multiplicand+1,c
  2840  001796  0E00               	movlw	0
  2841  001798  6E27               	movwf	___lmul@multiplicand+2,c
  2842  00179A  0E00               	movlw	0
  2843  00179C  6E28               	movwf	___lmul@multiplicand+3,c
  2844  00179E  ECE0  F00E         	call	___lmul	;wreg free
  2845  0017A2  C021  F088         	movff	?___lmul,_o
  2846  0017A6  C022  F089         	movff	?___lmul+1,_o+1
  2847  0017AA  C023  F08A         	movff	?___lmul+2,_o+2
  2848  0017AE  C024  F08B         	movff	?___lmul+3,_o+3
  2849  0017B2                     l3610:
  2850  0017B2  FFFF               	dw	65535	; assembler added errata NOP
  2851  0017B4  0100               	movlb	0	; () banked
  2852  0017B6  AF87               	btfss	(_p+3)& (0+255),7,b
  2853  0017B8  D778               	goto	l3600
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;main.c: 398: }
  2857                           ;main.c: 399: return h;
  2858  0017BA  C08C  F100         	movff	_h,?_stringtolong
  2859  0017BE  C08D  F101         	movff	_h+1,?_stringtolong+1
  2860  0017C2  C08E  F102         	movff	_h+2,?_stringtolong+2
  2861  0017C6  C08F  F103         	movff	_h+3,?_stringtolong+3
  2862                           
  2863                           ; BSR set to: 0
  2864  0017CA  0012               	return		;funcret
  2865  0017CC  FFFF               	dw	65535	; errata NOP
  2866  0017CE                     __end_of_stringtolong:
  2867                           	opt stack 0
  2868                           tblptru	equ	0xFF8
  2869                           tblptrh	equ	0xFF7
  2870                           tblptrl	equ	0xFF6
  2871                           tablat	equ	0xFF5
  2872                           postinc0	equ	0xFEE
  2873                           wreg	equ	0xFE8
  2874                           indf1	equ	0xFE7
  2875                           postdec1	equ	0xFE5
  2876                           fsr1h	equ	0xFE2
  2877                           fsr1l	equ	0xFE1
  2878                           indf2	equ	0xFDF
  2879                           postinc2	equ	0xFDE
  2880                           fsr2h	equ	0xFDA
  2881                           fsr2l	equ	0xFD9
  2882                           status	equ	0xFD8
  2883                           
  2884 ;; *************** function ___lmul *****************
  2885 ;; Defined at:
  2886 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\Umul32.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  multiplier      4   32[COMRAM] unsigned long 
  2889 ;;  multiplicand    4   36[COMRAM] unsigned long 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  product         4   40[COMRAM] unsigned long 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  4   32[COMRAM] unsigned long 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2901 ;;      Params:         8       0       0       0       0       0       0
  2902 ;;      Locals:         4       0       0       0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0       0       0
  2904 ;;      Totals:        12       0       0       0       0       0       0
  2905 ;;Total ram usage:       12 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; Hardware stack levels required when called:    2
  2908 ;; This function calls:
  2909 ;;		Nothing
  2910 ;; This function is called by:
  2911 ;;		_stringtolong
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text2
  2916  001DC0                     __ptext2:
  2917                           	opt stack 0
  2918  001DC0                     ___lmul:
  2919                           	opt stack 0
  2920  001DC0  FFFF               	dw	65535	; assembler added errata NOP
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;incstack = 0
  2924  001DC2  0E00               	movlw	0
  2925  001DC4  6E29               	movwf	___lmul@product,c
  2926  001DC6  0E00               	movlw	0
  2927  001DC8  6E2A               	movwf	___lmul@product+1,c
  2928  001DCA  0E00               	movlw	0
  2929  001DCC  6E2B               	movwf	___lmul@product+2,c
  2930  001DCE  0E00               	movlw	0
  2931  001DD0  6E2C               	movwf	___lmul@product+3,c
  2932  001DD2                     l2308:
  2933  001DD2  FFFF               	dw	65535	; assembler added errata NOP
  2934  001DD4  A021               	btfss	___lmul@multiplier,0,c
  2935  001DD6  D008               	goto	l2312
  2936  001DD8  5025               	movf	___lmul@multiplicand,w,c
  2937  001DDA  2629               	addwf	___lmul@product,f,c
  2938  001DDC  5026               	movf	___lmul@multiplicand+1,w,c
  2939  001DDE  222A               	addwfc	___lmul@product+1,f,c
  2940  001DE0  5027               	movf	___lmul@multiplicand+2,w,c
  2941  001DE2  222B               	addwfc	___lmul@product+2,f,c
  2942  001DE4  5028               	movf	___lmul@multiplicand+3,w,c
  2943  001DE6  222C               	addwfc	___lmul@product+3,f,c
  2944  001DE8                     l2312:
  2945  001DE8  FFFF               	dw	65535	; assembler added errata NOP
  2946  001DEA  90D8               	bcf	status,0,c
  2947  001DEC  3625               	rlcf	___lmul@multiplicand,f,c
  2948  001DEE  3626               	rlcf	___lmul@multiplicand+1,f,c
  2949  001DF0  3627               	rlcf	___lmul@multiplicand+2,f,c
  2950  001DF2  3628               	rlcf	___lmul@multiplicand+3,f,c
  2951  001DF4  90D8               	bcf	status,0,c
  2952  001DF6  3224               	rrcf	___lmul@multiplier+3,f,c
  2953  001DF8  3223               	rrcf	___lmul@multiplier+2,f,c
  2954  001DFA  3222               	rrcf	___lmul@multiplier+1,f,c
  2955  001DFC  3221               	rrcf	___lmul@multiplier,f,c
  2956  001DFE  5021               	movf	___lmul@multiplier,w,c
  2957  001E00  1022               	iorwf	___lmul@multiplier+1,w,c
  2958  001E02  1023               	iorwf	___lmul@multiplier+2,w,c
  2959  001E04  1024               	iorwf	___lmul@multiplier+3,w,c
  2960  001E06  A4D8               	btfss	status,2,c
  2961  001E08  D7E4               	goto	l2308
  2962  001E0A  C029  F021         	movff	___lmul@product,?___lmul
  2963  001E0E  C02A  F022         	movff	___lmul@product+1,?___lmul+1
  2964  001E12  C02B  F023         	movff	___lmul@product+2,?___lmul+2
  2965  001E16  C02C  F024         	movff	___lmul@product+3,?___lmul+3
  2966  001E1A  0012               	return		;funcret
  2967  001E1C  FFFF               	dw	65535	; errata NOP
  2968  001E1E                     __end_of___lmul:
  2969                           	opt stack 0
  2970                           tblptru	equ	0xFF8
  2971                           tblptrh	equ	0xFF7
  2972                           tblptrl	equ	0xFF6
  2973                           tablat	equ	0xFF5
  2974                           postinc0	equ	0xFEE
  2975                           wreg	equ	0xFE8
  2976                           indf1	equ	0xFE7
  2977                           postdec1	equ	0xFE5
  2978                           fsr1h	equ	0xFE2
  2979                           fsr1l	equ	0xFE1
  2980                           indf2	equ	0xFDF
  2981                           postinc2	equ	0xFDE
  2982                           fsr2h	equ	0xFDA
  2983                           fsr2l	equ	0xFD9
  2984                           status	equ	0xFD8
  2985                           
  2986 ;; *************** function _strcmp *****************
  2987 ;; Defined at:
  2988 ;;		line 33 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\strcmp.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  s1              2   32[COMRAM] PTR const unsigned char 
  2991 ;;		 -> tam(20), comando(25), 
  2992 ;;  s2              2   34[COMRAM] PTR const unsigned char 
  2993 ;;		 -> devolver(9), posicion_info(9), movery(7), moverx(7), 
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  r               1   37[COMRAM] char 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  2   32[COMRAM] int 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3005 ;;      Params:         4       0       0       0       0       0       0
  3006 ;;      Locals:         1       0       0       0       0       0       0
  3007 ;;      Temps:          1       0       0       0       0       0       0
  3008 ;;      Totals:         6       0       0       0       0       0       0
  3009 ;;Total ram usage:        6 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    2
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text3
  3020  001E78                     __ptext3:
  3021                           	opt stack 0
  3022  001E78                     _strcmp:
  3023                           	opt stack 0
  3024  001E78  FFFF               	dw	65535	; assembler added errata NOP
  3025                           
  3026                           ;incstack = 0
  3027  001E7A  D005               	goto	l2464
  3028  001E7C                     l2462:
  3029  001E7C  FFFF               	dw	65535	; assembler added errata NOP
  3030  001E7E  4A21               	infsnz	strcmp@s1,f,c
  3031  001E80  2A22               	incf	strcmp@s1+1,f,c
  3032  001E82  4A23               	infsnz	strcmp@s2,f,c
  3033  001E84  2A24               	incf	strcmp@s2+1,f,c
  3034  001E86                     l2464:
  3035  001E86  FFFF               	dw	65535	; assembler added errata NOP
  3036  001E88  C021  FFD9         	movff	strcmp@s1,fsr2l
  3037  001E8C  C022  FFDA         	movff	strcmp@s1+1,fsr2h
  3038  001E90  50DF               	movf	indf2,w,c
  3039  001E92  6E25               	movwf	??_strcmp& (0+255),c
  3040  001E94  C023  FFF6         	movff	strcmp@s2,tblptrl
  3041  001E98  C024  FFF7         	movff	strcmp@s2+1,tblptrh
  3042  001E9C                     	if	0	;tblptru may be non-zero
  3043  001E9C                     	endif
  3044  001E9C                     	if	0	;tblptru may be non-zero
  3045  001E9C                     	endif
  3046  001E9C  0008               	tblrd		*
  3047  001E9E  FFFF               	dw	65535	; errata NOP
  3048  001EA0  50F5               	movf	tablat,w,c
  3049  001EA2  0800               	sublw	0
  3050  001EA4  2425               	addwf	??_strcmp,w,c
  3051  001EA6  6E26               	movwf	strcmp@r,c
  3052  001EA8  5026               	movf	strcmp@r,w,c
  3053  001EAA  A4D8               	btfss	status,2,c
  3054  001EAC  D007               	goto	l2468
  3055  001EAE  C021  FFD9         	movff	strcmp@s1,fsr2l
  3056  001EB2  C022  FFDA         	movff	strcmp@s1+1,fsr2h
  3057  001EB6  50DF               	movf	indf2,w,c
  3058  001EB8  A4D8               	btfss	status,2,c
  3059  001EBA  D7E0               	goto	l2462
  3060  001EBC                     l2468:
  3061  001EBC  FFFF               	dw	65535	; assembler added errata NOP
  3062  001EBE  5026               	movf	strcmp@r,w,c
  3063  001EC0  6E21               	movwf	?_strcmp,c
  3064  001EC2  6A22               	clrf	?_strcmp+1,c
  3065  001EC4  BE21               	btfsc	?_strcmp,7,c
  3066  001EC6  0622               	decf	?_strcmp+1,f,c
  3067  001EC8  0012               	return		;funcret
  3068  001ECA  FFFF               	dw	65535	; errata NOP
  3069  001ECC                     __end_of_strcmp:
  3070                           	opt stack 0
  3071                           tblptru	equ	0xFF8
  3072                           tblptrh	equ	0xFF7
  3073                           tblptrl	equ	0xFF6
  3074                           tablat	equ	0xFF5
  3075                           postinc0	equ	0xFEE
  3076                           wreg	equ	0xFE8
  3077                           indf1	equ	0xFE7
  3078                           postdec1	equ	0xFE5
  3079                           fsr1h	equ	0xFE2
  3080                           fsr1l	equ	0xFE1
  3081                           indf2	equ	0xFDF
  3082                           postinc2	equ	0xFDE
  3083                           fsr2h	equ	0xFDA
  3084                           fsr2l	equ	0xFD9
  3085                           status	equ	0xFD8
  3086                           
  3087 ;; *************** function _sprintf *****************
  3088 ;; Defined at:
  3089 ;;		line 492 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\doprnt.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  sp              2    0[BANK1 ] PTR unsigned char 
  3092 ;;		 -> salida(25), 
  3093 ;;  f               2    2[BANK1 ] PTR const unsigned char 
  3094 ;;		 -> STR_7(24), STR_6(24), STR_5(24), STR_4(24), 
  3095 ;;		 -> STR_3(24), STR_2(24), STR_1(24), 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  tmpval          4    0        struct .
  3098 ;;  cp              3    0        PTR const unsigned char 
  3099 ;;  val             2   10[BANK1 ] unsigned int 
  3100 ;;  ap              2    6[BANK1 ] PTR void [1]
  3101 ;;		 -> ?_sprintf(2), 
  3102 ;;  len             2    0        unsigned int 
  3103 ;;  c               1   12[BANK1 ] char 
  3104 ;;  prec            1    9[BANK1 ] char 
  3105 ;;  flag            1    8[BANK1 ] unsigned char 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  2    0[BANK1 ] int 
  3108 ;; Registers used:
  3109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3115 ;;      Params:         0       0       6       0       0       0       0
  3116 ;;      Locals:         0       0       7       0       0       0       0
  3117 ;;      Temps:          1       0       0       0       0       0       0
  3118 ;;      Totals:         1       0      13       0       0       0       0
  3119 ;;Total ram usage:       14 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:    3
  3122 ;; This function calls:
  3123 ;;		___lwdiv
  3124 ;;		___lwmod
  3125 ;; This function is called by:
  3126 ;;		_main
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text4
  3131  0014AA                     __ptext4:
  3132                           	opt stack 0
  3133  0014AA                     _sprintf:
  3134                           	opt stack 0
  3135  0014AA  FFFF               	dw	65535	; assembler added errata NOP
  3136                           
  3137                           ;doprnt.c: 494: va_list ap;
  3138                           ;doprnt.c: 499: signed char c;
  3139                           ;doprnt.c: 506: signed char prec;
  3140                           ;doprnt.c: 508: unsigned char flag;
  3141                           ;doprnt.c: 523: union {
  3142                           ;doprnt.c: 524: unsigned long vd;
  3143                           ;doprnt.c: 525: double integ;
  3144                           ;doprnt.c: 526: } tmpval;
  3145                           ;doprnt.c: 528: unsigned int val;
  3146                           ;doprnt.c: 529: unsigned len;
  3147                           ;doprnt.c: 530: const char * cp;
  3148                           ;doprnt.c: 533: *ap = __va_start();
  3149                           
  3150                           ;incstack = 0
  3151  0014AC  0E04               	movlw	low (?_sprintf+4)
  3152  0014AE  0101               	movlb	1	; () banked
  3153  0014B0  6F06               	movwf	sprintf@ap& (0+255),b
  3154  0014B2  0E01               	movlw	high (?_sprintf+4)
  3155  0014B4  0101               	movlb	1	; () banked
  3156  0014B6  6F07               	movwf	(sprintf@ap+1)& (0+255),b
  3157                           
  3158                           ;doprnt.c: 536: while(c = *f++) {
  3159  0014B8  D0AF               	goto	l3666
  3160  0014BA                     l3614:
  3161  0014BA  FFFF               	dw	65535	; assembler added errata NOP
  3162                           
  3163                           ; BSR set to: 1
  3164                           ;doprnt.c: 538: if(c != '%')
  3165  0014BC  0E25               	movlw	37
  3166  0014BE  0101               	movlb	1	; () banked
  3167  0014C0  190C               	xorwf	sprintf@c& (0+255),w,b
  3168  0014C2  B4D8               	btfsc	status,2,c
  3169  0014C4  D00A               	goto	l3620
  3170                           
  3171                           ; BSR set to: 1
  3172                           ;doprnt.c: 540: {
  3173                           ;doprnt.c: 541: ((*sp++ = (c)));
  3174  0014C6  C100  FFD9         	movff	sprintf@sp,fsr2l
  3175  0014CA  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  3176  0014CE  C10C  FFDF         	movff	sprintf@c,indf2
  3177                           
  3178                           ; BSR set to: 1
  3179  0014D2  0101               	movlb	1	; () banked
  3180  0014D4  4B00               	infsnz	sprintf@sp& (0+255),f,b
  3181  0014D6  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  3182                           
  3183                           ;doprnt.c: 542: continue;
  3184  0014D8  D09F               	goto	l3666
  3185  0014DA                     l3620:
  3186  0014DA  FFFF               	dw	65535	; assembler added errata NOP
  3187                           
  3188                           ; BSR set to: 1
  3189                           ;doprnt.c: 543: }
  3190                           ;doprnt.c: 548: flag = 0;
  3191  0014DC  0E00               	movlw	0
  3192  0014DE  0101               	movlb	1	; () banked
  3193  0014E0  6F08               	movwf	sprintf@flag& (0+255),b
  3194                           
  3195                           ; BSR set to: 1
  3196                           
  3197                           ; BSR set to: 1
  3198                           
  3199                           ; BSR set to: 1
  3200                           ;doprnt.c: 822: }
  3201                           
  3202                           ; BSR set to: 1
  3203                           ;doprnt.c: 813: continue;
  3204                           
  3205                           ;doprnt.c: 802: default:
  3206                           
  3207                           ; BSR set to: 1
  3208                           ;doprnt.c: 698: case 'i':
  3209                           ;doprnt.c: 699: break;
  3210                           
  3211                           ; BSR set to: 1
  3212                           
  3213                           ;doprnt.c: 697: case 'd':
  3214                           
  3215                           ; BSR set to: 1
  3216                           ;doprnt.c: 638: goto alldone;
  3217                           
  3218                           ;doprnt.c: 637: case 0:
  3219                           
  3220                           ;doprnt.c: 635: switch(c = *f++) {
  3221  0014E2  C102  FFF6         	movff	sprintf@f,tblptrl
  3222  0014E6  C103  FFF7         	movff	sprintf@f+1,tblptrh
  3223  0014EA  0101               	movlb	1	; () banked
  3224  0014EC  4B02               	infsnz	sprintf@f& (0+255),f,b
  3225  0014EE  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  3226  0014F0                     	if	0	;tblptru may be non-zero
  3227  0014F0                     	endif
  3228  0014F0                     	if	0	;tblptru may be non-zero
  3229  0014F0                     	endif
  3230  0014F0  0008               	tblrd		*
  3231  0014F2  FFFF               	dw	65535	; errata NOP
  3232  0014F4  CFF5 F10C          	movff	tablat,sprintf@c
  3233  0014F8  0101               	movlb	1	; () banked
  3234  0014FA  510C               	movf	sprintf@c& (0+255),w,b
  3235                           
  3236                           ; Switch size 1, requested type "space"
  3237                           ; Number of cases is 3, Range of values is 0 to 105
  3238                           ; switch strategies available:
  3239                           ; Name         Instructions Cycles
  3240                           ; simple_byte           10     6 (average)
  3241                           ;	Chosen strategy is simple_byte
  3242  0014FC  0A00               	xorlw	0	; case 0
  3243  0014FE  B4D8               	btfsc	status,2,c
  3244  001500  D09B               	goto	l3668
  3245  001502  0A64               	xorlw	100	; case 100
  3246  001504  B4D8               	btfsc	status,2,c
  3247  001506  D003               	goto	l3626
  3248  001508  0A0D               	xorlw	13	; case 105
  3249  00150A  A4D8               	btfss	status,2,c
  3250  00150C  D085               	goto	l3666
  3251  00150E                     l3626:
  3252  00150E  FFFF               	dw	65535	; assembler added errata NOP
  3253                           
  3254                           ; BSR set to: 1
  3255                           ;doprnt.c: 1253: {
  3256                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3257  001510  C106  FFD9         	movff	sprintf@ap,fsr2l
  3258  001514  C107  FFDA         	movff	sprintf@ap+1,fsr2h
  3259  001518  CFDE F10A          	movff	postinc2,sprintf@val
  3260  00151C  CFDD F10B          	movff	postdec2,sprintf@val+1
  3261                           
  3262                           ; BSR set to: 1
  3263  001520  0E02               	movlw	2
  3264  001522  0101               	movlb	1	; () banked
  3265  001524  2706               	addwf	sprintf@ap& (0+255),f,b
  3266  001526  0E00               	movlw	0
  3267  001528  2307               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3268                           
  3269                           ; BSR set to: 1
  3270                           ;doprnt.c: 1261: if((int)val < 0) {
  3271  00152A  0101               	movlb	1	; () banked
  3272  00152C  AF0B               	btfss	(sprintf@val+1)& (0+255),7,b
  3273  00152E  D008               	goto	l3636
  3274                           
  3275                           ; BSR set to: 1
  3276                           ;doprnt.c: 1262: flag |= 0x03;
  3277  001530  0E03               	movlw	3
  3278  001532  0101               	movlb	1	; () banked
  3279  001534  1308               	iorwf	sprintf@flag& (0+255),f,b
  3280                           
  3281                           ; BSR set to: 1
  3282                           ;doprnt.c: 1263: val = -val;
  3283  001536  0101               	movlb	1	; () banked
  3284  001538  6D0A               	negf	sprintf@val& (0+255),b
  3285  00153A  1F0B               	comf	(sprintf@val+1)& (0+255),f,b
  3286  00153C  B0D8               	btfsc	status,0,c
  3287  00153E  2B0B               	incf	(sprintf@val+1)& (0+255),f,b
  3288  001540                     l3636:
  3289  001540  FFFF               	dw	65535	; assembler added errata NOP
  3290                           
  3291                           ; BSR set to: 1
  3292                           ;doprnt.c: 1264: }
  3293                           ;doprnt.c: 1266: }
  3294                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3295  001542  0E01               	movlw	1
  3296  001544  0101               	movlb	1	; () banked
  3297  001546  6F0C               	movwf	sprintf@c& (0+255),b
  3298  001548                     l3638:
  3299  001548  FFFF               	dw	65535	; assembler added errata NOP
  3300                           
  3301                           ; BSR set to: 1
  3302  00154A  0E05               	movlw	5
  3303  00154C  0101               	movlb	1	; () banked
  3304  00154E  190C               	xorwf	sprintf@c& (0+255),w,b
  3305  001550  B4D8               	btfsc	status,2,c
  3306  001552  D018               	goto	l3650
  3307                           
  3308                           ; BSR set to: 1
  3309                           ;doprnt.c: 1306: if(val < dpowers[c])
  3310                           
  3311                           ; BSR set to: 1
  3312                           
  3313                           ; BSR set to: 1
  3314  001554  0101               	movlb	1	; () banked
  3315  001556  510C               	movf	sprintf@c& (0+255),w,b
  3316  001558  0D02               	mullw	2
  3317  00155A  0EE9               	movlw	low _dpowers
  3318  00155C  24F3               	addwf	prodl,w,c
  3319  00155E  6EF6               	movwf	tblptrl,c
  3320  001560  0E7E               	movlw	high _dpowers
  3321  001562  20F4               	addwfc	prodh,w,c
  3322  001564  6EF7               	movwf	tblptrh,c
  3323  001566                     	if	0	;There are less than 3 active tblptr bytes
  3324  001566                     	endif
  3325  001566  0009               	tblrd		*+
  3326  001568  FFFF               	dw	65535	; errata NOP
  3327  00156A  50F5               	movf	tablat,w,c
  3328  00156C  0101               	movlb	1	; () banked
  3329  00156E  5D0A               	subwf	sprintf@val& (0+255),w,b
  3330  001570  0009               	tblrd		*+
  3331  001572  FFFF               	dw	65535	; errata NOP
  3332  001574  50F5               	movf	tablat,w,c
  3333  001576  0101               	movlb	1	; () banked
  3334  001578  590B               	subwfb	(sprintf@val+1)& (0+255),w,b
  3335  00157A  A0D8               	btfss	status,0,c
  3336  00157C  D003               	goto	l3650
  3337                           
  3338                           ; BSR set to: 1
  3339                           
  3340                           ; BSR set to: 1
  3341                           
  3342                           ; BSR set to: 1
  3343                           ;doprnt.c: 1307: break;
  3344  00157E  0101               	movlb	1	; () banked
  3345  001580  2B0C               	incf	sprintf@c& (0+255),f,b
  3346  001582  D7E2               	goto	l3638
  3347  001584                     l3650:
  3348  001584  FFFF               	dw	65535	; assembler added errata NOP
  3349                           
  3350                           ; BSR set to: 1
  3351                           ;doprnt.c: 1422: {
  3352                           ;doprnt.c: 1438: if(flag & 0x03)
  3353  001586  C108  F02D         	movff	sprintf@flag,??_sprintf
  3354  00158A  0E03               	movlw	3
  3355  00158C  162D               	andwf	??_sprintf,f,c
  3356  00158E  B4D8               	btfsc	status,2,c
  3357  001590  D009               	goto	l3656
  3358                           
  3359                           ; BSR set to: 1
  3360                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  3361  001592  C100  FFD9         	movff	sprintf@sp,fsr2l
  3362  001596  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  3363  00159A  0E2D               	movlw	45
  3364  00159C  6EDF               	movwf	indf2,c
  3365                           
  3366                           ; BSR set to: 1
  3367  00159E  0101               	movlb	1	; () banked
  3368  0015A0  4B00               	infsnz	sprintf@sp& (0+255),f,b
  3369  0015A2  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  3370  0015A4                     l3656:
  3371  0015A4  FFFF               	dw	65535	; assembler added errata NOP
  3372                           
  3373                           ; BSR set to: 1
  3374                           ;doprnt.c: 1469: }
  3375                           ;doprnt.c: 1472: prec = c;
  3376  0015A6  C10C  F109         	movff	sprintf@c,sprintf@prec
  3377                           
  3378                           ;doprnt.c: 1474: while(prec--) {
  3379  0015AA  D02F               	goto	l3664
  3380  0015AC                     l3658:
  3381  0015AC  FFFF               	dw	65535	; assembler added errata NOP
  3382                           
  3383                           ; BSR set to: 1
  3384                           ;doprnt.c: 1478: {
  3385                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3386  0015AE  0101               	movlb	1	; () banked
  3387  0015B0  5109               	movf	sprintf@prec& (0+255),w,b
  3388  0015B2  0D02               	mullw	2
  3389  0015B4  0EE9               	movlw	low _dpowers
  3390  0015B6  24F3               	addwf	prodl,w,c
  3391  0015B8  6EF6               	movwf	tblptrl,c
  3392  0015BA  0E7E               	movlw	high _dpowers
  3393  0015BC  20F4               	addwfc	prodh,w,c
  3394  0015BE  6EF7               	movwf	tblptrh,c
  3395  0015C0                     	if	0	;There are less than 3 active tblptr bytes
  3396  0015C0                     	endif
  3397  0015C0  0009               	tblrd		*+
  3398  0015C2  FFFF               	dw	65535	; errata NOP
  3399  0015C4  CFF5 F023          	movff	tablat,___lwdiv@divisor
  3400  0015C8  000A               	tblrd		*-
  3401  0015CA  FFFF               	dw	65535	; errata NOP
  3402  0015CC  CFF5 F024          	movff	tablat,___lwdiv@divisor+1
  3403  0015D0  C10A  F021         	movff	sprintf@val,___lwdiv@dividend
  3404  0015D4  C10B  F022         	movff	sprintf@val+1,___lwdiv@dividend+1
  3405  0015D8  ECB0  F00E         	call	___lwdiv	;wreg free
  3406  0015DC  C021  F028         	movff	?___lwdiv,___lwmod@dividend
  3407  0015E0  C022  F029         	movff	?___lwdiv+1,___lwmod@dividend+1
  3408  0015E4  0E00               	movlw	0
  3409  0015E6  6E2B               	movwf	___lwmod@divisor+1,c
  3410  0015E8  0E0A               	movlw	10
  3411  0015EA  6E2A               	movwf	___lwmod@divisor,c
  3412  0015EC  EC90  F00F         	call	___lwmod	;wreg free
  3413  0015F0  5028               	movf	?___lwmod,w,c
  3414  0015F2  0F30               	addlw	48
  3415  0015F4  0101               	movlb	1	; () banked
  3416  0015F6  6F0C               	movwf	sprintf@c& (0+255),b
  3417                           
  3418                           ; BSR set to: 1
  3419                           ;doprnt.c: 1523: }
  3420                           ;doprnt.c: 1524: ((*sp++ = (c)));
  3421  0015F8  C100  FFD9         	movff	sprintf@sp,fsr2l
  3422  0015FC  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  3423  001600  C10C  FFDF         	movff	sprintf@c,indf2
  3424                           
  3425                           ; BSR set to: 1
  3426  001604  0101               	movlb	1	; () banked
  3427  001606  4B00               	infsnz	sprintf@sp& (0+255),f,b
  3428  001608  2B01               	incf	(sprintf@sp+1)& (0+255),f,b
  3429  00160A                     l3664:
  3430  00160A  FFFF               	dw	65535	; assembler added errata NOP
  3431                           
  3432                           ; BSR set to: 1
  3433  00160C  0101               	movlb	1	; () banked
  3434  00160E  0709               	decf	sprintf@prec& (0+255),f,b
  3435  001610  0101               	movlb	1	; () banked
  3436  001612  2909               	incf	sprintf@prec& (0+255),w,b
  3437  001614  A4D8               	btfss	status,2,c
  3438  001616  D7CA               	goto	l3658
  3439  001618                     l3666:
  3440  001618  FFFF               	dw	65535	; assembler added errata NOP
  3441                           
  3442                           ; BSR set to: 1
  3443  00161A  C102  FFF6         	movff	sprintf@f,tblptrl
  3444  00161E  C103  FFF7         	movff	sprintf@f+1,tblptrh
  3445  001622  0101               	movlb	1	; () banked
  3446  001624  4B02               	infsnz	sprintf@f& (0+255),f,b
  3447  001626  2B03               	incf	(sprintf@f+1)& (0+255),f,b
  3448  001628                     	if	0	;tblptru may be non-zero
  3449  001628                     	endif
  3450  001628                     	if	0	;tblptru may be non-zero
  3451  001628                     	endif
  3452  001628  0008               	tblrd		*
  3453  00162A  FFFF               	dw	65535	; errata NOP
  3454  00162C  CFF5 F10C          	movff	tablat,sprintf@c
  3455  001630  0101               	movlb	1	; () banked
  3456  001632  510C               	movf	sprintf@c& (0+255),w,b
  3457  001634  A4D8               	btfss	status,2,c
  3458  001636  D741               	goto	l3614
  3459  001638                     l3668:
  3460  001638  FFFF               	dw	65535	; assembler added errata NOP
  3461                           
  3462                           ; BSR set to: 1
  3463                           ;doprnt.c: 1538: *sp = 0;
  3464  00163A  C100  FFD9         	movff	sprintf@sp,fsr2l
  3465  00163E  C101  FFDA         	movff	sprintf@sp+1,fsr2h
  3466  001642  0E00               	movlw	0
  3467  001644  6EDF               	movwf	indf2,c
  3468                           
  3469                           ; BSR set to: 1
  3470                           
  3471                           ; BSR set to: 1
  3472                           ;doprnt.c: 1540: return 0;
  3473                           ;	Return value of _sprintf is never used
  3474  001646  0012               	return		;funcret
  3475  001648  FFFF               	dw	65535	; errata NOP
  3476  00164A                     __end_of_sprintf:
  3477                           	opt stack 0
  3478                           tblptru	equ	0xFF8
  3479                           tblptrh	equ	0xFF7
  3480                           tblptrl	equ	0xFF6
  3481                           tablat	equ	0xFF5
  3482                           prodh	equ	0xFF4
  3483                           prodl	equ	0xFF3
  3484                           postinc0	equ	0xFEE
  3485                           wreg	equ	0xFE8
  3486                           indf1	equ	0xFE7
  3487                           postdec1	equ	0xFE5
  3488                           fsr1h	equ	0xFE2
  3489                           fsr1l	equ	0xFE1
  3490                           indf2	equ	0xFDF
  3491                           postinc2	equ	0xFDE
  3492                           postdec2	equ	0xFDD
  3493                           fsr2h	equ	0xFDA
  3494                           fsr2l	equ	0xFD9
  3495                           status	equ	0xFD8
  3496                           
  3497 ;; *************** function ___lwmod *****************
  3498 ;; Defined at:
  3499 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\lwmod.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  dividend        2   39[COMRAM] unsigned int 
  3502 ;;  divisor         2   41[COMRAM] unsigned int 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  counter         1   43[COMRAM] unsigned char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  2   39[COMRAM] unsigned int 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3514 ;;      Params:         4       0       0       0       0       0       0
  3515 ;;      Locals:         1       0       0       0       0       0       0
  3516 ;;      Temps:          0       0       0       0       0       0       0
  3517 ;;      Totals:         5       0       0       0       0       0       0
  3518 ;;Total ram usage:        5 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    2
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_sprintf
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text5
  3529  001F20                     __ptext5:
  3530                           	opt stack 0
  3531  001F20                     ___lwmod:
  3532                           	opt stack 0
  3533  001F20  FFFF               	dw	65535	; assembler added errata NOP
  3534                           
  3535                           ; BSR set to: 1
  3536                           ;incstack = 0
  3537  001F22  502A               	movf	___lwmod@divisor,w,c
  3538  001F24  102B               	iorwf	___lwmod@divisor+1,w,c
  3539  001F26  B4D8               	btfsc	status,2,c
  3540  001F28  D01C               	goto	l933
  3541  001F2A  0E01               	movlw	1
  3542  001F2C  6E2C               	movwf	___lwmod@counter,c
  3543  001F2E  D005               	goto	l3586
  3544  001F30                     l3584:
  3545  001F30  FFFF               	dw	65535	; assembler added errata NOP
  3546  001F32  90D8               	bcf	status,0,c
  3547  001F34  362A               	rlcf	___lwmod@divisor,f,c
  3548  001F36  362B               	rlcf	___lwmod@divisor+1,f,c
  3549  001F38  2A2C               	incf	___lwmod@counter,f,c
  3550  001F3A                     l3586:
  3551  001F3A  FFFF               	dw	65535	; assembler added errata NOP
  3552  001F3C  AE2B               	btfss	___lwmod@divisor+1,7,c
  3553  001F3E  D7F8               	goto	l3584
  3554  001F40                     l3588:
  3555  001F40  FFFF               	dw	65535	; assembler added errata NOP
  3556  001F42  502A               	movf	___lwmod@divisor,w,c
  3557  001F44  5C28               	subwf	___lwmod@dividend,w,c
  3558  001F46  502B               	movf	___lwmod@divisor+1,w,c
  3559  001F48  5829               	subwfb	___lwmod@dividend+1,w,c
  3560  001F4A  A0D8               	btfss	status,0,c
  3561  001F4C  D004               	goto	l3592
  3562  001F4E  502A               	movf	___lwmod@divisor,w,c
  3563  001F50  5E28               	subwf	___lwmod@dividend,f,c
  3564  001F52  502B               	movf	___lwmod@divisor+1,w,c
  3565  001F54  5A29               	subwfb	___lwmod@dividend+1,f,c
  3566  001F56                     l3592:
  3567  001F56  FFFF               	dw	65535	; assembler added errata NOP
  3568  001F58  90D8               	bcf	status,0,c
  3569  001F5A  322B               	rrcf	___lwmod@divisor+1,f,c
  3570  001F5C  322A               	rrcf	___lwmod@divisor,f,c
  3571  001F5E  2E2C               	decfsz	___lwmod@counter,f,c
  3572  001F60  D7EF               	goto	l3588
  3573  001F62                     l933:
  3574  001F62  FFFF               	dw	65535	; assembler added errata NOP
  3575  001F64  C028  F028         	movff	___lwmod@dividend,?___lwmod
  3576  001F68  C029  F029         	movff	___lwmod@dividend+1,?___lwmod+1
  3577  001F6C  0012               	return		;funcret
  3578  001F6E  FFFF               	dw	65535	; errata NOP
  3579  001F70                     __end_of___lwmod:
  3580                           	opt stack 0
  3581                           tblptru	equ	0xFF8
  3582                           tblptrh	equ	0xFF7
  3583                           tblptrl	equ	0xFF6
  3584                           tablat	equ	0xFF5
  3585                           prodh	equ	0xFF4
  3586                           prodl	equ	0xFF3
  3587                           postinc0	equ	0xFEE
  3588                           wreg	equ	0xFE8
  3589                           indf1	equ	0xFE7
  3590                           postdec1	equ	0xFE5
  3591                           fsr1h	equ	0xFE2
  3592                           fsr1l	equ	0xFE1
  3593                           indf2	equ	0xFDF
  3594                           postinc2	equ	0xFDE
  3595                           postdec2	equ	0xFDD
  3596                           fsr2h	equ	0xFDA
  3597                           fsr2l	equ	0xFD9
  3598                           status	equ	0xFD8
  3599                           
  3600 ;; *************** function ___lwdiv *****************
  3601 ;; Defined at:
  3602 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\lwdiv.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  dividend        2   32[COMRAM] unsigned int 
  3605 ;;  divisor         2   34[COMRAM] unsigned int 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  quotient        2   37[COMRAM] unsigned int 
  3608 ;;  counter         1   36[COMRAM] unsigned char 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  2   32[COMRAM] unsigned int 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3618 ;;      Params:         4       0       0       0       0       0       0
  3619 ;;      Locals:         3       0       0       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0       0       0
  3621 ;;      Totals:         7       0       0       0       0       0       0
  3622 ;;Total ram usage:        7 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    2
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_sprintf
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text6
  3633  001D60                     __ptext6:
  3634                           	opt stack 0
  3635  001D60                     ___lwdiv:
  3636                           	opt stack 0
  3637  001D60  FFFF               	dw	65535	; assembler added errata NOP
  3638                           
  3639                           ;incstack = 0
  3640  001D62  0E00               	movlw	0
  3641  001D64  6E27               	movwf	___lwdiv@quotient+1,c
  3642  001D66  0E00               	movlw	0
  3643  001D68  6E26               	movwf	___lwdiv@quotient,c
  3644  001D6A  5023               	movf	___lwdiv@divisor,w,c
  3645  001D6C  1024               	iorwf	___lwdiv@divisor+1,w,c
  3646  001D6E  B4D8               	btfsc	status,2,c
  3647  001D70  D020               	goto	l923
  3648  001D72  0E01               	movlw	1
  3649  001D74  6E25               	movwf	___lwdiv@counter,c
  3650  001D76  D005               	goto	l3566
  3651  001D78                     l3564:
  3652  001D78  FFFF               	dw	65535	; assembler added errata NOP
  3653  001D7A  90D8               	bcf	status,0,c
  3654  001D7C  3623               	rlcf	___lwdiv@divisor,f,c
  3655  001D7E  3624               	rlcf	___lwdiv@divisor+1,f,c
  3656  001D80  2A25               	incf	___lwdiv@counter,f,c
  3657  001D82                     l3566:
  3658  001D82  FFFF               	dw	65535	; assembler added errata NOP
  3659  001D84  AE24               	btfss	___lwdiv@divisor+1,7,c
  3660  001D86  D7F8               	goto	l3564
  3661  001D88                     l3568:
  3662  001D88  FFFF               	dw	65535	; assembler added errata NOP
  3663  001D8A  90D8               	bcf	status,0,c
  3664  001D8C  3626               	rlcf	___lwdiv@quotient,f,c
  3665  001D8E  3627               	rlcf	___lwdiv@quotient+1,f,c
  3666  001D90  5023               	movf	___lwdiv@divisor,w,c
  3667  001D92  5C21               	subwf	___lwdiv@dividend,w,c
  3668  001D94  5024               	movf	___lwdiv@divisor+1,w,c
  3669  001D96  5822               	subwfb	___lwdiv@dividend+1,w,c
  3670  001D98  A0D8               	btfss	status,0,c
  3671  001D9A  D005               	goto	l3576
  3672  001D9C  5023               	movf	___lwdiv@divisor,w,c
  3673  001D9E  5E21               	subwf	___lwdiv@dividend,f,c
  3674  001DA0  5024               	movf	___lwdiv@divisor+1,w,c
  3675  001DA2  5A22               	subwfb	___lwdiv@dividend+1,f,c
  3676  001DA4  8026               	bsf	___lwdiv@quotient,0,c
  3677  001DA6                     l3576:
  3678  001DA6  FFFF               	dw	65535	; assembler added errata NOP
  3679  001DA8  90D8               	bcf	status,0,c
  3680  001DAA  3224               	rrcf	___lwdiv@divisor+1,f,c
  3681  001DAC  3223               	rrcf	___lwdiv@divisor,f,c
  3682  001DAE  2E25               	decfsz	___lwdiv@counter,f,c
  3683  001DB0  D7EB               	goto	l3568
  3684  001DB2                     l923:
  3685  001DB2  FFFF               	dw	65535	; assembler added errata NOP
  3686  001DB4  C026  F021         	movff	___lwdiv@quotient,?___lwdiv
  3687  001DB8  C027  F022         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3688  001DBC  0012               	return		;funcret
  3689  001DBE  FFFF               	dw	65535	; errata NOP
  3690  001DC0                     __end_of___lwdiv:
  3691                           	opt stack 0
  3692                           tblptru	equ	0xFF8
  3693                           tblptrh	equ	0xFF7
  3694                           tblptrl	equ	0xFF6
  3695                           tablat	equ	0xFF5
  3696                           prodh	equ	0xFF4
  3697                           prodl	equ	0xFF3
  3698                           postinc0	equ	0xFEE
  3699                           wreg	equ	0xFE8
  3700                           indf1	equ	0xFE7
  3701                           postdec1	equ	0xFE5
  3702                           fsr1h	equ	0xFE2
  3703                           fsr1l	equ	0xFE1
  3704                           indf2	equ	0xFDF
  3705                           postinc2	equ	0xFDE
  3706                           postdec2	equ	0xFDD
  3707                           fsr2h	equ	0xFDA
  3708                           fsr2l	equ	0xFD9
  3709                           status	equ	0xFD8
  3710                           
  3711 ;; *************** function _ledestado *****************
  3712 ;; Defined at:
  3713 ;;		line 378 in file "main.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  tiempoled       2   32[COMRAM] int 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3727 ;;      Params:         2       0       0       0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0
  3729 ;;      Temps:          1       0       0       0       0       0       0
  3730 ;;      Totals:         3       0       0       0       0       0       0
  3731 ;;Total ram usage:        3 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    2
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_main
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text7
  3742  001E1E                     __ptext7:
  3743                           	opt stack 0
  3744  001E1E                     _ledestado:
  3745                           	opt stack 0
  3746  001E1E  FFFF               	dw	65535	; assembler added errata NOP
  3747                           
  3748                           ;main.c: 379: cont_led++;
  3749                           
  3750                           ;incstack = 0
  3751  001E20  0100               	movlb	0	; () banked
  3752  001E22  4B9B               	infsnz	_cont_led& (0+255),f,b
  3753  001E24  2B9C               	incf	(_cont_led+1)& (0+255),f,b
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;main.c: 380: if (cont_led >= tiempoled) {
  3757  001E26  5021               	movf	ledestado@tiempoled,w,c
  3758  001E28  0100               	movlb	0	; () banked
  3759  001E2A  5D9B               	subwf	_cont_led& (0+255),w,b
  3760  001E2C  0100               	movlb	0	; () banked
  3761  001E2E  519C               	movf	(_cont_led+1)& (0+255),w,b
  3762  001E30  0A80               	xorlw	128
  3763  001E32  6E23               	movwf	??_ledestado& (0+255),c
  3764  001E34  5022               	movf	ledestado@tiempoled+1,w,c
  3765  001E36  0A80               	xorlw	128
  3766  001E38  5823               	subwfb	??_ledestado& (0+255),w,c
  3767  001E3A  A0D8               	btfss	status,0,c
  3768  001E3C  D015               	goto	l2458
  3769                           
  3770                           ; BSR set to: 0
  3771                           ;main.c: 381: LATBbits.LB7 = ~PORTBbits.RB7;
  3772  001E3E  AE81               	btfss	3969,7,c	;volatile
  3773  001E40  D002               	goto	u1560
  3774  001E42  0E01               	movlw	1
  3775  001E44  D002               	goto	u1566
  3776  001E46                     u1560:
  3777  001E46  FFFF               	dw	65535	; assembler added errata NOP
  3778  001E48  0E00               	movlw	0
  3779  001E4A                     u1566:
  3780  001E4A  FFFF               	dw	65535	; assembler added errata NOP
  3781  001E4C  0AFF               	xorlw	255
  3782  001E4E  6E23               	movwf	??_ledestado& (0+255),c
  3783  001E50  3223               	rrcf	??_ledestado,f,c
  3784  001E52  3223               	rrcf	??_ledestado,f,c
  3785  001E54  508A               	movf	3978,w,c	;volatile
  3786  001E56  1823               	xorwf	??_ledestado,w,c
  3787  001E58  0B7F               	andlw	-129
  3788  001E5A  1823               	xorwf	??_ledestado,w,c
  3789  001E5C  6E8A               	movwf	3978,c	;volatile
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;main.c: 382: cont_led = 0;
  3793  001E5E  0E00               	movlw	0
  3794  001E60  0100               	movlb	0	; () banked
  3795  001E62  6F9C               	movwf	(_cont_led+1)& (0+255),b
  3796  001E64  0E00               	movlw	0
  3797  001E66  6F9B               	movwf	_cont_led& (0+255),b
  3798  001E68                     l2458:
  3799  001E68  FFFF               	dw	65535	; assembler added errata NOP
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;main.c: 383: }
  3803                           ;main.c: 384: led = 0;
  3804  001E6A  0E00               	movlw	0
  3805  001E6C  0100               	movlb	0	; () banked
  3806  001E6E  6FAC               	movwf	(_led+1)& (0+255),b
  3807  001E70  0E00               	movlw	0
  3808  001E72  6FAB               	movwf	_led& (0+255),b
  3809                           
  3810                           ; BSR set to: 0
  3811  001E74  0012               	return		;funcret
  3812  001E76  FFFF               	dw	65535	; errata NOP
  3813  001E78                     __end_of_ledestado:
  3814                           	opt stack 0
  3815                           tblptru	equ	0xFF8
  3816                           tblptrh	equ	0xFF7
  3817                           tblptrl	equ	0xFF6
  3818                           tablat	equ	0xFF5
  3819                           prodh	equ	0xFF4
  3820                           prodl	equ	0xFF3
  3821                           postinc0	equ	0xFEE
  3822                           wreg	equ	0xFE8
  3823                           indf1	equ	0xFE7
  3824                           postdec1	equ	0xFE5
  3825                           fsr1h	equ	0xFE2
  3826                           fsr1l	equ	0xFE1
  3827                           indf2	equ	0xFDF
  3828                           postinc2	equ	0xFDE
  3829                           postdec2	equ	0xFDD
  3830                           fsr2h	equ	0xFDA
  3831                           fsr2l	equ	0xFD9
  3832                           status	equ	0xFD8
  3833                           
  3834 ;; *************** function _enviarTrama *****************
  3835 ;; Defined at:
  3836 ;;		line 361 in file "main.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  datos           2   32[COMRAM] PTR unsigned char 
  3839 ;;		 -> norango(65), salida(25), comandonoreconocido(22), rangoy(44), 
  3840 ;;		 -> rangox(44), saludo(12), comando(25), 
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3852 ;;      Params:         2       0       0       0       0       0       0
  3853 ;;      Locals:         0       0       0       0       0       0       0
  3854 ;;      Temps:          0       0       0       0       0       0       0
  3855 ;;      Totals:         2       0       0       0       0       0       0
  3856 ;;Total ram usage:        2 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    2
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_main
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text8
  3867  001C76                     __ptext8:
  3868                           	opt stack 0
  3869  001C76                     _enviarTrama:
  3870                           	opt stack 0
  3871  001C76  FFFF               	dw	65535	; assembler added errata NOP
  3872                           
  3873                           ;main.c: 365: while (*datos != 0) {
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;incstack = 0
  3877  001C78  D018               	goto	l2444
  3878  001C7A                     l2440:
  3879  001C7A  FFFF               	dw	65535	; assembler added errata NOP
  3880                           
  3881                           ;main.c: 366: TXREG = *datos;
  3882  001C7C  C021  FFF6         	movff	enviarTrama@datos,tblptrl
  3883  001C80  C022  FFF7         	movff	enviarTrama@datos+1,tblptrh
  3884  001C84  6AF8               	clrf	tblptru,c
  3885  001C86  0E05               	movlw	(high __ramtop+-1)
  3886  001C88  64F7               	cpfsgt	tblptrh,c
  3887  001C8A  D004               	bra	u1497
  3888  001C8C  0008               	tblrd		*
  3889  001C8E  FFFF               	dw	65535	; errata NOP
  3890  001C90  50F5               	movf	tablat,w,c
  3891  001C92  D005               	bra	u1490
  3892  001C94                     u1497:
  3893  001C94  CFF6 FFE9          	movff	tblptrl,fsr0l
  3894  001C98  CFF7 FFEA          	movff	tblptrh,fsr0h
  3895  001C9C  50EF               	movf	indf0,w,c
  3896  001C9E                     u1490:
  3897  001C9E  6EAD               	movwf	4013,c	;volatile
  3898  001CA0                     l257:
  3899  001CA0  FFFF               	dw	65535	; assembler added errata NOP
  3900  001CA2  A2AC               	btfss	4012,1,c	;volatile
  3901  001CA4  D7FD               	goto	l257
  3902                           
  3903                           ;main.c: 368: *datos++;
  3904  001CA6  4A21               	infsnz	enviarTrama@datos,f,c
  3905  001CA8  2A22               	incf	enviarTrama@datos+1,f,c
  3906  001CAA                     l2444:
  3907  001CAA  FFFF               	dw	65535	; assembler added errata NOP
  3908  001CAC  C021  FFF6         	movff	enviarTrama@datos,tblptrl
  3909  001CB0  C022  FFF7         	movff	enviarTrama@datos+1,tblptrh
  3910  001CB4  6AF8               	clrf	tblptru,c
  3911  001CB6  0E05               	movlw	(high __ramtop+-1)
  3912  001CB8  64F7               	cpfsgt	tblptrh,c
  3913  001CBA  D004               	bra	u1517
  3914  001CBC  0008               	tblrd		*
  3915  001CBE  FFFF               	dw	65535	; errata NOP
  3916  001CC0  50F5               	movf	tablat,w,c
  3917  001CC2  D005               	bra	u1510
  3918  001CC4                     u1517:
  3919  001CC4  CFF6 FFE9          	movff	tblptrl,fsr0l
  3920  001CC8  CFF7 FFEA          	movff	tblptrh,fsr0h
  3921  001CCC  50EF               	movf	indf0,w,c
  3922  001CCE                     u1510:
  3923  001CCE  0900               	iorlw	0
  3924  001CD0  A4D8               	btfss	status,2,c
  3925  001CD2  D7D3               	goto	l2440
  3926                           
  3927                           ;main.c: 369: }
  3928                           ;main.c: 371: TXREG = 0x0A;
  3929  001CD4  0E0A               	movlw	10
  3930  001CD6  6EAD               	movwf	4013,c	;volatile
  3931  001CD8                     l261:
  3932  001CD8  FFFF               	dw	65535	; assembler added errata NOP
  3933  001CDA  A2AC               	btfss	4012,1,c	;volatile
  3934  001CDC  D7FD               	goto	l261
  3935                           
  3936                           ;main.c: 373: TXREG = 0x0D;
  3937  001CDE  0E0D               	movlw	13
  3938  001CE0  6EAD               	movwf	4013,c	;volatile
  3939  001CE2                     l264:
  3940  001CE2  FFFF               	dw	65535	; assembler added errata NOP
  3941  001CE4  B2AC               	btfsc	4012,1,c	;volatile
  3942  001CE6  0012               	return		;funcret
  3943  001CE8  FFFF               	dw	65535	; assembler added errata NOP
  3944  001CEA  D7FB               	goto	l264
  3945  001CEC  FFFF               	dw	65535	; errata NOP
  3946  001CEE                     __end_of_enviarTrama:
  3947                           	opt stack 0
  3948                           tblptru	equ	0xFF8
  3949                           tblptrh	equ	0xFF7
  3950                           tblptrl	equ	0xFF6
  3951                           tablat	equ	0xFF5
  3952                           prodh	equ	0xFF4
  3953                           prodl	equ	0xFF3
  3954                           indf0	equ	0xFEF
  3955                           postinc0	equ	0xFEE
  3956                           fsr0h	equ	0xFEA
  3957                           fsr0l	equ	0xFE9
  3958                           wreg	equ	0xFE8
  3959                           indf1	equ	0xFE7
  3960                           postdec1	equ	0xFE5
  3961                           fsr1h	equ	0xFE2
  3962                           fsr1l	equ	0xFE1
  3963                           indf2	equ	0xFDF
  3964                           postinc2	equ	0xFDE
  3965                           postdec2	equ	0xFDD
  3966                           fsr2h	equ	0xFDA
  3967                           fsr2l	equ	0xFD9
  3968                           status	equ	0xFD8
  3969                           
  3970 ;; *************** function _ejeypositivo *****************
  3971 ;; Defined at:
  3972 ;;		line 548 in file "main.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  paso3           4   32[COMRAM] long 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2, status,0
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3986 ;;      Params:         4       0       0       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0
  3988 ;;      Temps:          2       0       0       0       0       0       0
  3989 ;;      Totals:         6       0       0       0       0       0       0
  3990 ;;Total ram usage:        6 bytes
  3991 ;; Hardware stack levels used:    1
  3992 ;; Hardware stack levels required when called:    2
  3993 ;; This function calls:
  3994 ;;		Nothing
  3995 ;; This function is called by:
  3996 ;;		_main
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000                           	psect	text9
  4001  000C22                     __ptext9:
  4002                           	opt stack 0
  4003  000C22                     _ejeypositivo:
  4004                           	opt stack 0
  4005  000C22  FFFF               	dw	65535	; assembler added errata NOP
  4006                           
  4007                           ;main.c: 549: while (stepcount <= paso3) {
  4008                           
  4009                           ;incstack = 0
  4010  000C24  D100               	goto	l2942
  4011  000C26                     l2850:
  4012  000C26  FFFF               	dw	65535	; assembler added errata NOP
  4013                           
  4014                           ;main.c: 550: movimiento = 1;
  4015  000C28  0E00               	movlw	0
  4016  000C2A  0100               	movlb	0	; () banked
  4017  000C2C  6FAA               	movwf	(_movimiento+1)& (0+255),b
  4018  000C2E  0E01               	movlw	1
  4019  000C30  6FA9               	movwf	_movimiento& (0+255),b
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;main.c: 551: if (currentstep > 7) {
  4023  000C32  BE3F               	btfsc	_currentstep+1,7,c
  4024  000C34  D0D6               	goto	l2940
  4025  000C36  503F               	movf	_currentstep+1,w,c
  4026  000C38  E104               	bnz	u1980
  4027  000C3A  0E08               	movlw	8
  4028  000C3C  5C3E               	subwf	_currentstep,w,c
  4029  000C3E  A0D8               	btfss	status,0,c
  4030  000C40  D0D0               	goto	l2940
  4031  000C42                     u1980:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;main.c: 552: currentstep = 0;
  4035  000C42  0E00               	movlw	0
  4036  000C44  6E3F               	movwf	_currentstep+1,c
  4037  000C46  0E00               	movlw	0
  4038  000C48  6E3E               	movwf	_currentstep,c
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;main.c: 553: }
  4042                           ;main.c: 557: switch (currentstep) {
  4043  000C4A  D0CB               	goto	l2940
  4044  000C4C                     l2856:
  4045  000C4C  FFFF               	dw	65535	; assembler added errata NOP
  4046                           
  4047                           ;main.c: 559: LATB = 0b0001;
  4048  000C4E  0E01               	movlw	1
  4049  000C50  6E8A               	movwf	3978,c	;volatile
  4050                           
  4051                           ;main.c: 560: for (i = 0; i <= vel; i++);
  4052  000C52  0E00               	movlw	0
  4053  000C54  6E3B               	movwf	_i+1,c
  4054  000C56  0E00               	movlw	0
  4055  000C58  6E3A               	movwf	_i,c
  4056  000C5A  D003               	goto	l2860
  4057  000C5C                     l2858:
  4058  000C5C  FFFF               	dw	65535	; assembler added errata NOP
  4059  000C5E  4A3A               	infsnz	_i,f,c
  4060  000C60  2A3B               	incf	_i+1,f,c
  4061  000C62                     l2860:
  4062  000C62  FFFF               	dw	65535	; assembler added errata NOP
  4063  000C64  503A               	movf	_i,w,c
  4064  000C66  5C5D               	subwf	_vel,w,c
  4065  000C68  505E               	movf	_vel+1,w,c
  4066  000C6A  0A80               	xorlw	128
  4067  000C6C  6E25               	movwf	??_ejeypositivo& (0+255),c
  4068  000C6E  503B               	movf	_i+1,w,c
  4069  000C70  0A80               	xorlw	128
  4070  000C72  5825               	subwfb	??_ejeypositivo& (0+255),w,c
  4071  000C74  B0D8               	btfsc	status,0,c
  4072  000C76  D7F2               	goto	l2858
  4073                           
  4074                           ;main.c: 561: __nop();
  4075  000C78  F000               	nop	
  4076                           
  4077                           ;main.c: 562: stepcount++;
  4078  000C7A  0E01               	movlw	1
  4079  000C7C  262E               	addwf	_stepcount,f,c
  4080  000C7E  0E00               	movlw	0
  4081  000C80  222F               	addwfc	_stepcount+1,f,c
  4082  000C82  2230               	addwfc	_stepcount+2,f,c
  4083  000C84  2231               	addwfc	_stepcount+3,f,c
  4084                           
  4085                           ;main.c: 563: __nop();
  4086  000C86  F000               	nop	
  4087  000C88  D017               	goto	l2876
  4088  000C8A                     l2868:
  4089  000C8A  FFFF               	dw	65535	; assembler added errata NOP
  4090                           
  4091                           ;main.c: 567: LATB = 0b0011;
  4092  000C8C  0E03               	movlw	3
  4093  000C8E  6E8A               	movwf	3978,c	;volatile
  4094                           
  4095                           ;main.c: 568: for (i = 0; i <= vel; i++);
  4096  000C90  0E00               	movlw	0
  4097  000C92  6E3B               	movwf	_i+1,c
  4098  000C94  0E00               	movlw	0
  4099  000C96  6E3A               	movwf	_i,c
  4100  000C98  D003               	goto	l2872
  4101  000C9A                     l2870:
  4102  000C9A  FFFF               	dw	65535	; assembler added errata NOP
  4103  000C9C  4A3A               	infsnz	_i,f,c
  4104  000C9E  2A3B               	incf	_i+1,f,c
  4105  000CA0                     l2872:
  4106  000CA0  FFFF               	dw	65535	; assembler added errata NOP
  4107  000CA2  503A               	movf	_i,w,c
  4108  000CA4  5C5D               	subwf	_vel,w,c
  4109  000CA6  505E               	movf	_vel+1,w,c
  4110  000CA8  0A80               	xorlw	128
  4111  000CAA  6E25               	movwf	??_ejeypositivo& (0+255),c
  4112  000CAC  503B               	movf	_i+1,w,c
  4113  000CAE  0A80               	xorlw	128
  4114  000CB0  5825               	subwfb	??_ejeypositivo& (0+255),w,c
  4115  000CB2  A0D8               	btfss	status,0,c
  4116  000CB4  D08E               	goto	l2934
  4117  000CB6  D7F1               	goto	l2870
  4118  000CB8                     l2876:
  4119  000CB8  FFFF               	dw	65535	; assembler added errata NOP
  4120                           
  4121                           ;main.c: 570: currentstep++;
  4122  000CBA  4A3E               	infsnz	_currentstep,f,c
  4123  000CBC  2A3F               	incf	_currentstep+1,f,c
  4124                           
  4125                           ;main.c: 571: break;
  4126  000CBE  D0B3               	goto	l2942
  4127  000CC0                     l2878:
  4128  000CC0  FFFF               	dw	65535	; assembler added errata NOP
  4129                           
  4130                           ;main.c: 573: LATB = 0b0010;
  4131  000CC2  0E02               	movlw	2
  4132  000CC4  6E8A               	movwf	3978,c	;volatile
  4133                           
  4134                           ;main.c: 574: for (i = 0; i <= vel; i++);
  4135  000CC6  0E00               	movlw	0
  4136  000CC8  6E3B               	movwf	_i+1,c
  4137  000CCA  0E00               	movlw	0
  4138  000CCC  6E3A               	movwf	_i,c
  4139  000CCE  D003               	goto	l2882
  4140  000CD0                     l2880:
  4141  000CD0  FFFF               	dw	65535	; assembler added errata NOP
  4142  000CD2  4A3A               	infsnz	_i,f,c
  4143  000CD4  2A3B               	incf	_i+1,f,c
  4144  000CD6                     l2882:
  4145  000CD6  FFFF               	dw	65535	; assembler added errata NOP
  4146  000CD8  503A               	movf	_i,w,c
  4147  000CDA  5C5D               	subwf	_vel,w,c
  4148  000CDC  505E               	movf	_vel+1,w,c
  4149  000CDE  0A80               	xorlw	128
  4150  000CE0  6E25               	movwf	??_ejeypositivo& (0+255),c
  4151  000CE2  503B               	movf	_i+1,w,c
  4152  000CE4  0A80               	xorlw	128
  4153  000CE6  5825               	subwfb	??_ejeypositivo& (0+255),w,c
  4154  000CE8  A0D8               	btfss	status,0,c
  4155  000CEA  D073               	goto	l2934
  4156  000CEC  D7F1               	goto	l2880
  4157  000CEE                     l2888:
  4158  000CEE  FFFF               	dw	65535	; assembler added errata NOP
  4159                           
  4160                           ;main.c: 579: LATB = 0b0110;
  4161  000CF0  0E06               	movlw	6
  4162  000CF2  6E8A               	movwf	3978,c	;volatile
  4163                           
  4164                           ;main.c: 580: for (i = 0; i <= vel; i++);
  4165  000CF4  0E00               	movlw	0
  4166  000CF6  6E3B               	movwf	_i+1,c
  4167  000CF8  0E00               	movlw	0
  4168  000CFA  6E3A               	movwf	_i,c
  4169  000CFC  D003               	goto	l2892
  4170  000CFE                     l2890:
  4171  000CFE  FFFF               	dw	65535	; assembler added errata NOP
  4172  000D00  4A3A               	infsnz	_i,f,c
  4173  000D02  2A3B               	incf	_i+1,f,c
  4174  000D04                     l2892:
  4175  000D04  FFFF               	dw	65535	; assembler added errata NOP
  4176  000D06  503A               	movf	_i,w,c
  4177  000D08  5C5D               	subwf	_vel,w,c
  4178  000D0A  505E               	movf	_vel+1,w,c
  4179  000D0C  0A80               	xorlw	128
  4180  000D0E  6E25               	movwf	??_ejeypositivo& (0+255),c
  4181  000D10  503B               	movf	_i+1,w,c
  4182  000D12  0A80               	xorlw	128
  4183  000D14  5825               	subwfb	??_ejeypositivo& (0+255),w,c
  4184  000D16  A0D8               	btfss	status,0,c
  4185  000D18  D05C               	goto	l2934
  4186  000D1A  D7F1               	goto	l2890
  4187  000D1C                     l2898:
  4188  000D1C  FFFF               	dw	65535	; assembler added errata NOP
  4189                           
  4190                           ;main.c: 585: LATB = 0b0100;
  4191  000D1E  0E04               	movlw	4
  4192  000D20  6E8A               	movwf	3978,c	;volatile
  4193                           
  4194                           ;main.c: 586: for (i = 0; i <= vel; i++);
  4195  000D22  0E00               	movlw	0
  4196  000D24  6E3B               	movwf	_i+1,c
  4197  000D26  0E00               	movlw	0
  4198  000D28  6E3A               	movwf	_i,c
  4199  000D2A  D003               	goto	l2902
  4200  000D2C                     l2900:
  4201  000D2C  FFFF               	dw	65535	; assembler added errata NOP
  4202  000D2E  4A3A               	infsnz	_i,f,c
  4203  000D30  2A3B               	incf	_i+1,f,c
  4204  000D32                     l2902:
  4205  000D32  FFFF               	dw	65535	; assembler added errata NOP
  4206  000D34  503A               	movf	_i,w,c
  4207  000D36  5C5D               	subwf	_vel,w,c
  4208  000D38  505E               	movf	_vel+1,w,c
  4209  000D3A  0A80               	xorlw	128
  4210  000D3C  6E25               	movwf	??_ejeypositivo& (0+255),c
  4211  000D3E  503B               	movf	_i+1,w,c
  4212  000D40  0A80               	xorlw	128
  4213  000D42  5825               	subwfb	??_ejeypositivo& (0+255),w,c
  4214  000D44  A0D8               	btfss	status,0,c
  4215  000D46  D045               	goto	l2934
  4216  000D48  D7F1               	goto	l2900
  4217  000D4A                     l2908:
  4218  000D4A  FFFF               	dw	65535	; assembler added errata NOP
  4219                           
  4220                           ;main.c: 591: LATB = 0b1100;
  4221  000D4C  0E0C               	movlw	12
  4222  000D4E  6E8A               	movwf	3978,c	;volatile
  4223                           
  4224                           ;main.c: 592: for (i = 0; i <= vel; i++);
  4225  000D50  0E00               	movlw	0
  4226  000D52  6E3B               	movwf	_i+1,c
  4227  000D54  0E00               	movlw	0
  4228  000D56  6E3A               	movwf	_i,c
  4229  000D58  D003               	goto	l2912
  4230  000D5A                     l2910:
  4231  000D5A  FFFF               	dw	65535	; assembler added errata NOP
  4232  000D5C  4A3A               	infsnz	_i,f,c
  4233  000D5E  2A3B               	incf	_i+1,f,c
  4234  000D60                     l2912:
  4235  000D60  FFFF               	dw	65535	; assembler added errata NOP
  4236  000D62  503A               	movf	_i,w,c
  4237  000D64  5C5D               	subwf	_vel,w,c
  4238  000D66  505E               	movf	_vel+1,w,c
  4239  000D68  0A80               	xorlw	128
  4240  000D6A  6E25               	movwf	??_ejeypositivo& (0+255),c
  4241  000D6C  503B               	movf	_i+1,w,c
  4242  000D6E  0A80               	xorlw	128
  4243  000D70  5825               	subwfb	??_ejeypositivo& (0+255),w,c
  4244  000D72  A0D8               	btfss	status,0,c
  4245  000D74  D02E               	goto	l2934
  4246  000D76  D7F1               	goto	l2910
  4247  000D78                     l2918:
  4248  000D78  FFFF               	dw	65535	; assembler added errata NOP
  4249                           
  4250                           ;main.c: 598: LATB = 0b1000;
  4251  000D7A  0E08               	movlw	8
  4252  000D7C  6E8A               	movwf	3978,c	;volatile
  4253                           
  4254                           ;main.c: 599: for (i = 0; i <= vel; i++);
  4255  000D7E  0E00               	movlw	0
  4256  000D80  6E3B               	movwf	_i+1,c
  4257  000D82  0E00               	movlw	0
  4258  000D84  6E3A               	movwf	_i,c
  4259  000D86  D003               	goto	l2922
  4260  000D88                     l2920:
  4261  000D88  FFFF               	dw	65535	; assembler added errata NOP
  4262  000D8A  4A3A               	infsnz	_i,f,c
  4263  000D8C  2A3B               	incf	_i+1,f,c
  4264  000D8E                     l2922:
  4265  000D8E  FFFF               	dw	65535	; assembler added errata NOP
  4266  000D90  503A               	movf	_i,w,c
  4267  000D92  5C5D               	subwf	_vel,w,c
  4268  000D94  505E               	movf	_vel+1,w,c
  4269  000D96  0A80               	xorlw	128
  4270  000D98  6E25               	movwf	??_ejeypositivo& (0+255),c
  4271  000D9A  503B               	movf	_i+1,w,c
  4272  000D9C  0A80               	xorlw	128
  4273  000D9E  5825               	subwfb	??_ejeypositivo& (0+255),w,c
  4274  000DA0  A0D8               	btfss	status,0,c
  4275  000DA2  D017               	goto	l2934
  4276  000DA4  D7F1               	goto	l2920
  4277  000DA6                     l2928:
  4278  000DA6  FFFF               	dw	65535	; assembler added errata NOP
  4279                           
  4280                           ;main.c: 604: LATB = 0b1001;
  4281  000DA8  0E09               	movlw	9
  4282  000DAA  6E8A               	movwf	3978,c	;volatile
  4283                           
  4284                           ;main.c: 605: for (i = 0; i <= vel; i++);
  4285  000DAC  0E00               	movlw	0
  4286  000DAE  6E3B               	movwf	_i+1,c
  4287  000DB0  0E00               	movlw	0
  4288  000DB2  6E3A               	movwf	_i,c
  4289  000DB4  D003               	goto	l2932
  4290  000DB6                     l2930:
  4291  000DB6  FFFF               	dw	65535	; assembler added errata NOP
  4292  000DB8  4A3A               	infsnz	_i,f,c
  4293  000DBA  2A3B               	incf	_i+1,f,c
  4294  000DBC                     l2932:
  4295  000DBC  FFFF               	dw	65535	; assembler added errata NOP
  4296  000DBE  503A               	movf	_i,w,c
  4297  000DC0  5C5D               	subwf	_vel,w,c
  4298  000DC2  505E               	movf	_vel+1,w,c
  4299  000DC4  0A80               	xorlw	128
  4300  000DC6  6E25               	movwf	??_ejeypositivo& (0+255),c
  4301  000DC8  503B               	movf	_i+1,w,c
  4302  000DCA  0A80               	xorlw	128
  4303  000DCC  5825               	subwfb	??_ejeypositivo& (0+255),w,c
  4304  000DCE  B0D8               	btfsc	status,0,c
  4305  000DD0  D7F2               	goto	l2930
  4306  000DD2                     l2934:
  4307  000DD2  FFFF               	dw	65535	; assembler added errata NOP
  4308                           
  4309                           ;main.c: 606: stepcount++;
  4310  000DD4  0E01               	movlw	1
  4311  000DD6  262E               	addwf	_stepcount,f,c
  4312  000DD8  0E00               	movlw	0
  4313  000DDA  222F               	addwfc	_stepcount+1,f,c
  4314  000DDC  2230               	addwfc	_stepcount+2,f,c
  4315  000DDE  2231               	addwfc	_stepcount+3,f,c
  4316  000DE0  D76B               	goto	l2876
  4317  000DE2                     l2940:
  4318  000DE2  FFFF               	dw	65535	; assembler added errata NOP
  4319  000DE4  C03E  F025         	movff	_currentstep,??_ejeypositivo
  4320  000DE8  C03F  F026         	movff	_currentstep+1,??_ejeypositivo+1
  4321                           
  4322                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4323                           ; Switch size 1, requested type "space"
  4324                           ; Number of cases is 1, Range of values is 0 to 0
  4325                           ; switch strategies available:
  4326                           ; Name         Instructions Cycles
  4327                           ; simple_byte            4     3 (average)
  4328                           ;	Chosen strategy is simple_byte
  4329  000DEC  5026               	movf	??_ejeypositivo+1,w,c
  4330  000DEE  0A00               	xorlw	0	; case 0
  4331  000DF0  A4D8               	btfss	status,2,c
  4332  000DF2  D019               	goto	l2942
  4333                           
  4334                           ; Switch size 1, requested type "space"
  4335                           ; Number of cases is 8, Range of values is 0 to 7
  4336                           ; switch strategies available:
  4337                           ; Name         Instructions Cycles
  4338                           ; simple_byte           25    13 (average)
  4339                           ;	Chosen strategy is simple_byte
  4340  000DF4  5025               	movf	??_ejeypositivo,w,c
  4341  000DF6  0A00               	xorlw	0	; case 0
  4342  000DF8  B4D8               	btfsc	status,2,c
  4343  000DFA  D728               	goto	l2856
  4344  000DFC  0A01               	xorlw	1	; case 1
  4345  000DFE  B4D8               	btfsc	status,2,c
  4346  000E00  D744               	goto	l2868
  4347  000E02  0A03               	xorlw	3	; case 2
  4348  000E04  B4D8               	btfsc	status,2,c
  4349  000E06  D75C               	goto	l2878
  4350  000E08  0A01               	xorlw	1	; case 3
  4351  000E0A  B4D8               	btfsc	status,2,c
  4352  000E0C  D770               	goto	l2888
  4353  000E0E  0A07               	xorlw	7	; case 4
  4354  000E10  B4D8               	btfsc	status,2,c
  4355  000E12  D784               	goto	l2898
  4356  000E14  0A01               	xorlw	1	; case 5
  4357  000E16  B4D8               	btfsc	status,2,c
  4358  000E18  D798               	goto	l2908
  4359  000E1A  0A03               	xorlw	3	; case 6
  4360  000E1C  B4D8               	btfsc	status,2,c
  4361  000E1E  D7AC               	goto	l2918
  4362  000E20  0A01               	xorlw	1	; case 7
  4363  000E22  B4D8               	btfsc	status,2,c
  4364  000E24  D7C0               	goto	l2928
  4365  000E26                     l2942:
  4366  000E26  FFFF               	dw	65535	; assembler added errata NOP
  4367  000E28  502E               	movf	_stepcount,w,c
  4368  000E2A  5C21               	subwf	ejeypositivo@paso3,w,c
  4369  000E2C  502F               	movf	_stepcount+1,w,c
  4370  000E2E  5822               	subwfb	ejeypositivo@paso3+1,w,c
  4371  000E30  5030               	movf	_stepcount+2,w,c
  4372  000E32  5823               	subwfb	ejeypositivo@paso3+2,w,c
  4373  000E34  5024               	movf	ejeypositivo@paso3+3,w,c
  4374  000E36  0A80               	xorlw	128
  4375  000E38  6E25               	movwf	??_ejeypositivo& (0+255),c
  4376  000E3A  5031               	movf	_stepcount+3,w,c
  4377  000E3C  0A80               	xorlw	128
  4378  000E3E  5825               	subwfb	??_ejeypositivo& (0+255),w,c
  4379  000E40  A0D8               	btfss	status,0,c
  4380  000E42  0012               	return		;funcret
  4381  000E44  FFFF               	dw	65535	; assembler added errata NOP
  4382  000E46  D6EF               	goto	l2850
  4383  000E48  FFFF               	dw	65535	; errata NOP
  4384  000E4A                     __end_of_ejeypositivo:
  4385                           	opt stack 0
  4386                           tblptru	equ	0xFF8
  4387                           tblptrh	equ	0xFF7
  4388                           tblptrl	equ	0xFF6
  4389                           tablat	equ	0xFF5
  4390                           prodh	equ	0xFF4
  4391                           prodl	equ	0xFF3
  4392                           indf0	equ	0xFEF
  4393                           postinc0	equ	0xFEE
  4394                           fsr0h	equ	0xFEA
  4395                           fsr0l	equ	0xFE9
  4396                           wreg	equ	0xFE8
  4397                           indf1	equ	0xFE7
  4398                           postdec1	equ	0xFE5
  4399                           fsr1h	equ	0xFE2
  4400                           fsr1l	equ	0xFE1
  4401                           indf2	equ	0xFDF
  4402                           postinc2	equ	0xFDE
  4403                           postdec2	equ	0xFDD
  4404                           fsr2h	equ	0xFDA
  4405                           fsr2l	equ	0xFD9
  4406                           status	equ	0xFD8
  4407                           
  4408 ;; *************** function _ejeynegativo *****************
  4409 ;; Defined at:
  4410 ;;		line 614 in file "main.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  paso4           4   32[COMRAM] long 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;		None
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4424 ;;      Params:         4       0       0       0       0       0       0
  4425 ;;      Locals:         0       0       0       0       0       0       0
  4426 ;;      Temps:          2       0       0       0       0       0       0
  4427 ;;      Totals:         6       0       0       0       0       0       0
  4428 ;;Total ram usage:        6 bytes
  4429 ;; Hardware stack levels used:    1
  4430 ;; Hardware stack levels required when called:    2
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_main
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text10
  4439  001072                     __ptext10:
  4440                           	opt stack 0
  4441  001072                     _ejeynegativo:
  4442                           	opt stack 0
  4443  001072  FFFF               	dw	65535	; assembler added errata NOP
  4444                           
  4445                           ;main.c: 615: while (stepcount >= paso4) {
  4446                           
  4447                           ;incstack = 0
  4448  001074  D0FA               	goto	l2640
  4449  001076                     l2550:
  4450  001076  FFFF               	dw	65535	; assembler added errata NOP
  4451                           
  4452                           ;main.c: 616: movimiento = 1;
  4453  001078  0E00               	movlw	0
  4454  00107A  0100               	movlb	0	; () banked
  4455  00107C  6FAA               	movwf	(_movimiento+1)& (0+255),b
  4456  00107E  0E01               	movlw	1
  4457  001080  6FA9               	movwf	_movimiento& (0+255),b
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;main.c: 617: if (currentstep > 7) {
  4461  001082  BE3F               	btfsc	_currentstep+1,7,c
  4462  001084  D0D0               	goto	l2638
  4463  001086  503F               	movf	_currentstep+1,w,c
  4464  001088  E104               	bnz	u1680
  4465  00108A  0E08               	movlw	8
  4466  00108C  5C3E               	subwf	_currentstep,w,c
  4467  00108E  A0D8               	btfss	status,0,c
  4468  001090  D0CA               	goto	l2638
  4469  001092                     u1680:
  4470                           
  4471                           ; BSR set to: 0
  4472                           ;main.c: 618: currentstep = 0;
  4473  001092  0E00               	movlw	0
  4474  001094  6E3F               	movwf	_currentstep+1,c
  4475  001096  0E00               	movlw	0
  4476  001098  6E3E               	movwf	_currentstep,c
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;main.c: 619: }
  4480                           ;main.c: 623: switch (currentstep) {
  4481  00109A  D0C5               	goto	l2638
  4482  00109C                     l2556:
  4483  00109C  FFFF               	dw	65535	; assembler added errata NOP
  4484                           
  4485                           ;main.c: 625: LATB = 0b1001;
  4486  00109E  0E09               	movlw	9
  4487  0010A0  6E8A               	movwf	3978,c	;volatile
  4488                           
  4489                           ;main.c: 626: for (i = 0; i <= vel; i++);
  4490  0010A2  0E00               	movlw	0
  4491  0010A4  6E3B               	movwf	_i+1,c
  4492  0010A6  0E00               	movlw	0
  4493  0010A8  6E3A               	movwf	_i,c
  4494  0010AA  D003               	goto	l2560
  4495  0010AC                     l2558:
  4496  0010AC  FFFF               	dw	65535	; assembler added errata NOP
  4497  0010AE  4A3A               	infsnz	_i,f,c
  4498  0010B0  2A3B               	incf	_i+1,f,c
  4499  0010B2                     l2560:
  4500  0010B2  FFFF               	dw	65535	; assembler added errata NOP
  4501  0010B4  503A               	movf	_i,w,c
  4502  0010B6  5C5D               	subwf	_vel,w,c
  4503  0010B8  505E               	movf	_vel+1,w,c
  4504  0010BA  0A80               	xorlw	128
  4505  0010BC  6E25               	movwf	??_ejeynegativo& (0+255),c
  4506  0010BE  503B               	movf	_i+1,w,c
  4507  0010C0  0A80               	xorlw	128
  4508  0010C2  5825               	subwfb	??_ejeynegativo& (0+255),w,c
  4509  0010C4  A0D8               	btfss	status,0,c
  4510  0010C6  D0A5               	goto	l2632
  4511  0010C8  D7F1               	goto	l2558
  4512  0010CA                     l2564:
  4513  0010CA  FFFF               	dw	65535	; assembler added errata NOP
  4514                           
  4515                           ;main.c: 628: currentstep++;
  4516  0010CC  4A3E               	infsnz	_currentstep,f,c
  4517  0010CE  2A3F               	incf	_currentstep+1,f,c
  4518                           
  4519                           ;main.c: 630: break;
  4520  0010D0  D0CC               	goto	l2640
  4521  0010D2                     l2566:
  4522  0010D2  FFFF               	dw	65535	; assembler added errata NOP
  4523                           
  4524                           ;main.c: 632: LATB = 0b1000;
  4525  0010D4  0E08               	movlw	8
  4526  0010D6  6E8A               	movwf	3978,c	;volatile
  4527                           
  4528                           ;main.c: 633: for (i = 0; i <= vel; i++);
  4529  0010D8  0E00               	movlw	0
  4530  0010DA  6E3B               	movwf	_i+1,c
  4531  0010DC  0E00               	movlw	0
  4532  0010DE  6E3A               	movwf	_i,c
  4533  0010E0  D003               	goto	l2570
  4534  0010E2                     l2568:
  4535  0010E2  FFFF               	dw	65535	; assembler added errata NOP
  4536  0010E4  4A3A               	infsnz	_i,f,c
  4537  0010E6  2A3B               	incf	_i+1,f,c
  4538  0010E8                     l2570:
  4539  0010E8  FFFF               	dw	65535	; assembler added errata NOP
  4540  0010EA  503A               	movf	_i,w,c
  4541  0010EC  5C5D               	subwf	_vel,w,c
  4542  0010EE  505E               	movf	_vel+1,w,c
  4543  0010F0  0A80               	xorlw	128
  4544  0010F2  6E25               	movwf	??_ejeynegativo& (0+255),c
  4545  0010F4  503B               	movf	_i+1,w,c
  4546  0010F6  0A80               	xorlw	128
  4547  0010F8  5825               	subwfb	??_ejeynegativo& (0+255),w,c
  4548  0010FA  A0D8               	btfss	status,0,c
  4549  0010FC  D08A               	goto	l2632
  4550  0010FE  D7F1               	goto	l2568
  4551  001100                     l2576:
  4552  001100  FFFF               	dw	65535	; assembler added errata NOP
  4553                           
  4554                           ;main.c: 638: LATB = 0b1100;
  4555  001102  0E0C               	movlw	12
  4556  001104  6E8A               	movwf	3978,c	;volatile
  4557                           
  4558                           ;main.c: 639: for (i = 0; i <= vel; i++);
  4559  001106  0E00               	movlw	0
  4560  001108  6E3B               	movwf	_i+1,c
  4561  00110A  0E00               	movlw	0
  4562  00110C  6E3A               	movwf	_i,c
  4563  00110E  D003               	goto	l2580
  4564  001110                     l2578:
  4565  001110  FFFF               	dw	65535	; assembler added errata NOP
  4566  001112  4A3A               	infsnz	_i,f,c
  4567  001114  2A3B               	incf	_i+1,f,c
  4568  001116                     l2580:
  4569  001116  FFFF               	dw	65535	; assembler added errata NOP
  4570  001118  503A               	movf	_i,w,c
  4571  00111A  5C5D               	subwf	_vel,w,c
  4572  00111C  505E               	movf	_vel+1,w,c
  4573  00111E  0A80               	xorlw	128
  4574  001120  6E25               	movwf	??_ejeynegativo& (0+255),c
  4575  001122  503B               	movf	_i+1,w,c
  4576  001124  0A80               	xorlw	128
  4577  001126  5825               	subwfb	??_ejeynegativo& (0+255),w,c
  4578  001128  A0D8               	btfss	status,0,c
  4579  00112A  D073               	goto	l2632
  4580  00112C  D7F1               	goto	l2578
  4581  00112E                     l2586:
  4582  00112E  FFFF               	dw	65535	; assembler added errata NOP
  4583                           
  4584                           ;main.c: 645: LATB = 0b0100;
  4585  001130  0E04               	movlw	4
  4586  001132  6E8A               	movwf	3978,c	;volatile
  4587                           
  4588                           ;main.c: 646: for (i = 0; i <= vel; i++);
  4589  001134  0E00               	movlw	0
  4590  001136  6E3B               	movwf	_i+1,c
  4591  001138  0E00               	movlw	0
  4592  00113A  6E3A               	movwf	_i,c
  4593  00113C  D003               	goto	l2590
  4594  00113E                     l2588:
  4595  00113E  FFFF               	dw	65535	; assembler added errata NOP
  4596  001140  4A3A               	infsnz	_i,f,c
  4597  001142  2A3B               	incf	_i+1,f,c
  4598  001144                     l2590:
  4599  001144  FFFF               	dw	65535	; assembler added errata NOP
  4600  001146  503A               	movf	_i,w,c
  4601  001148  5C5D               	subwf	_vel,w,c
  4602  00114A  505E               	movf	_vel+1,w,c
  4603  00114C  0A80               	xorlw	128
  4604  00114E  6E25               	movwf	??_ejeynegativo& (0+255),c
  4605  001150  503B               	movf	_i+1,w,c
  4606  001152  0A80               	xorlw	128
  4607  001154  5825               	subwfb	??_ejeynegativo& (0+255),w,c
  4608  001156  A0D8               	btfss	status,0,c
  4609  001158  D05C               	goto	l2632
  4610  00115A  D7F1               	goto	l2588
  4611  00115C                     l2596:
  4612  00115C  FFFF               	dw	65535	; assembler added errata NOP
  4613                           
  4614                           ;main.c: 651: LATB = 0b0110;
  4615  00115E  0E06               	movlw	6
  4616  001160  6E8A               	movwf	3978,c	;volatile
  4617                           
  4618                           ;main.c: 652: for (i = 0; i <= vel; i++);
  4619  001162  0E00               	movlw	0
  4620  001164  6E3B               	movwf	_i+1,c
  4621  001166  0E00               	movlw	0
  4622  001168  6E3A               	movwf	_i,c
  4623  00116A  D003               	goto	l2600
  4624  00116C                     l2598:
  4625  00116C  FFFF               	dw	65535	; assembler added errata NOP
  4626  00116E  4A3A               	infsnz	_i,f,c
  4627  001170  2A3B               	incf	_i+1,f,c
  4628  001172                     l2600:
  4629  001172  FFFF               	dw	65535	; assembler added errata NOP
  4630  001174  503A               	movf	_i,w,c
  4631  001176  5C5D               	subwf	_vel,w,c
  4632  001178  505E               	movf	_vel+1,w,c
  4633  00117A  0A80               	xorlw	128
  4634  00117C  6E25               	movwf	??_ejeynegativo& (0+255),c
  4635  00117E  503B               	movf	_i+1,w,c
  4636  001180  0A80               	xorlw	128
  4637  001182  5825               	subwfb	??_ejeynegativo& (0+255),w,c
  4638  001184  A0D8               	btfss	status,0,c
  4639  001186  D045               	goto	l2632
  4640  001188  D7F1               	goto	l2598
  4641  00118A                     l2606:
  4642  00118A  FFFF               	dw	65535	; assembler added errata NOP
  4643                           
  4644                           ;main.c: 657: LATB = 0b0010;
  4645  00118C  0E02               	movlw	2
  4646  00118E  6E8A               	movwf	3978,c	;volatile
  4647                           
  4648                           ;main.c: 658: for (i = 0; i <= vel; i++);
  4649  001190  0E00               	movlw	0
  4650  001192  6E3B               	movwf	_i+1,c
  4651  001194  0E00               	movlw	0
  4652  001196  6E3A               	movwf	_i,c
  4653  001198  D003               	goto	l2610
  4654  00119A                     l2608:
  4655  00119A  FFFF               	dw	65535	; assembler added errata NOP
  4656  00119C  4A3A               	infsnz	_i,f,c
  4657  00119E  2A3B               	incf	_i+1,f,c
  4658  0011A0                     l2610:
  4659  0011A0  FFFF               	dw	65535	; assembler added errata NOP
  4660  0011A2  503A               	movf	_i,w,c
  4661  0011A4  5C5D               	subwf	_vel,w,c
  4662  0011A6  505E               	movf	_vel+1,w,c
  4663  0011A8  0A80               	xorlw	128
  4664  0011AA  6E25               	movwf	??_ejeynegativo& (0+255),c
  4665  0011AC  503B               	movf	_i+1,w,c
  4666  0011AE  0A80               	xorlw	128
  4667  0011B0  5825               	subwfb	??_ejeynegativo& (0+255),w,c
  4668  0011B2  A0D8               	btfss	status,0,c
  4669  0011B4  D02E               	goto	l2632
  4670  0011B6  D7F1               	goto	l2608
  4671  0011B8                     l2616:
  4672  0011B8  FFFF               	dw	65535	; assembler added errata NOP
  4673                           
  4674                           ;main.c: 664: LATB = 0b0011;
  4675  0011BA  0E03               	movlw	3
  4676  0011BC  6E8A               	movwf	3978,c	;volatile
  4677                           
  4678                           ;main.c: 665: for (i = 0; i <= vel; i++);
  4679  0011BE  0E00               	movlw	0
  4680  0011C0  6E3B               	movwf	_i+1,c
  4681  0011C2  0E00               	movlw	0
  4682  0011C4  6E3A               	movwf	_i,c
  4683  0011C6  D003               	goto	l2620
  4684  0011C8                     l2618:
  4685  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  4686  0011CA  4A3A               	infsnz	_i,f,c
  4687  0011CC  2A3B               	incf	_i+1,f,c
  4688  0011CE                     l2620:
  4689  0011CE  FFFF               	dw	65535	; assembler added errata NOP
  4690  0011D0  503A               	movf	_i,w,c
  4691  0011D2  5C5D               	subwf	_vel,w,c
  4692  0011D4  505E               	movf	_vel+1,w,c
  4693  0011D6  0A80               	xorlw	128
  4694  0011D8  6E25               	movwf	??_ejeynegativo& (0+255),c
  4695  0011DA  503B               	movf	_i+1,w,c
  4696  0011DC  0A80               	xorlw	128
  4697  0011DE  5825               	subwfb	??_ejeynegativo& (0+255),w,c
  4698  0011E0  A0D8               	btfss	status,0,c
  4699  0011E2  D017               	goto	l2632
  4700  0011E4  D7F1               	goto	l2618
  4701  0011E6                     l2626:
  4702  0011E6  FFFF               	dw	65535	; assembler added errata NOP
  4703                           
  4704                           ;main.c: 670: LATB = 0b0001;
  4705  0011E8  0E01               	movlw	1
  4706  0011EA  6E8A               	movwf	3978,c	;volatile
  4707                           
  4708                           ;main.c: 671: for (i = 0; i <= vel; i++);
  4709  0011EC  0E00               	movlw	0
  4710  0011EE  6E3B               	movwf	_i+1,c
  4711  0011F0  0E00               	movlw	0
  4712  0011F2  6E3A               	movwf	_i,c
  4713  0011F4  D003               	goto	l2630
  4714  0011F6                     l2628:
  4715  0011F6  FFFF               	dw	65535	; assembler added errata NOP
  4716  0011F8  4A3A               	infsnz	_i,f,c
  4717  0011FA  2A3B               	incf	_i+1,f,c
  4718  0011FC                     l2630:
  4719  0011FC  FFFF               	dw	65535	; assembler added errata NOP
  4720  0011FE  503A               	movf	_i,w,c
  4721  001200  5C5D               	subwf	_vel,w,c
  4722  001202  505E               	movf	_vel+1,w,c
  4723  001204  0A80               	xorlw	128
  4724  001206  6E25               	movwf	??_ejeynegativo& (0+255),c
  4725  001208  503B               	movf	_i+1,w,c
  4726  00120A  0A80               	xorlw	128
  4727  00120C  5825               	subwfb	??_ejeynegativo& (0+255),w,c
  4728  00120E  B0D8               	btfsc	status,0,c
  4729  001210  D7F2               	goto	l2628
  4730  001212                     l2632:
  4731  001212  FFFF               	dw	65535	; assembler added errata NOP
  4732                           
  4733                           ;main.c: 672: stepcount--;
  4734  001214  0EFF               	movlw	255
  4735  001216  262E               	addwf	_stepcount,f,c
  4736  001218  0EFF               	movlw	255
  4737  00121A  222F               	addwfc	_stepcount+1,f,c
  4738  00121C  0EFF               	movlw	255
  4739  00121E  2230               	addwfc	_stepcount+2,f,c
  4740  001220  0EFF               	movlw	255
  4741  001222  2231               	addwfc	_stepcount+3,f,c
  4742  001224  D752               	goto	l2564
  4743  001226                     l2638:
  4744  001226  FFFF               	dw	65535	; assembler added errata NOP
  4745  001228  C03E  F025         	movff	_currentstep,??_ejeynegativo
  4746  00122C  C03F  F026         	movff	_currentstep+1,??_ejeynegativo+1
  4747                           
  4748                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4749                           ; Switch size 1, requested type "space"
  4750                           ; Number of cases is 1, Range of values is 0 to 0
  4751                           ; switch strategies available:
  4752                           ; Name         Instructions Cycles
  4753                           ; simple_byte            4     3 (average)
  4754                           ;	Chosen strategy is simple_byte
  4755  001230  5026               	movf	??_ejeynegativo+1,w,c
  4756  001232  0A00               	xorlw	0	; case 0
  4757  001234  A4D8               	btfss	status,2,c
  4758  001236  D019               	goto	l2640
  4759                           
  4760                           ; Switch size 1, requested type "space"
  4761                           ; Number of cases is 8, Range of values is 0 to 7
  4762                           ; switch strategies available:
  4763                           ; Name         Instructions Cycles
  4764                           ; simple_byte           25    13 (average)
  4765                           ;	Chosen strategy is simple_byte
  4766  001238  5025               	movf	??_ejeynegativo,w,c
  4767  00123A  0A00               	xorlw	0	; case 0
  4768  00123C  B4D8               	btfsc	status,2,c
  4769  00123E  D72E               	goto	l2556
  4770  001240  0A01               	xorlw	1	; case 1
  4771  001242  B4D8               	btfsc	status,2,c
  4772  001244  D746               	goto	l2566
  4773  001246  0A03               	xorlw	3	; case 2
  4774  001248  B4D8               	btfsc	status,2,c
  4775  00124A  D75A               	goto	l2576
  4776  00124C  0A01               	xorlw	1	; case 3
  4777  00124E  B4D8               	btfsc	status,2,c
  4778  001250  D76E               	goto	l2586
  4779  001252  0A07               	xorlw	7	; case 4
  4780  001254  B4D8               	btfsc	status,2,c
  4781  001256  D782               	goto	l2596
  4782  001258  0A01               	xorlw	1	; case 5
  4783  00125A  B4D8               	btfsc	status,2,c
  4784  00125C  D796               	goto	l2606
  4785  00125E  0A03               	xorlw	3	; case 6
  4786  001260  B4D8               	btfsc	status,2,c
  4787  001262  D7AA               	goto	l2616
  4788  001264  0A01               	xorlw	1	; case 7
  4789  001266  B4D8               	btfsc	status,2,c
  4790  001268  D7BE               	goto	l2626
  4791  00126A                     l2640:
  4792  00126A  FFFF               	dw	65535	; assembler added errata NOP
  4793  00126C  5021               	movf	ejeynegativo@paso4,w,c
  4794  00126E  5C2E               	subwf	_stepcount,w,c
  4795  001270  5022               	movf	ejeynegativo@paso4+1,w,c
  4796  001272  582F               	subwfb	_stepcount+1,w,c
  4797  001274  5023               	movf	ejeynegativo@paso4+2,w,c
  4798  001276  5830               	subwfb	_stepcount+2,w,c
  4799  001278  5031               	movf	_stepcount+3,w,c
  4800  00127A  0A80               	xorlw	128
  4801  00127C  6E25               	movwf	??_ejeynegativo& (0+255),c
  4802  00127E  5024               	movf	ejeynegativo@paso4+3,w,c
  4803  001280  0A80               	xorlw	128
  4804  001282  5825               	subwfb	??_ejeynegativo& (0+255),w,c
  4805  001284  A0D8               	btfss	status,0,c
  4806  001286  0012               	return		;funcret
  4807  001288  FFFF               	dw	65535	; assembler added errata NOP
  4808  00128A  D6F5               	goto	l2550
  4809  00128C  FFFF               	dw	65535	; errata NOP
  4810  00128E                     __end_of_ejeynegativo:
  4811                           	opt stack 0
  4812                           tblptru	equ	0xFF8
  4813                           tblptrh	equ	0xFF7
  4814                           tblptrl	equ	0xFF6
  4815                           tablat	equ	0xFF5
  4816                           prodh	equ	0xFF4
  4817                           prodl	equ	0xFF3
  4818                           indf0	equ	0xFEF
  4819                           postinc0	equ	0xFEE
  4820                           fsr0h	equ	0xFEA
  4821                           fsr0l	equ	0xFE9
  4822                           wreg	equ	0xFE8
  4823                           indf1	equ	0xFE7
  4824                           postdec1	equ	0xFE5
  4825                           fsr1h	equ	0xFE2
  4826                           fsr1l	equ	0xFE1
  4827                           indf2	equ	0xFDF
  4828                           postinc2	equ	0xFDE
  4829                           postdec2	equ	0xFDD
  4830                           fsr2h	equ	0xFDA
  4831                           fsr2l	equ	0xFD9
  4832                           status	equ	0xFD8
  4833                           
  4834 ;; *************** function _ejexpositivo *****************
  4835 ;; Defined at:
  4836 ;;		line 413 in file "main.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  paso            4   32[COMRAM] long 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;		None
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4850 ;;      Params:         4       0       0       0       0       0       0
  4851 ;;      Locals:         0       0       0       0       0       0       0
  4852 ;;      Temps:          2       0       0       0       0       0       0
  4853 ;;      Totals:         6       0       0       0       0       0       0
  4854 ;;Total ram usage:        6 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    2
  4857 ;; This function calls:
  4858 ;;		Nothing
  4859 ;; This function is called by:
  4860 ;;		_main
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text11
  4865  000E4A                     __ptext11:
  4866                           	opt stack 0
  4867  000E4A                     _ejexpositivo:
  4868                           	opt stack 0
  4869  000E4A  FFFF               	dw	65535	; assembler added errata NOP
  4870                           
  4871                           ;main.c: 414: while (stepcount <= paso) {
  4872                           
  4873                           ;incstack = 0
  4874  000E4C  D100               	goto	l2840
  4875  000E4E                     l2748:
  4876  000E4E  FFFF               	dw	65535	; assembler added errata NOP
  4877                           
  4878                           ;main.c: 415: movimiento = 1;
  4879  000E50  0E00               	movlw	0
  4880  000E52  0100               	movlb	0	; () banked
  4881  000E54  6FAA               	movwf	(_movimiento+1)& (0+255),b
  4882  000E56  0E01               	movlw	1
  4883  000E58  6FA9               	movwf	_movimiento& (0+255),b
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;main.c: 416: if (currentstep > 7) {
  4887  000E5A  BE3F               	btfsc	_currentstep+1,7,c
  4888  000E5C  D0D6               	goto	l2838
  4889  000E5E  503F               	movf	_currentstep+1,w,c
  4890  000E60  E104               	bnz	u1880
  4891  000E62  0E08               	movlw	8
  4892  000E64  5C3E               	subwf	_currentstep,w,c
  4893  000E66  A0D8               	btfss	status,0,c
  4894  000E68  D0D0               	goto	l2838
  4895  000E6A                     u1880:
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;main.c: 417: currentstep = 0;
  4899  000E6A  0E00               	movlw	0
  4900  000E6C  6E3F               	movwf	_currentstep+1,c
  4901  000E6E  0E00               	movlw	0
  4902  000E70  6E3E               	movwf	_currentstep,c
  4903                           
  4904                           ; BSR set to: 0
  4905                           ;main.c: 418: }
  4906                           ;main.c: 422: switch (currentstep) {
  4907  000E72  D0CB               	goto	l2838
  4908  000E74                     l2754:
  4909  000E74  FFFF               	dw	65535	; assembler added errata NOP
  4910                           
  4911                           ;main.c: 424: LATA = 0b0001;
  4912  000E76  0E01               	movlw	1
  4913  000E78  6E89               	movwf	3977,c	;volatile
  4914                           
  4915                           ;main.c: 425: for (i = 0; i <= vel; i++);
  4916  000E7A  0E00               	movlw	0
  4917  000E7C  6E3B               	movwf	_i+1,c
  4918  000E7E  0E00               	movlw	0
  4919  000E80  6E3A               	movwf	_i,c
  4920  000E82  D003               	goto	l2758
  4921  000E84                     l2756:
  4922  000E84  FFFF               	dw	65535	; assembler added errata NOP
  4923  000E86  4A3A               	infsnz	_i,f,c
  4924  000E88  2A3B               	incf	_i+1,f,c
  4925  000E8A                     l2758:
  4926  000E8A  FFFF               	dw	65535	; assembler added errata NOP
  4927  000E8C  503A               	movf	_i,w,c
  4928  000E8E  5C5D               	subwf	_vel,w,c
  4929  000E90  505E               	movf	_vel+1,w,c
  4930  000E92  0A80               	xorlw	128
  4931  000E94  6E25               	movwf	??_ejexpositivo& (0+255),c
  4932  000E96  503B               	movf	_i+1,w,c
  4933  000E98  0A80               	xorlw	128
  4934  000E9A  5825               	subwfb	??_ejexpositivo& (0+255),w,c
  4935  000E9C  B0D8               	btfsc	status,0,c
  4936  000E9E  D7F2               	goto	l2756
  4937                           
  4938                           ;main.c: 426: __nop();
  4939  000EA0  F000               	nop	
  4940                           
  4941                           ;main.c: 427: stepcount++;
  4942  000EA2  0E01               	movlw	1
  4943  000EA4  262E               	addwf	_stepcount,f,c
  4944  000EA6  0E00               	movlw	0
  4945  000EA8  222F               	addwfc	_stepcount+1,f,c
  4946  000EAA  2230               	addwfc	_stepcount+2,f,c
  4947  000EAC  2231               	addwfc	_stepcount+3,f,c
  4948                           
  4949                           ;main.c: 428: __nop();
  4950  000EAE  F000               	nop	
  4951  000EB0  D017               	goto	l2774
  4952  000EB2                     l2766:
  4953  000EB2  FFFF               	dw	65535	; assembler added errata NOP
  4954                           
  4955                           ;main.c: 432: LATA = 0b0011;
  4956  000EB4  0E03               	movlw	3
  4957  000EB6  6E89               	movwf	3977,c	;volatile
  4958                           
  4959                           ;main.c: 433: for (i = 0; i <= vel; i++);
  4960  000EB8  0E00               	movlw	0
  4961  000EBA  6E3B               	movwf	_i+1,c
  4962  000EBC  0E00               	movlw	0
  4963  000EBE  6E3A               	movwf	_i,c
  4964  000EC0  D003               	goto	l2770
  4965  000EC2                     l2768:
  4966  000EC2  FFFF               	dw	65535	; assembler added errata NOP
  4967  000EC4  4A3A               	infsnz	_i,f,c
  4968  000EC6  2A3B               	incf	_i+1,f,c
  4969  000EC8                     l2770:
  4970  000EC8  FFFF               	dw	65535	; assembler added errata NOP
  4971  000ECA  503A               	movf	_i,w,c
  4972  000ECC  5C5D               	subwf	_vel,w,c
  4973  000ECE  505E               	movf	_vel+1,w,c
  4974  000ED0  0A80               	xorlw	128
  4975  000ED2  6E25               	movwf	??_ejexpositivo& (0+255),c
  4976  000ED4  503B               	movf	_i+1,w,c
  4977  000ED6  0A80               	xorlw	128
  4978  000ED8  5825               	subwfb	??_ejexpositivo& (0+255),w,c
  4979  000EDA  A0D8               	btfss	status,0,c
  4980  000EDC  D08E               	goto	l2832
  4981  000EDE  D7F1               	goto	l2768
  4982  000EE0                     l2774:
  4983  000EE0  FFFF               	dw	65535	; assembler added errata NOP
  4984                           
  4985                           ;main.c: 435: currentstep++;
  4986  000EE2  4A3E               	infsnz	_currentstep,f,c
  4987  000EE4  2A3F               	incf	_currentstep+1,f,c
  4988                           
  4989                           ;main.c: 436: break;
  4990  000EE6  D0B3               	goto	l2840
  4991  000EE8                     l2776:
  4992  000EE8  FFFF               	dw	65535	; assembler added errata NOP
  4993                           
  4994                           ;main.c: 438: LATA = 0b0010;
  4995  000EEA  0E02               	movlw	2
  4996  000EEC  6E89               	movwf	3977,c	;volatile
  4997                           
  4998                           ;main.c: 439: for (i = 0; i <= vel; i++);
  4999  000EEE  0E00               	movlw	0
  5000  000EF0  6E3B               	movwf	_i+1,c
  5001  000EF2  0E00               	movlw	0
  5002  000EF4  6E3A               	movwf	_i,c
  5003  000EF6  D003               	goto	l2780
  5004  000EF8                     l2778:
  5005  000EF8  FFFF               	dw	65535	; assembler added errata NOP
  5006  000EFA  4A3A               	infsnz	_i,f,c
  5007  000EFC  2A3B               	incf	_i+1,f,c
  5008  000EFE                     l2780:
  5009  000EFE  FFFF               	dw	65535	; assembler added errata NOP
  5010  000F00  503A               	movf	_i,w,c
  5011  000F02  5C5D               	subwf	_vel,w,c
  5012  000F04  505E               	movf	_vel+1,w,c
  5013  000F06  0A80               	xorlw	128
  5014  000F08  6E25               	movwf	??_ejexpositivo& (0+255),c
  5015  000F0A  503B               	movf	_i+1,w,c
  5016  000F0C  0A80               	xorlw	128
  5017  000F0E  5825               	subwfb	??_ejexpositivo& (0+255),w,c
  5018  000F10  A0D8               	btfss	status,0,c
  5019  000F12  D073               	goto	l2832
  5020  000F14  D7F1               	goto	l2778
  5021  000F16                     l2786:
  5022  000F16  FFFF               	dw	65535	; assembler added errata NOP
  5023                           
  5024                           ;main.c: 444: LATA = 0b0110;
  5025  000F18  0E06               	movlw	6
  5026  000F1A  6E89               	movwf	3977,c	;volatile
  5027                           
  5028                           ;main.c: 445: for (i = 0; i <= vel; i++);
  5029  000F1C  0E00               	movlw	0
  5030  000F1E  6E3B               	movwf	_i+1,c
  5031  000F20  0E00               	movlw	0
  5032  000F22  6E3A               	movwf	_i,c
  5033  000F24  D003               	goto	l2790
  5034  000F26                     l2788:
  5035  000F26  FFFF               	dw	65535	; assembler added errata NOP
  5036  000F28  4A3A               	infsnz	_i,f,c
  5037  000F2A  2A3B               	incf	_i+1,f,c
  5038  000F2C                     l2790:
  5039  000F2C  FFFF               	dw	65535	; assembler added errata NOP
  5040  000F2E  503A               	movf	_i,w,c
  5041  000F30  5C5D               	subwf	_vel,w,c
  5042  000F32  505E               	movf	_vel+1,w,c
  5043  000F34  0A80               	xorlw	128
  5044  000F36  6E25               	movwf	??_ejexpositivo& (0+255),c
  5045  000F38  503B               	movf	_i+1,w,c
  5046  000F3A  0A80               	xorlw	128
  5047  000F3C  5825               	subwfb	??_ejexpositivo& (0+255),w,c
  5048  000F3E  A0D8               	btfss	status,0,c
  5049  000F40  D05C               	goto	l2832
  5050  000F42  D7F1               	goto	l2788
  5051  000F44                     l2796:
  5052  000F44  FFFF               	dw	65535	; assembler added errata NOP
  5053                           
  5054                           ;main.c: 450: LATA = 0b0100;
  5055  000F46  0E04               	movlw	4
  5056  000F48  6E89               	movwf	3977,c	;volatile
  5057                           
  5058                           ;main.c: 451: for (i = 0; i <= vel; i++);
  5059  000F4A  0E00               	movlw	0
  5060  000F4C  6E3B               	movwf	_i+1,c
  5061  000F4E  0E00               	movlw	0
  5062  000F50  6E3A               	movwf	_i,c
  5063  000F52  D003               	goto	l2800
  5064  000F54                     l2798:
  5065  000F54  FFFF               	dw	65535	; assembler added errata NOP
  5066  000F56  4A3A               	infsnz	_i,f,c
  5067  000F58  2A3B               	incf	_i+1,f,c
  5068  000F5A                     l2800:
  5069  000F5A  FFFF               	dw	65535	; assembler added errata NOP
  5070  000F5C  503A               	movf	_i,w,c
  5071  000F5E  5C5D               	subwf	_vel,w,c
  5072  000F60  505E               	movf	_vel+1,w,c
  5073  000F62  0A80               	xorlw	128
  5074  000F64  6E25               	movwf	??_ejexpositivo& (0+255),c
  5075  000F66  503B               	movf	_i+1,w,c
  5076  000F68  0A80               	xorlw	128
  5077  000F6A  5825               	subwfb	??_ejexpositivo& (0+255),w,c
  5078  000F6C  A0D8               	btfss	status,0,c
  5079  000F6E  D045               	goto	l2832
  5080  000F70  D7F1               	goto	l2798
  5081  000F72                     l2806:
  5082  000F72  FFFF               	dw	65535	; assembler added errata NOP
  5083                           
  5084                           ;main.c: 456: LATA = 0b1100;
  5085  000F74  0E0C               	movlw	12
  5086  000F76  6E89               	movwf	3977,c	;volatile
  5087                           
  5088                           ;main.c: 457: for (i = 0; i <= vel; i++);
  5089  000F78  0E00               	movlw	0
  5090  000F7A  6E3B               	movwf	_i+1,c
  5091  000F7C  0E00               	movlw	0
  5092  000F7E  6E3A               	movwf	_i,c
  5093  000F80  D003               	goto	l2810
  5094  000F82                     l2808:
  5095  000F82  FFFF               	dw	65535	; assembler added errata NOP
  5096  000F84  4A3A               	infsnz	_i,f,c
  5097  000F86  2A3B               	incf	_i+1,f,c
  5098  000F88                     l2810:
  5099  000F88  FFFF               	dw	65535	; assembler added errata NOP
  5100  000F8A  503A               	movf	_i,w,c
  5101  000F8C  5C5D               	subwf	_vel,w,c
  5102  000F8E  505E               	movf	_vel+1,w,c
  5103  000F90  0A80               	xorlw	128
  5104  000F92  6E25               	movwf	??_ejexpositivo& (0+255),c
  5105  000F94  503B               	movf	_i+1,w,c
  5106  000F96  0A80               	xorlw	128
  5107  000F98  5825               	subwfb	??_ejexpositivo& (0+255),w,c
  5108  000F9A  A0D8               	btfss	status,0,c
  5109  000F9C  D02E               	goto	l2832
  5110  000F9E  D7F1               	goto	l2808
  5111  000FA0                     l2816:
  5112  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  5113                           
  5114                           ;main.c: 463: LATA = 0b1000;
  5115  000FA2  0E08               	movlw	8
  5116  000FA4  6E89               	movwf	3977,c	;volatile
  5117                           
  5118                           ;main.c: 464: for (i = 0; i <= vel; i++);
  5119  000FA6  0E00               	movlw	0
  5120  000FA8  6E3B               	movwf	_i+1,c
  5121  000FAA  0E00               	movlw	0
  5122  000FAC  6E3A               	movwf	_i,c
  5123  000FAE  D003               	goto	l2820
  5124  000FB0                     l2818:
  5125  000FB0  FFFF               	dw	65535	; assembler added errata NOP
  5126  000FB2  4A3A               	infsnz	_i,f,c
  5127  000FB4  2A3B               	incf	_i+1,f,c
  5128  000FB6                     l2820:
  5129  000FB6  FFFF               	dw	65535	; assembler added errata NOP
  5130  000FB8  503A               	movf	_i,w,c
  5131  000FBA  5C5D               	subwf	_vel,w,c
  5132  000FBC  505E               	movf	_vel+1,w,c
  5133  000FBE  0A80               	xorlw	128
  5134  000FC0  6E25               	movwf	??_ejexpositivo& (0+255),c
  5135  000FC2  503B               	movf	_i+1,w,c
  5136  000FC4  0A80               	xorlw	128
  5137  000FC6  5825               	subwfb	??_ejexpositivo& (0+255),w,c
  5138  000FC8  A0D8               	btfss	status,0,c
  5139  000FCA  D017               	goto	l2832
  5140  000FCC  D7F1               	goto	l2818
  5141  000FCE                     l2826:
  5142  000FCE  FFFF               	dw	65535	; assembler added errata NOP
  5143                           
  5144                           ;main.c: 469: LATA = 0b1001;
  5145  000FD0  0E09               	movlw	9
  5146  000FD2  6E89               	movwf	3977,c	;volatile
  5147                           
  5148                           ;main.c: 470: for (i = 0; i <= vel; i++);
  5149  000FD4  0E00               	movlw	0
  5150  000FD6  6E3B               	movwf	_i+1,c
  5151  000FD8  0E00               	movlw	0
  5152  000FDA  6E3A               	movwf	_i,c
  5153  000FDC  D003               	goto	l2830
  5154  000FDE                     l2828:
  5155  000FDE  FFFF               	dw	65535	; assembler added errata NOP
  5156  000FE0  4A3A               	infsnz	_i,f,c
  5157  000FE2  2A3B               	incf	_i+1,f,c
  5158  000FE4                     l2830:
  5159  000FE4  FFFF               	dw	65535	; assembler added errata NOP
  5160  000FE6  503A               	movf	_i,w,c
  5161  000FE8  5C5D               	subwf	_vel,w,c
  5162  000FEA  505E               	movf	_vel+1,w,c
  5163  000FEC  0A80               	xorlw	128
  5164  000FEE  6E25               	movwf	??_ejexpositivo& (0+255),c
  5165  000FF0  503B               	movf	_i+1,w,c
  5166  000FF2  0A80               	xorlw	128
  5167  000FF4  5825               	subwfb	??_ejexpositivo& (0+255),w,c
  5168  000FF6  B0D8               	btfsc	status,0,c
  5169  000FF8  D7F2               	goto	l2828
  5170  000FFA                     l2832:
  5171  000FFA  FFFF               	dw	65535	; assembler added errata NOP
  5172                           
  5173                           ;main.c: 471: stepcount++;
  5174  000FFC  0E01               	movlw	1
  5175  000FFE  262E               	addwf	_stepcount,f,c
  5176  001000  0E00               	movlw	0
  5177  001002  222F               	addwfc	_stepcount+1,f,c
  5178  001004  2230               	addwfc	_stepcount+2,f,c
  5179  001006  2231               	addwfc	_stepcount+3,f,c
  5180  001008  D76B               	goto	l2774
  5181  00100A                     l2838:
  5182  00100A  FFFF               	dw	65535	; assembler added errata NOP
  5183  00100C  C03E  F025         	movff	_currentstep,??_ejexpositivo
  5184  001010  C03F  F026         	movff	_currentstep+1,??_ejexpositivo+1
  5185                           
  5186                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5187                           ; Switch size 1, requested type "space"
  5188                           ; Number of cases is 1, Range of values is 0 to 0
  5189                           ; switch strategies available:
  5190                           ; Name         Instructions Cycles
  5191                           ; simple_byte            4     3 (average)
  5192                           ;	Chosen strategy is simple_byte
  5193  001014  5026               	movf	??_ejexpositivo+1,w,c
  5194  001016  0A00               	xorlw	0	; case 0
  5195  001018  A4D8               	btfss	status,2,c
  5196  00101A  D019               	goto	l2840
  5197                           
  5198                           ; Switch size 1, requested type "space"
  5199                           ; Number of cases is 8, Range of values is 0 to 7
  5200                           ; switch strategies available:
  5201                           ; Name         Instructions Cycles
  5202                           ; simple_byte           25    13 (average)
  5203                           ;	Chosen strategy is simple_byte
  5204  00101C  5025               	movf	??_ejexpositivo,w,c
  5205  00101E  0A00               	xorlw	0	; case 0
  5206  001020  B4D8               	btfsc	status,2,c
  5207  001022  D728               	goto	l2754
  5208  001024  0A01               	xorlw	1	; case 1
  5209  001026  B4D8               	btfsc	status,2,c
  5210  001028  D744               	goto	l2766
  5211  00102A  0A03               	xorlw	3	; case 2
  5212  00102C  B4D8               	btfsc	status,2,c
  5213  00102E  D75C               	goto	l2776
  5214  001030  0A01               	xorlw	1	; case 3
  5215  001032  B4D8               	btfsc	status,2,c
  5216  001034  D770               	goto	l2786
  5217  001036  0A07               	xorlw	7	; case 4
  5218  001038  B4D8               	btfsc	status,2,c
  5219  00103A  D784               	goto	l2796
  5220  00103C  0A01               	xorlw	1	; case 5
  5221  00103E  B4D8               	btfsc	status,2,c
  5222  001040  D798               	goto	l2806
  5223  001042  0A03               	xorlw	3	; case 6
  5224  001044  B4D8               	btfsc	status,2,c
  5225  001046  D7AC               	goto	l2816
  5226  001048  0A01               	xorlw	1	; case 7
  5227  00104A  B4D8               	btfsc	status,2,c
  5228  00104C  D7C0               	goto	l2826
  5229  00104E                     l2840:
  5230  00104E  FFFF               	dw	65535	; assembler added errata NOP
  5231  001050  502E               	movf	_stepcount,w,c
  5232  001052  5C21               	subwf	ejexpositivo@paso,w,c
  5233  001054  502F               	movf	_stepcount+1,w,c
  5234  001056  5822               	subwfb	ejexpositivo@paso+1,w,c
  5235  001058  5030               	movf	_stepcount+2,w,c
  5236  00105A  5823               	subwfb	ejexpositivo@paso+2,w,c
  5237  00105C  5024               	movf	ejexpositivo@paso+3,w,c
  5238  00105E  0A80               	xorlw	128
  5239  001060  6E25               	movwf	??_ejexpositivo& (0+255),c
  5240  001062  5031               	movf	_stepcount+3,w,c
  5241  001064  0A80               	xorlw	128
  5242  001066  5825               	subwfb	??_ejexpositivo& (0+255),w,c
  5243  001068  A0D8               	btfss	status,0,c
  5244  00106A  0012               	return		;funcret
  5245  00106C  FFFF               	dw	65535	; assembler added errata NOP
  5246  00106E  D6EF               	goto	l2748
  5247  001070  FFFF               	dw	65535	; errata NOP
  5248  001072                     __end_of_ejexpositivo:
  5249                           	opt stack 0
  5250                           tblptru	equ	0xFF8
  5251                           tblptrh	equ	0xFF7
  5252                           tblptrl	equ	0xFF6
  5253                           tablat	equ	0xFF5
  5254                           prodh	equ	0xFF4
  5255                           prodl	equ	0xFF3
  5256                           indf0	equ	0xFEF
  5257                           postinc0	equ	0xFEE
  5258                           fsr0h	equ	0xFEA
  5259                           fsr0l	equ	0xFE9
  5260                           wreg	equ	0xFE8
  5261                           indf1	equ	0xFE7
  5262                           postdec1	equ	0xFE5
  5263                           fsr1h	equ	0xFE2
  5264                           fsr1l	equ	0xFE1
  5265                           indf2	equ	0xFDF
  5266                           postinc2	equ	0xFDE
  5267                           postdec2	equ	0xFDD
  5268                           fsr2h	equ	0xFDA
  5269                           fsr2l	equ	0xFD9
  5270                           status	equ	0xFD8
  5271                           
  5272 ;; *************** function _ejexnegativo *****************
  5273 ;; Defined at:
  5274 ;;		line 480 in file "main.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  paso2           4   32[COMRAM] long 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		wreg, status,2, status,0
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5288 ;;      Params:         4       0       0       0       0       0       0
  5289 ;;      Locals:         0       0       0       0       0       0       0
  5290 ;;      Temps:          2       0       0       0       0       0       0
  5291 ;;      Totals:         6       0       0       0       0       0       0
  5292 ;;Total ram usage:        6 bytes
  5293 ;; Hardware stack levels used:    1
  5294 ;; Hardware stack levels required when called:    2
  5295 ;; This function calls:
  5296 ;;		Nothing
  5297 ;; This function is called by:
  5298 ;;		_main
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text12
  5303  00128E                     __ptext12:
  5304                           	opt stack 0
  5305  00128E                     _ejexnegativo:
  5306                           	opt stack 0
  5307  00128E  FFFF               	dw	65535	; assembler added errata NOP
  5308                           
  5309                           ;main.c: 481: while (stepcount >= paso2) {
  5310                           
  5311                           ;incstack = 0
  5312  001290  D0FA               	goto	l2740
  5313  001292                     l2650:
  5314  001292  FFFF               	dw	65535	; assembler added errata NOP
  5315                           
  5316                           ;main.c: 482: movimiento = 1;
  5317  001294  0E00               	movlw	0
  5318  001296  0100               	movlb	0	; () banked
  5319  001298  6FAA               	movwf	(_movimiento+1)& (0+255),b
  5320  00129A  0E01               	movlw	1
  5321  00129C  6FA9               	movwf	_movimiento& (0+255),b
  5322                           
  5323                           ; BSR set to: 0
  5324                           ;main.c: 483: if (currentstep > 7) {
  5325  00129E  BE3F               	btfsc	_currentstep+1,7,c
  5326  0012A0  D0D0               	goto	l2738
  5327  0012A2  503F               	movf	_currentstep+1,w,c
  5328  0012A4  E104               	bnz	u1780
  5329  0012A6  0E08               	movlw	8
  5330  0012A8  5C3E               	subwf	_currentstep,w,c
  5331  0012AA  A0D8               	btfss	status,0,c
  5332  0012AC  D0CA               	goto	l2738
  5333  0012AE                     u1780:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;main.c: 484: currentstep = 0;
  5337  0012AE  0E00               	movlw	0
  5338  0012B0  6E3F               	movwf	_currentstep+1,c
  5339  0012B2  0E00               	movlw	0
  5340  0012B4  6E3E               	movwf	_currentstep,c
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;main.c: 485: }
  5344                           ;main.c: 489: switch (currentstep) {
  5345  0012B6  D0C5               	goto	l2738
  5346  0012B8                     l2656:
  5347  0012B8  FFFF               	dw	65535	; assembler added errata NOP
  5348                           
  5349                           ;main.c: 491: LATA = 0b1001;
  5350  0012BA  0E09               	movlw	9
  5351  0012BC  6E89               	movwf	3977,c	;volatile
  5352                           
  5353                           ;main.c: 492: for (i = 0; i <= vel; i++);
  5354  0012BE  0E00               	movlw	0
  5355  0012C0  6E3B               	movwf	_i+1,c
  5356  0012C2  0E00               	movlw	0
  5357  0012C4  6E3A               	movwf	_i,c
  5358  0012C6  D003               	goto	l2660
  5359  0012C8                     l2658:
  5360  0012C8  FFFF               	dw	65535	; assembler added errata NOP
  5361  0012CA  4A3A               	infsnz	_i,f,c
  5362  0012CC  2A3B               	incf	_i+1,f,c
  5363  0012CE                     l2660:
  5364  0012CE  FFFF               	dw	65535	; assembler added errata NOP
  5365  0012D0  503A               	movf	_i,w,c
  5366  0012D2  5C5D               	subwf	_vel,w,c
  5367  0012D4  505E               	movf	_vel+1,w,c
  5368  0012D6  0A80               	xorlw	128
  5369  0012D8  6E25               	movwf	??_ejexnegativo& (0+255),c
  5370  0012DA  503B               	movf	_i+1,w,c
  5371  0012DC  0A80               	xorlw	128
  5372  0012DE  5825               	subwfb	??_ejexnegativo& (0+255),w,c
  5373  0012E0  A0D8               	btfss	status,0,c
  5374  0012E2  D0A5               	goto	l2732
  5375  0012E4  D7F1               	goto	l2658
  5376  0012E6                     l2664:
  5377  0012E6  FFFF               	dw	65535	; assembler added errata NOP
  5378                           
  5379                           ;main.c: 494: currentstep++;
  5380  0012E8  4A3E               	infsnz	_currentstep,f,c
  5381  0012EA  2A3F               	incf	_currentstep+1,f,c
  5382                           
  5383                           ;main.c: 496: break;
  5384  0012EC  D0CC               	goto	l2740
  5385  0012EE                     l2666:
  5386  0012EE  FFFF               	dw	65535	; assembler added errata NOP
  5387                           
  5388                           ;main.c: 498: LATA = 0b1000;
  5389  0012F0  0E08               	movlw	8
  5390  0012F2  6E89               	movwf	3977,c	;volatile
  5391                           
  5392                           ;main.c: 499: for (i = 0; i <= vel; i++);
  5393  0012F4  0E00               	movlw	0
  5394  0012F6  6E3B               	movwf	_i+1,c
  5395  0012F8  0E00               	movlw	0
  5396  0012FA  6E3A               	movwf	_i,c
  5397  0012FC  D003               	goto	l2670
  5398  0012FE                     l2668:
  5399  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  5400  001300  4A3A               	infsnz	_i,f,c
  5401  001302  2A3B               	incf	_i+1,f,c
  5402  001304                     l2670:
  5403  001304  FFFF               	dw	65535	; assembler added errata NOP
  5404  001306  503A               	movf	_i,w,c
  5405  001308  5C5D               	subwf	_vel,w,c
  5406  00130A  505E               	movf	_vel+1,w,c
  5407  00130C  0A80               	xorlw	128
  5408  00130E  6E25               	movwf	??_ejexnegativo& (0+255),c
  5409  001310  503B               	movf	_i+1,w,c
  5410  001312  0A80               	xorlw	128
  5411  001314  5825               	subwfb	??_ejexnegativo& (0+255),w,c
  5412  001316  A0D8               	btfss	status,0,c
  5413  001318  D08A               	goto	l2732
  5414  00131A  D7F1               	goto	l2668
  5415  00131C                     l2676:
  5416  00131C  FFFF               	dw	65535	; assembler added errata NOP
  5417                           
  5418                           ;main.c: 504: LATA = 0b1100;
  5419  00131E  0E0C               	movlw	12
  5420  001320  6E89               	movwf	3977,c	;volatile
  5421                           
  5422                           ;main.c: 505: for (i = 0; i <= vel; i++);
  5423  001322  0E00               	movlw	0
  5424  001324  6E3B               	movwf	_i+1,c
  5425  001326  0E00               	movlw	0
  5426  001328  6E3A               	movwf	_i,c
  5427  00132A  D003               	goto	l2680
  5428  00132C                     l2678:
  5429  00132C  FFFF               	dw	65535	; assembler added errata NOP
  5430  00132E  4A3A               	infsnz	_i,f,c
  5431  001330  2A3B               	incf	_i+1,f,c
  5432  001332                     l2680:
  5433  001332  FFFF               	dw	65535	; assembler added errata NOP
  5434  001334  503A               	movf	_i,w,c
  5435  001336  5C5D               	subwf	_vel,w,c
  5436  001338  505E               	movf	_vel+1,w,c
  5437  00133A  0A80               	xorlw	128
  5438  00133C  6E25               	movwf	??_ejexnegativo& (0+255),c
  5439  00133E  503B               	movf	_i+1,w,c
  5440  001340  0A80               	xorlw	128
  5441  001342  5825               	subwfb	??_ejexnegativo& (0+255),w,c
  5442  001344  A0D8               	btfss	status,0,c
  5443  001346  D073               	goto	l2732
  5444  001348  D7F1               	goto	l2678
  5445  00134A                     l2686:
  5446  00134A  FFFF               	dw	65535	; assembler added errata NOP
  5447                           
  5448                           ;main.c: 511: LATA = 0b0100;
  5449  00134C  0E04               	movlw	4
  5450  00134E  6E89               	movwf	3977,c	;volatile
  5451                           
  5452                           ;main.c: 512: for (i = 0; i <= vel; i++);
  5453  001350  0E00               	movlw	0
  5454  001352  6E3B               	movwf	_i+1,c
  5455  001354  0E00               	movlw	0
  5456  001356  6E3A               	movwf	_i,c
  5457  001358  D003               	goto	l2690
  5458  00135A                     l2688:
  5459  00135A  FFFF               	dw	65535	; assembler added errata NOP
  5460  00135C  4A3A               	infsnz	_i,f,c
  5461  00135E  2A3B               	incf	_i+1,f,c
  5462  001360                     l2690:
  5463  001360  FFFF               	dw	65535	; assembler added errata NOP
  5464  001362  503A               	movf	_i,w,c
  5465  001364  5C5D               	subwf	_vel,w,c
  5466  001366  505E               	movf	_vel+1,w,c
  5467  001368  0A80               	xorlw	128
  5468  00136A  6E25               	movwf	??_ejexnegativo& (0+255),c
  5469  00136C  503B               	movf	_i+1,w,c
  5470  00136E  0A80               	xorlw	128
  5471  001370  5825               	subwfb	??_ejexnegativo& (0+255),w,c
  5472  001372  A0D8               	btfss	status,0,c
  5473  001374  D05C               	goto	l2732
  5474  001376  D7F1               	goto	l2688
  5475  001378                     l2696:
  5476  001378  FFFF               	dw	65535	; assembler added errata NOP
  5477                           
  5478                           ;main.c: 517: LATA = 0b0110;
  5479  00137A  0E06               	movlw	6
  5480  00137C  6E89               	movwf	3977,c	;volatile
  5481                           
  5482                           ;main.c: 518: for (i = 0; i <= vel; i++);
  5483  00137E  0E00               	movlw	0
  5484  001380  6E3B               	movwf	_i+1,c
  5485  001382  0E00               	movlw	0
  5486  001384  6E3A               	movwf	_i,c
  5487  001386  D003               	goto	l2700
  5488  001388                     l2698:
  5489  001388  FFFF               	dw	65535	; assembler added errata NOP
  5490  00138A  4A3A               	infsnz	_i,f,c
  5491  00138C  2A3B               	incf	_i+1,f,c
  5492  00138E                     l2700:
  5493  00138E  FFFF               	dw	65535	; assembler added errata NOP
  5494  001390  503A               	movf	_i,w,c
  5495  001392  5C5D               	subwf	_vel,w,c
  5496  001394  505E               	movf	_vel+1,w,c
  5497  001396  0A80               	xorlw	128
  5498  001398  6E25               	movwf	??_ejexnegativo& (0+255),c
  5499  00139A  503B               	movf	_i+1,w,c
  5500  00139C  0A80               	xorlw	128
  5501  00139E  5825               	subwfb	??_ejexnegativo& (0+255),w,c
  5502  0013A0  A0D8               	btfss	status,0,c
  5503  0013A2  D045               	goto	l2732
  5504  0013A4  D7F1               	goto	l2698
  5505  0013A6                     l2706:
  5506  0013A6  FFFF               	dw	65535	; assembler added errata NOP
  5507                           
  5508                           ;main.c: 523: LATA = 0b0010;
  5509  0013A8  0E02               	movlw	2
  5510  0013AA  6E89               	movwf	3977,c	;volatile
  5511                           
  5512                           ;main.c: 524: for (i = 0; i <= vel; i++);
  5513  0013AC  0E00               	movlw	0
  5514  0013AE  6E3B               	movwf	_i+1,c
  5515  0013B0  0E00               	movlw	0
  5516  0013B2  6E3A               	movwf	_i,c
  5517  0013B4  D003               	goto	l2710
  5518  0013B6                     l2708:
  5519  0013B6  FFFF               	dw	65535	; assembler added errata NOP
  5520  0013B8  4A3A               	infsnz	_i,f,c
  5521  0013BA  2A3B               	incf	_i+1,f,c
  5522  0013BC                     l2710:
  5523  0013BC  FFFF               	dw	65535	; assembler added errata NOP
  5524  0013BE  503A               	movf	_i,w,c
  5525  0013C0  5C5D               	subwf	_vel,w,c
  5526  0013C2  505E               	movf	_vel+1,w,c
  5527  0013C4  0A80               	xorlw	128
  5528  0013C6  6E25               	movwf	??_ejexnegativo& (0+255),c
  5529  0013C8  503B               	movf	_i+1,w,c
  5530  0013CA  0A80               	xorlw	128
  5531  0013CC  5825               	subwfb	??_ejexnegativo& (0+255),w,c
  5532  0013CE  A0D8               	btfss	status,0,c
  5533  0013D0  D02E               	goto	l2732
  5534  0013D2  D7F1               	goto	l2708
  5535  0013D4                     l2716:
  5536  0013D4  FFFF               	dw	65535	; assembler added errata NOP
  5537                           
  5538                           ;main.c: 530: LATA = 0b0011;
  5539  0013D6  0E03               	movlw	3
  5540  0013D8  6E89               	movwf	3977,c	;volatile
  5541                           
  5542                           ;main.c: 531: for (i = 0; i <= vel; i++);
  5543  0013DA  0E00               	movlw	0
  5544  0013DC  6E3B               	movwf	_i+1,c
  5545  0013DE  0E00               	movlw	0
  5546  0013E0  6E3A               	movwf	_i,c
  5547  0013E2  D003               	goto	l2720
  5548  0013E4                     l2718:
  5549  0013E4  FFFF               	dw	65535	; assembler added errata NOP
  5550  0013E6  4A3A               	infsnz	_i,f,c
  5551  0013E8  2A3B               	incf	_i+1,f,c
  5552  0013EA                     l2720:
  5553  0013EA  FFFF               	dw	65535	; assembler added errata NOP
  5554  0013EC  503A               	movf	_i,w,c
  5555  0013EE  5C5D               	subwf	_vel,w,c
  5556  0013F0  505E               	movf	_vel+1,w,c
  5557  0013F2  0A80               	xorlw	128
  5558  0013F4  6E25               	movwf	??_ejexnegativo& (0+255),c
  5559  0013F6  503B               	movf	_i+1,w,c
  5560  0013F8  0A80               	xorlw	128
  5561  0013FA  5825               	subwfb	??_ejexnegativo& (0+255),w,c
  5562  0013FC  A0D8               	btfss	status,0,c
  5563  0013FE  D017               	goto	l2732
  5564  001400  D7F1               	goto	l2718
  5565  001402                     l2726:
  5566  001402  FFFF               	dw	65535	; assembler added errata NOP
  5567                           
  5568                           ;main.c: 536: LATA = 0b0001;
  5569  001404  0E01               	movlw	1
  5570  001406  6E89               	movwf	3977,c	;volatile
  5571                           
  5572                           ;main.c: 537: for (i = 0; i <= vel; i++);
  5573  001408  0E00               	movlw	0
  5574  00140A  6E3B               	movwf	_i+1,c
  5575  00140C  0E00               	movlw	0
  5576  00140E  6E3A               	movwf	_i,c
  5577  001410  D003               	goto	l2730
  5578  001412                     l2728:
  5579  001412  FFFF               	dw	65535	; assembler added errata NOP
  5580  001414  4A3A               	infsnz	_i,f,c
  5581  001416  2A3B               	incf	_i+1,f,c
  5582  001418                     l2730:
  5583  001418  FFFF               	dw	65535	; assembler added errata NOP
  5584  00141A  503A               	movf	_i,w,c
  5585  00141C  5C5D               	subwf	_vel,w,c
  5586  00141E  505E               	movf	_vel+1,w,c
  5587  001420  0A80               	xorlw	128
  5588  001422  6E25               	movwf	??_ejexnegativo& (0+255),c
  5589  001424  503B               	movf	_i+1,w,c
  5590  001426  0A80               	xorlw	128
  5591  001428  5825               	subwfb	??_ejexnegativo& (0+255),w,c
  5592  00142A  B0D8               	btfsc	status,0,c
  5593  00142C  D7F2               	goto	l2728
  5594  00142E                     l2732:
  5595  00142E  FFFF               	dw	65535	; assembler added errata NOP
  5596                           
  5597                           ;main.c: 538: stepcount--;
  5598  001430  0EFF               	movlw	255
  5599  001432  262E               	addwf	_stepcount,f,c
  5600  001434  0EFF               	movlw	255
  5601  001436  222F               	addwfc	_stepcount+1,f,c
  5602  001438  0EFF               	movlw	255
  5603  00143A  2230               	addwfc	_stepcount+2,f,c
  5604  00143C  0EFF               	movlw	255
  5605  00143E  2231               	addwfc	_stepcount+3,f,c
  5606  001440  D752               	goto	l2664
  5607  001442                     l2738:
  5608  001442  FFFF               	dw	65535	; assembler added errata NOP
  5609  001444  C03E  F025         	movff	_currentstep,??_ejexnegativo
  5610  001448  C03F  F026         	movff	_currentstep+1,??_ejexnegativo+1
  5611                           
  5612                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5613                           ; Switch size 1, requested type "space"
  5614                           ; Number of cases is 1, Range of values is 0 to 0
  5615                           ; switch strategies available:
  5616                           ; Name         Instructions Cycles
  5617                           ; simple_byte            4     3 (average)
  5618                           ;	Chosen strategy is simple_byte
  5619  00144C  5026               	movf	??_ejexnegativo+1,w,c
  5620  00144E  0A00               	xorlw	0	; case 0
  5621  001450  A4D8               	btfss	status,2,c
  5622  001452  D019               	goto	l2740
  5623                           
  5624                           ; Switch size 1, requested type "space"
  5625                           ; Number of cases is 8, Range of values is 0 to 7
  5626                           ; switch strategies available:
  5627                           ; Name         Instructions Cycles
  5628                           ; simple_byte           25    13 (average)
  5629                           ;	Chosen strategy is simple_byte
  5630  001454  5025               	movf	??_ejexnegativo,w,c
  5631  001456  0A00               	xorlw	0	; case 0
  5632  001458  B4D8               	btfsc	status,2,c
  5633  00145A  D72E               	goto	l2656
  5634  00145C  0A01               	xorlw	1	; case 1
  5635  00145E  B4D8               	btfsc	status,2,c
  5636  001460  D746               	goto	l2666
  5637  001462  0A03               	xorlw	3	; case 2
  5638  001464  B4D8               	btfsc	status,2,c
  5639  001466  D75A               	goto	l2676
  5640  001468  0A01               	xorlw	1	; case 3
  5641  00146A  B4D8               	btfsc	status,2,c
  5642  00146C  D76E               	goto	l2686
  5643  00146E  0A07               	xorlw	7	; case 4
  5644  001470  B4D8               	btfsc	status,2,c
  5645  001472  D782               	goto	l2696
  5646  001474  0A01               	xorlw	1	; case 5
  5647  001476  B4D8               	btfsc	status,2,c
  5648  001478  D796               	goto	l2706
  5649  00147A  0A03               	xorlw	3	; case 6
  5650  00147C  B4D8               	btfsc	status,2,c
  5651  00147E  D7AA               	goto	l2716
  5652  001480  0A01               	xorlw	1	; case 7
  5653  001482  B4D8               	btfsc	status,2,c
  5654  001484  D7BE               	goto	l2726
  5655  001486                     l2740:
  5656  001486  FFFF               	dw	65535	; assembler added errata NOP
  5657  001488  5021               	movf	ejexnegativo@paso2,w,c
  5658  00148A  5C2E               	subwf	_stepcount,w,c
  5659  00148C  5022               	movf	ejexnegativo@paso2+1,w,c
  5660  00148E  582F               	subwfb	_stepcount+1,w,c
  5661  001490  5023               	movf	ejexnegativo@paso2+2,w,c
  5662  001492  5830               	subwfb	_stepcount+2,w,c
  5663  001494  5031               	movf	_stepcount+3,w,c
  5664  001496  0A80               	xorlw	128
  5665  001498  6E25               	movwf	??_ejexnegativo& (0+255),c
  5666  00149A  5024               	movf	ejexnegativo@paso2+3,w,c
  5667  00149C  0A80               	xorlw	128
  5668  00149E  5825               	subwfb	??_ejexnegativo& (0+255),w,c
  5669  0014A0  A0D8               	btfss	status,0,c
  5670  0014A2  0012               	return		;funcret
  5671  0014A4  FFFF               	dw	65535	; assembler added errata NOP
  5672  0014A6  D6F5               	goto	l2650
  5673  0014A8  FFFF               	dw	65535	; errata NOP
  5674  0014AA                     __end_of_ejexnegativo:
  5675                           	opt stack 0
  5676                           tblptru	equ	0xFF8
  5677                           tblptrh	equ	0xFF7
  5678                           tblptrl	equ	0xFF6
  5679                           tablat	equ	0xFF5
  5680                           prodh	equ	0xFF4
  5681                           prodl	equ	0xFF3
  5682                           indf0	equ	0xFEF
  5683                           postinc0	equ	0xFEE
  5684                           fsr0h	equ	0xFEA
  5685                           fsr0l	equ	0xFE9
  5686                           wreg	equ	0xFE8
  5687                           indf1	equ	0xFE7
  5688                           postdec1	equ	0xFE5
  5689                           fsr1h	equ	0xFE2
  5690                           fsr1l	equ	0xFE1
  5691                           indf2	equ	0xFDF
  5692                           postinc2	equ	0xFDE
  5693                           postdec2	equ	0xFDD
  5694                           fsr2h	equ	0xFDA
  5695                           fsr2l	equ	0xFD9
  5696                           status	equ	0xFD8
  5697                           
  5698 ;; *************** function _apagarM2 *****************
  5699 ;; Defined at:
  5700 ;;		line 406 in file "main.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      void 
  5707 ;; Registers used:
  5708 ;;		None
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5714 ;;      Params:         0       0       0       0       0       0       0
  5715 ;;      Locals:         0       0       0       0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0       0       0
  5717 ;;      Totals:         0       0       0       0       0       0       0
  5718 ;;Total ram usage:        0 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    2
  5721 ;; This function calls:
  5722 ;;		Nothing
  5723 ;; This function is called by:
  5724 ;;		_main
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           	psect	text13
  5729  001FAE                     __ptext13:
  5730                           	opt stack 0
  5731  001FAE                     _apagarM2:
  5732                           	opt stack 0
  5733  001FAE  FFFF               	dw	65535	; assembler added errata NOP
  5734                           
  5735                           ;main.c: 407: LATBbits.LB0 = 0;
  5736                           
  5737                           ;incstack = 0
  5738  001FB0  908A               	bcf	3978,0,c	;volatile
  5739                           
  5740                           ;main.c: 408: LATBbits.LB1 = 0;
  5741  001FB2  928A               	bcf	3978,1,c	;volatile
  5742                           
  5743                           ;main.c: 409: LATBbits.LB2 = 0;
  5744  001FB4  948A               	bcf	3978,2,c	;volatile
  5745                           
  5746                           ;main.c: 410: LATBbits.LB3 = 0;
  5747  001FB6  968A               	bcf	3978,3,c	;volatile
  5748  001FB8  0012               	return		;funcret
  5749  001FBA  FFFF               	dw	65535	; errata NOP
  5750  001FBC                     __end_of_apagarM2:
  5751                           	opt stack 0
  5752                           tblptru	equ	0xFF8
  5753                           tblptrh	equ	0xFF7
  5754                           tblptrl	equ	0xFF6
  5755                           tablat	equ	0xFF5
  5756                           prodh	equ	0xFF4
  5757                           prodl	equ	0xFF3
  5758                           indf0	equ	0xFEF
  5759                           postinc0	equ	0xFEE
  5760                           fsr0h	equ	0xFEA
  5761                           fsr0l	equ	0xFE9
  5762                           wreg	equ	0xFE8
  5763                           indf1	equ	0xFE7
  5764                           postdec1	equ	0xFE5
  5765                           fsr1h	equ	0xFE2
  5766                           fsr1l	equ	0xFE1
  5767                           indf2	equ	0xFDF
  5768                           postinc2	equ	0xFDE
  5769                           postdec2	equ	0xFDD
  5770                           fsr2h	equ	0xFDA
  5771                           fsr2l	equ	0xFD9
  5772                           status	equ	0xFD8
  5773                           
  5774 ;; *************** function _apagarM1 *****************
  5775 ;; Defined at:
  5776 ;;		line 402 in file "main.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;		None
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;		None
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  1    wreg      void 
  5783 ;; Registers used:
  5784 ;;		wreg, status,2
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5790 ;;      Params:         0       0       0       0       0       0       0
  5791 ;;      Locals:         0       0       0       0       0       0       0
  5792 ;;      Temps:          0       0       0       0       0       0       0
  5793 ;;      Totals:         0       0       0       0       0       0       0
  5794 ;;Total ram usage:        0 bytes
  5795 ;; Hardware stack levels used:    1
  5796 ;; Hardware stack levels required when called:    2
  5797 ;; This function calls:
  5798 ;;		Nothing
  5799 ;; This function is called by:
  5800 ;;		_main
  5801 ;; This function uses a non-reentrant model
  5802 ;;
  5803                           
  5804                           	psect	text14
  5805  001FC8                     __ptext14:
  5806                           	opt stack 0
  5807  001FC8                     _apagarM1:
  5808                           	opt stack 0
  5809  001FC8  FFFF               	dw	65535	; assembler added errata NOP
  5810                           
  5811                           ;main.c: 403: LATA = 0;
  5812                           
  5813                           ;incstack = 0
  5814  001FCA  0E00               	movlw	0
  5815  001FCC  6E89               	movwf	3977,c	;volatile
  5816  001FCE  0012               	return		;funcret
  5817  001FD0  FFFF               	dw	65535	; errata NOP
  5818  001FD2                     __end_of_apagarM1:
  5819                           	opt stack 0
  5820                           tblptru	equ	0xFF8
  5821                           tblptrh	equ	0xFF7
  5822                           tblptrl	equ	0xFF6
  5823                           tablat	equ	0xFF5
  5824                           prodh	equ	0xFF4
  5825                           prodl	equ	0xFF3
  5826                           indf0	equ	0xFEF
  5827                           postinc0	equ	0xFEE
  5828                           fsr0h	equ	0xFEA
  5829                           fsr0l	equ	0xFE9
  5830                           wreg	equ	0xFE8
  5831                           indf1	equ	0xFE7
  5832                           postdec1	equ	0xFE5
  5833                           fsr1h	equ	0xFE2
  5834                           fsr1l	equ	0xFE1
  5835                           indf2	equ	0xFDF
  5836                           postinc2	equ	0xFDE
  5837                           postdec2	equ	0xFDD
  5838                           fsr2h	equ	0xFDA
  5839                           fsr2l	equ	0xFD9
  5840                           status	equ	0xFD8
  5841                           
  5842 ;; *************** function ___fttol *****************
  5843 ;; Defined at:
  5844 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\fttol.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;  f1              3   12[BANK1 ] float 
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;  lval            4   22[BANK1 ] unsigned long 
  5849 ;;  exp1            1   26[BANK1 ] unsigned char 
  5850 ;;  sign1           1   21[BANK1 ] unsigned char 
  5851 ;; Return value:  Size  Location     Type
  5852 ;;                  4   12[BANK1 ] long 
  5853 ;; Registers used:
  5854 ;;		wreg, status,2, status,0
  5855 ;; Tracked objects:
  5856 ;;		On entry : 0/0
  5857 ;;		On exit  : 0/0
  5858 ;;		Unchanged: 0/0
  5859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5860 ;;      Params:         0       0       4       0       0       0       0
  5861 ;;      Locals:         0       0       6       0       0       0       0
  5862 ;;      Temps:          0       0       5       0       0       0       0
  5863 ;;      Totals:         0       0      15       0       0       0       0
  5864 ;;Total ram usage:       15 bytes
  5865 ;; Hardware stack levels used:    1
  5866 ;; Hardware stack levels required when called:    2
  5867 ;; This function calls:
  5868 ;;		Nothing
  5869 ;; This function is called by:
  5870 ;;		_main
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text15
  5875  001A7E                     __ptext15:
  5876                           	opt stack 0
  5877  001A7E                     ___fttol:
  5878                           	opt stack 0
  5879  001A7E  FFFF               	dw	65535	; assembler added errata NOP
  5880                           
  5881                           ;incstack = 0
  5882  001A80  C10E  F110         	movff	___fttol@f1+2,??___fttol
  5883  001A84  0101               	movlb	1	; () banked
  5884  001A86  6B11               	clrf	(??___fttol+1)& (0+255),b
  5885  001A88  6B12               	clrf	(??___fttol+2)& (0+255),b
  5886  001A8A  0101               	movlb	1	; () banked
  5887  001A8C  350D               	rlcf	(___fttol@f1+1)& (0+255),w,b
  5888  001A8E  0101               	movlb	1	; () banked
  5889  001A90  3710               	rlcf	??___fttol& (0+255),f,b
  5890  001A92  E301               	bnc	u2941
  5891  001A94  8111               	bsf	(??___fttol+1)& (0+255),0,b
  5892  001A96                     u2941:
  5893  001A96  0101               	movlb	1	; () banked
  5894  001A98  5110               	movf	??___fttol& (0+255),w,b
  5895  001A9A  0101               	movlb	1	; () banked
  5896  001A9C  6F1A               	movwf	___fttol@exp1& (0+255),b
  5897  001A9E  0101               	movlb	1	; () banked
  5898  001AA0  511A               	movf	___fttol@exp1& (0+255),w,b
  5899  001AA2  B4D8               	btfsc	status,2,c
  5900  001AA4  D051               	goto	l3762
  5901                           
  5902                           ; BSR set to: 1
  5903                           
  5904                           ; BSR set to: 1
  5905                           
  5906                           ; BSR set to: 1
  5907                           
  5908                           ; BSR set to: 1
  5909  001AA6  0E17               	movlw	23
  5910  001AA8  0101               	movlb	1	; () banked
  5911  001AAA  6F10               	movwf	??___fttol& (0+255),b
  5912  001AAC  C10C  F111         	movff	___fttol@f1,??___fttol+1
  5913  001AB0  C10D  F112         	movff	___fttol@f1+1,??___fttol+2
  5914  001AB4  C10E  F113         	movff	___fttol@f1+2,??___fttol+3
  5915  001AB8  0101               	movlb	1	; () banked
  5916  001ABA  2910               	incf	??___fttol& (0+255),w,b
  5917  001ABC  0101               	movlb	1	; () banked
  5918  001ABE  6F14               	movwf	(??___fttol+4)& (0+255),b
  5919  001AC0  D006               	goto	u2960
  5920  001AC2                     u2965:
  5921  001AC2  FFFF               	dw	65535	; assembler added errata NOP
  5922  001AC4  0101               	movlb	1	; () banked
  5923  001AC6  90D8               	bcf	status,0,c
  5924  001AC8  3313               	rrcf	(??___fttol+3)& (0+255),f,b
  5925  001ACA  3312               	rrcf	(??___fttol+2)& (0+255),f,b
  5926  001ACC  3311               	rrcf	(??___fttol+1)& (0+255),f,b
  5927  001ACE                     u2960:
  5928  001ACE  FFFF               	dw	65535	; assembler added errata NOP
  5929  001AD0  0101               	movlb	1	; () banked
  5930  001AD2  2F14               	decfsz	(??___fttol+4)& (0+255),f,b
  5931  001AD4  D7F6               	goto	u2965
  5932  001AD6  0101               	movlb	1	; () banked
  5933  001AD8  5111               	movf	(??___fttol+1)& (0+255),w,b
  5934  001ADA  0101               	movlb	1	; () banked
  5935  001ADC  6F15               	movwf	___fttol@sign1& (0+255),b
  5936                           
  5937                           ; BSR set to: 1
  5938  001ADE  0101               	movlb	1	; () banked
  5939  001AE0  8F0D               	bsf	(___fttol@f1+1)& (0+255),7,b
  5940                           
  5941                           ; BSR set to: 1
  5942  001AE2  0EFF               	movlw	255
  5943  001AE4  0101               	movlb	1	; () banked
  5944  001AE6  170C               	andwf	___fttol@f1& (0+255),f,b
  5945  001AE8  0EFF               	movlw	255
  5946  001AEA  0101               	movlb	1	; () banked
  5947  001AEC  170D               	andwf	(___fttol@f1+1)& (0+255),f,b
  5948  001AEE  0E00               	movlw	0
  5949  001AF0  0101               	movlb	1	; () banked
  5950  001AF2  170E               	andwf	(___fttol@f1+2)& (0+255),f,b
  5951                           
  5952                           ; BSR set to: 1
  5953  001AF4  0101               	movlb	1	; () banked
  5954  001AF6  510C               	movf	___fttol@f1& (0+255),w,b
  5955  001AF8  0101               	movlb	1	; () banked
  5956  001AFA  6F16               	movwf	___fttol@lval& (0+255),b
  5957  001AFC  0101               	movlb	1	; () banked
  5958  001AFE  510D               	movf	(___fttol@f1+1)& (0+255),w,b
  5959  001B00  0101               	movlb	1	; () banked
  5960  001B02  6F17               	movwf	(___fttol@lval+1)& (0+255),b
  5961  001B04  0101               	movlb	1	; () banked
  5962  001B06  510E               	movf	(___fttol@f1+2)& (0+255),w,b
  5963  001B08  0101               	movlb	1	; () banked
  5964  001B0A  6F18               	movwf	(___fttol@lval+2)& (0+255),b
  5965  001B0C  0101               	movlb	1	; () banked
  5966  001B0E  6B19               	clrf	(___fttol@lval+3)& (0+255),b
  5967                           
  5968                           ; BSR set to: 1
  5969  001B10  0E8E               	movlw	142
  5970  001B12  0101               	movlb	1	; () banked
  5971  001B14  5F1A               	subwf	___fttol@exp1& (0+255),f,b
  5972                           
  5973                           ; BSR set to: 1
  5974  001B16  0101               	movlb	1	; () banked
  5975  001B18  AF1A               	btfss	___fttol@exp1& (0+255),7,b
  5976  001B1A  D011               	goto	l3760
  5977                           
  5978                           ; BSR set to: 1
  5979  001B1C  0101               	movlb	1	; () banked
  5980  001B1E  511A               	movf	___fttol@exp1& (0+255),w,b
  5981  001B20  0A80               	xorlw	128
  5982  001B22  0F8F               	addlw	143
  5983  001B24  A0D8               	btfss	status,0,c
  5984  001B26  D010               	goto	l3762
  5985  001B28                     l3756:
  5986  001B28  FFFF               	dw	65535	; assembler added errata NOP
  5987                           
  5988                           ; BSR set to: 1
  5989  001B2A  0101               	movlb	1	; () banked
  5990  001B2C  90D8               	bcf	status,0,c
  5991  001B2E  3319               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5992  001B30  3318               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5993  001B32  3317               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5994  001B34  3316               	rrcf	___fttol@lval& (0+255),f,b
  5995                           
  5996                           ; BSR set to: 1
  5997  001B36  0101               	movlb	1	; () banked
  5998  001B38  3F1A               	incfsz	___fttol@exp1& (0+255),f,b
  5999  001B3A  D7F6               	goto	l3756
  6000                           
  6001                           ; BSR set to: 1
  6002  001B3C  D01F               	goto	l3770
  6003  001B3E                     l3760:
  6004  001B3E  FFFF               	dw	65535	; assembler added errata NOP
  6005                           
  6006                           ; BSR set to: 1
  6007  001B40  0E17               	movlw	23
  6008  001B42  0101               	movlb	1	; () banked
  6009  001B44  651A               	cpfsgt	___fttol@exp1& (0+255),b
  6010  001B46  D014               	goto	l3768
  6011  001B48                     l3762:
  6012  001B48  FFFF               	dw	65535	; assembler added errata NOP
  6013                           
  6014                           ; BSR set to: 1
  6015  001B4A  0E00               	movlw	0
  6016  001B4C  0101               	movlb	1	; () banked
  6017  001B4E  6F0C               	movwf	?___fttol& (0+255),b
  6018  001B50  0E00               	movlw	0
  6019  001B52  6F0D               	movwf	(?___fttol+1)& (0+255),b
  6020  001B54  0E00               	movlw	0
  6021  001B56  6F0E               	movwf	(?___fttol+2)& (0+255),b
  6022  001B58  0E00               	movlw	0
  6023  001B5A  6F0F               	movwf	(?___fttol+3)& (0+255),b
  6024                           
  6025                           ; BSR set to: 1
  6026  001B5C  D027               	goto	l836
  6027  001B5E                     l3766:
  6028  001B5E  FFFF               	dw	65535	; assembler added errata NOP
  6029                           
  6030                           ; BSR set to: 1
  6031  001B60  0101               	movlb	1	; () banked
  6032  001B62  90D8               	bcf	status,0,c
  6033  001B64  3716               	rlcf	___fttol@lval& (0+255),f,b
  6034  001B66  3717               	rlcf	(___fttol@lval+1)& (0+255),f,b
  6035  001B68  3718               	rlcf	(___fttol@lval+2)& (0+255),f,b
  6036  001B6A  3719               	rlcf	(___fttol@lval+3)& (0+255),f,b
  6037  001B6C  0101               	movlb	1	; () banked
  6038  001B6E  071A               	decf	___fttol@exp1& (0+255),f,b
  6039  001B70                     l3768:
  6040  001B70  FFFF               	dw	65535	; assembler added errata NOP
  6041                           
  6042                           ; BSR set to: 1
  6043  001B72  0101               	movlb	1	; () banked
  6044  001B74  511A               	movf	___fttol@exp1& (0+255),w,b
  6045  001B76  0101               	movlb	1	; () banked
  6046  001B78  A4D8               	btfss	status,2,c
  6047  001B7A  D7F1               	goto	l3766
  6048  001B7C                     l3770:
  6049  001B7C  FFFF               	dw	65535	; assembler added errata NOP
  6050                           
  6051                           ; BSR set to: 1
  6052  001B7E  0101               	movlb	1	; () banked
  6053  001B80  5115               	movf	___fttol@sign1& (0+255),w,b
  6054  001B82  0101               	movlb	1	; () banked
  6055  001B84  B4D8               	btfsc	status,2,c
  6056  001B86  D009               	goto	l3774
  6057                           
  6058                           ; BSR set to: 1
  6059  001B88  0101               	movlb	1	; () banked
  6060  001B8A  1F19               	comf	(___fttol@lval+3)& (0+255),f,b
  6061  001B8C  1F18               	comf	(___fttol@lval+2)& (0+255),f,b
  6062  001B8E  1F17               	comf	(___fttol@lval+1)& (0+255),f,b
  6063  001B90  6D16               	negf	___fttol@lval& (0+255),b
  6064  001B92  0E00               	movlw	0
  6065  001B94  2317               	addwfc	(___fttol@lval+1)& (0+255),f,b
  6066  001B96  2318               	addwfc	(___fttol@lval+2)& (0+255),f,b
  6067  001B98  2319               	addwfc	(___fttol@lval+3)& (0+255),f,b
  6068  001B9A                     l3774:
  6069  001B9A  FFFF               	dw	65535	; assembler added errata NOP
  6070                           
  6071                           ; BSR set to: 1
  6072  001B9C  C116  F10C         	movff	___fttol@lval,?___fttol
  6073  001BA0  C117  F10D         	movff	___fttol@lval+1,?___fttol+1
  6074  001BA4  C118  F10E         	movff	___fttol@lval+2,?___fttol+2
  6075  001BA8  C119  F10F         	movff	___fttol@lval+3,?___fttol+3
  6076  001BAC                     l836:
  6077  001BAC  FFFF               	dw	65535	; assembler added errata NOP
  6078                           
  6079                           ; BSR set to: 1
  6080  001BAE  0012               	return		;funcret
  6081  001BB0  FFFF               	dw	65535	; errata NOP
  6082  001BB2                     __end_of___fttol:
  6083                           	opt stack 0
  6084                           tblptru	equ	0xFF8
  6085                           tblptrh	equ	0xFF7
  6086                           tblptrl	equ	0xFF6
  6087                           tablat	equ	0xFF5
  6088                           prodh	equ	0xFF4
  6089                           prodl	equ	0xFF3
  6090                           indf0	equ	0xFEF
  6091                           postinc0	equ	0xFEE
  6092                           fsr0h	equ	0xFEA
  6093                           fsr0l	equ	0xFE9
  6094                           wreg	equ	0xFE8
  6095                           indf1	equ	0xFE7
  6096                           postdec1	equ	0xFE5
  6097                           fsr1h	equ	0xFE2
  6098                           fsr1l	equ	0xFE1
  6099                           indf2	equ	0xFDF
  6100                           postinc2	equ	0xFDE
  6101                           postdec2	equ	0xFDD
  6102                           fsr2h	equ	0xFDA
  6103                           fsr2l	equ	0xFD9
  6104                           status	equ	0xFD8
  6105                           
  6106 ;; *************** function ___ftmul *****************
  6107 ;; Defined at:
  6108 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\ftmul.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;  f1              3    0[BANK1 ] float 
  6111 ;;  f2              3    3[BANK1 ] float 
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;  f3_as_produc    3    7[BANK1 ] unsigned um
  6114 ;;  sign            1   11[BANK1 ] unsigned char 
  6115 ;;  cntr            1   10[BANK1 ] unsigned char 
  6116 ;;  exp             1    6[BANK1 ] unsigned char 
  6117 ;; Return value:  Size  Location     Type
  6118 ;;                  3    0[BANK1 ] float 
  6119 ;; Registers used:
  6120 ;;		wreg, status,2, status,0, cstack
  6121 ;; Tracked objects:
  6122 ;;		On entry : 0/0
  6123 ;;		On exit  : 0/0
  6124 ;;		Unchanged: 0/0
  6125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6126 ;;      Params:         0       0       6       0       0       0       0
  6127 ;;      Locals:         0       0       6       0       0       0       0
  6128 ;;      Temps:          0       3       0       0       0       0       0
  6129 ;;      Totals:         0       3      12       0       0       0       0
  6130 ;;Total ram usage:       15 bytes
  6131 ;; Hardware stack levels used:    1
  6132 ;; Hardware stack levels required when called:    3
  6133 ;; This function calls:
  6134 ;;		___ftpack
  6135 ;; This function is called by:
  6136 ;;		_main
  6137 ;; This function uses a non-reentrant model
  6138 ;;
  6139                           
  6140                           	psect	text16
  6141  0017CE                     __ptext16:
  6142                           	opt stack 0
  6143  0017CE                     ___ftmul:
  6144                           	opt stack 0
  6145  0017CE  FFFF               	dw	65535	; assembler added errata NOP
  6146                           
  6147                           ; BSR set to: 1
  6148                           ;incstack = 0
  6149  0017D0  C102  F0FD         	movff	___ftmul@f1+2,??___ftmul
  6150  0017D4  0100               	movlb	0	; () banked
  6151  0017D6  6BFE               	clrf	(??___ftmul+1)& (0+255),b
  6152  0017D8  6BFF               	clrf	(??___ftmul+2)& (0+255),b
  6153  0017DA  0101               	movlb	1	; () banked
  6154  0017DC  3501               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  6155  0017DE  0100               	movlb	0	; () banked
  6156  0017E0  37FD               	rlcf	??___ftmul& (0+255),f,b
  6157  0017E2  E301               	bnc	u2871
  6158  0017E4  81FE               	bsf	(??___ftmul+1)& (0+255),0,b
  6159  0017E6                     u2871:
  6160  0017E6  0100               	movlb	0	; () banked
  6161  0017E8  51FD               	movf	??___ftmul& (0+255),w,b
  6162  0017EA  0101               	movlb	1	; () banked
  6163  0017EC  6F06               	movwf	___ftmul@exp& (0+255),b
  6164  0017EE  0101               	movlb	1	; () banked
  6165  0017F0  5106               	movf	___ftmul@exp& (0+255),w,b
  6166  0017F2  B4D8               	btfsc	status,2,c
  6167  0017F4  D013               	goto	l3680
  6168                           
  6169                           ; BSR set to: 1
  6170                           
  6171                           ; BSR set to: 1
  6172                           
  6173                           ; BSR set to: 1
  6174                           
  6175                           ; BSR set to: 1
  6176  0017F6  C105  F0FD         	movff	___ftmul@f2+2,??___ftmul
  6177  0017FA  0100               	movlb	0	; () banked
  6178  0017FC  6BFE               	clrf	(??___ftmul+1)& (0+255),b
  6179  0017FE  6BFF               	clrf	(??___ftmul+2)& (0+255),b
  6180  001800  0101               	movlb	1	; () banked
  6181  001802  3504               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  6182  001804  0100               	movlb	0	; () banked
  6183  001806  37FD               	rlcf	??___ftmul& (0+255),f,b
  6184  001808  E301               	bnc	u2891
  6185  00180A  81FE               	bsf	(??___ftmul+1)& (0+255),0,b
  6186  00180C                     u2891:
  6187  00180C  0100               	movlb	0	; () banked
  6188  00180E  51FD               	movf	??___ftmul& (0+255),w,b
  6189  001810  0101               	movlb	1	; () banked
  6190  001812  6F0B               	movwf	___ftmul@sign& (0+255),b
  6191  001814  0101               	movlb	1	; () banked
  6192  001816  510B               	movf	___ftmul@sign& (0+255),w,b
  6193  001818  A4D8               	btfss	status,2,c
  6194  00181A  D00B               	goto	l3684
  6195  00181C                     l3680:
  6196  00181C  FFFF               	dw	65535	; assembler added errata NOP
  6197                           
  6198                           ; BSR set to: 1
  6199  00181E  0E00               	movlw	0
  6200  001820  0101               	movlb	1	; () banked
  6201  001822  6F00               	movwf	?___ftmul& (0+255),b
  6202  001824  0E00               	movlw	0
  6203  001826  0101               	movlb	1	; () banked
  6204  001828  6F01               	movwf	(?___ftmul+1)& (0+255),b
  6205  00182A  0E00               	movlw	0
  6206  00182C  0101               	movlb	1	; () banked
  6207  00182E  6F02               	movwf	(?___ftmul+2)& (0+255),b
  6208                           
  6209                           ; BSR set to: 1
  6210  001830  D079               	goto	l815
  6211  001832                     l3684:
  6212  001832  FFFF               	dw	65535	; assembler added errata NOP
  6213                           
  6214                           ; BSR set to: 1
  6215  001834  0101               	movlb	1	; () banked
  6216  001836  510B               	movf	___ftmul@sign& (0+255),w,b
  6217  001838  0F7B               	addlw	123
  6218  00183A  0101               	movlb	1	; () banked
  6219  00183C  2706               	addwf	___ftmul@exp& (0+255),f,b
  6220                           
  6221                           ; BSR set to: 1
  6222  00183E  C102  F10B         	movff	___ftmul@f1+2,___ftmul@sign
  6223  001842  0101               	movlb	1	; () banked
  6224  001844  5105               	movf	(___ftmul@f2+2)& (0+255),w,b
  6225  001846  0101               	movlb	1	; () banked
  6226  001848  1B0B               	xorwf	___ftmul@sign& (0+255),f,b
  6227  00184A  0E80               	movlw	128
  6228  00184C  0101               	movlb	1	; () banked
  6229  00184E  170B               	andwf	___ftmul@sign& (0+255),f,b
  6230                           
  6231                           ; BSR set to: 1
  6232  001850  0101               	movlb	1	; () banked
  6233  001852  8F01               	bsf	(___ftmul@f1+1)& (0+255),7,b
  6234                           
  6235                           ; BSR set to: 1
  6236  001854  0101               	movlb	1	; () banked
  6237  001856  8F04               	bsf	(___ftmul@f2+1)& (0+255),7,b
  6238                           
  6239                           ; BSR set to: 1
  6240  001858  0EFF               	movlw	255
  6241  00185A  0101               	movlb	1	; () banked
  6242  00185C  1703               	andwf	___ftmul@f2& (0+255),f,b
  6243  00185E  0EFF               	movlw	255
  6244  001860  0101               	movlb	1	; () banked
  6245  001862  1704               	andwf	(___ftmul@f2+1)& (0+255),f,b
  6246  001864  0E00               	movlw	0
  6247  001866  0101               	movlb	1	; () banked
  6248  001868  1705               	andwf	(___ftmul@f2+2)& (0+255),f,b
  6249                           
  6250                           ; BSR set to: 1
  6251  00186A  0E00               	movlw	0
  6252  00186C  0101               	movlb	1	; () banked
  6253  00186E  6F07               	movwf	___ftmul@f3_as_product& (0+255),b
  6254  001870  0E00               	movlw	0
  6255  001872  0101               	movlb	1	; () banked
  6256  001874  6F08               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  6257  001876  0E00               	movlw	0
  6258  001878  0101               	movlb	1	; () banked
  6259  00187A  6F09               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  6260                           
  6261                           ; BSR set to: 1
  6262  00187C  0E07               	movlw	7
  6263  00187E  0101               	movlb	1	; () banked
  6264  001880  6F0A               	movwf	___ftmul@cntr& (0+255),b
  6265  001882                     l3698:
  6266  001882  FFFF               	dw	65535	; assembler added errata NOP
  6267                           
  6268                           ; BSR set to: 1
  6269  001884  0101               	movlb	1	; () banked
  6270  001886  A100               	btfss	___ftmul@f1& (0+255),0,b
  6271  001888  D00C               	goto	l3702
  6272                           
  6273                           ; BSR set to: 1
  6274  00188A  0101               	movlb	1	; () banked
  6275  00188C  5103               	movf	___ftmul@f2& (0+255),w,b
  6276  00188E  0101               	movlb	1	; () banked
  6277  001890  2707               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6278  001892  0101               	movlb	1	; () banked
  6279  001894  5104               	movf	(___ftmul@f2+1)& (0+255),w,b
  6280  001896  0101               	movlb	1	; () banked
  6281  001898  2308               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6282  00189A  0101               	movlb	1	; () banked
  6283  00189C  5105               	movf	(___ftmul@f2+2)& (0+255),w,b
  6284  00189E  0101               	movlb	1	; () banked
  6285  0018A0  2309               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6286  0018A2                     l3702:
  6287  0018A2  FFFF               	dw	65535	; assembler added errata NOP
  6288                           
  6289                           ; BSR set to: 1
  6290  0018A4  0101               	movlb	1	; () banked
  6291  0018A6  90D8               	bcf	status,0,c
  6292  0018A8  3302               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6293  0018AA  3301               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6294  0018AC  3300               	rrcf	___ftmul@f1& (0+255),f,b
  6295  0018AE  0101               	movlb	1	; () banked
  6296  0018B0  90D8               	bcf	status,0,c
  6297  0018B2  3703               	rlcf	___ftmul@f2& (0+255),f,b
  6298  0018B4  3704               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  6299  0018B6  3705               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  6300                           
  6301                           ; BSR set to: 1
  6302  0018B8  0101               	movlb	1	; () banked
  6303  0018BA  2F0A               	decfsz	___ftmul@cntr& (0+255),f,b
  6304  0018BC  D7E2               	goto	l3698
  6305                           
  6306                           ; BSR set to: 1
  6307                           
  6308                           ; BSR set to: 1
  6309  0018BE  0E09               	movlw	9
  6310  0018C0  0101               	movlb	1	; () banked
  6311  0018C2  6F0A               	movwf	___ftmul@cntr& (0+255),b
  6312  0018C4                     l3708:
  6313  0018C4  FFFF               	dw	65535	; assembler added errata NOP
  6314                           
  6315                           ; BSR set to: 1
  6316  0018C6  0101               	movlb	1	; () banked
  6317  0018C8  A100               	btfss	___ftmul@f1& (0+255),0,b
  6318  0018CA  D00C               	goto	l3712
  6319                           
  6320                           ; BSR set to: 1
  6321  0018CC  0101               	movlb	1	; () banked
  6322  0018CE  5103               	movf	___ftmul@f2& (0+255),w,b
  6323  0018D0  0101               	movlb	1	; () banked
  6324  0018D2  2707               	addwf	___ftmul@f3_as_product& (0+255),f,b
  6325  0018D4  0101               	movlb	1	; () banked
  6326  0018D6  5104               	movf	(___ftmul@f2+1)& (0+255),w,b
  6327  0018D8  0101               	movlb	1	; () banked
  6328  0018DA  2308               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  6329  0018DC  0101               	movlb	1	; () banked
  6330  0018DE  5105               	movf	(___ftmul@f2+2)& (0+255),w,b
  6331  0018E0  0101               	movlb	1	; () banked
  6332  0018E2  2309               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  6333  0018E4                     l3712:
  6334  0018E4  FFFF               	dw	65535	; assembler added errata NOP
  6335                           
  6336                           ; BSR set to: 1
  6337  0018E6  0101               	movlb	1	; () banked
  6338  0018E8  90D8               	bcf	status,0,c
  6339  0018EA  3302               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  6340  0018EC  3301               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  6341  0018EE  3300               	rrcf	___ftmul@f1& (0+255),f,b
  6342  0018F0  0101               	movlb	1	; () banked
  6343  0018F2  90D8               	bcf	status,0,c
  6344  0018F4  3309               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  6345  0018F6  3308               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  6346  0018F8  3307               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  6347                           
  6348                           ; BSR set to: 1
  6349  0018FA  0101               	movlb	1	; () banked
  6350  0018FC  2F0A               	decfsz	___ftmul@cntr& (0+255),f,b
  6351  0018FE  D7E2               	goto	l3708
  6352                           
  6353                           ; BSR set to: 1
  6354                           
  6355                           ; BSR set to: 1
  6356  001900  C107  F021         	movff	___ftmul@f3_as_product,___ftpack@arg
  6357  001904  C108  F022         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6358  001908  C109  F023         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6359  00190C  C106  F024         	movff	___ftmul@exp,___ftpack@exp
  6360  001910  C10B  F025         	movff	___ftmul@sign,___ftpack@sign
  6361  001914  ECD9  F00D         	call	___ftpack	;wreg free
  6362  001918  C021  F100         	movff	?___ftpack,?___ftmul
  6363  00191C  C022  F101         	movff	?___ftpack+1,?___ftmul+1
  6364  001920  C023  F102         	movff	?___ftpack+2,?___ftmul+2
  6365  001924                     l815:
  6366  001924  FFFF               	dw	65535	; assembler added errata NOP
  6367  001926  0012               	return		;funcret
  6368  001928  FFFF               	dw	65535	; errata NOP
  6369  00192A                     __end_of___ftmul:
  6370                           	opt stack 0
  6371                           tblptru	equ	0xFF8
  6372                           tblptrh	equ	0xFF7
  6373                           tblptrl	equ	0xFF6
  6374                           tablat	equ	0xFF5
  6375                           prodh	equ	0xFF4
  6376                           prodl	equ	0xFF3
  6377                           indf0	equ	0xFEF
  6378                           postinc0	equ	0xFEE
  6379                           fsr0h	equ	0xFEA
  6380                           fsr0l	equ	0xFE9
  6381                           wreg	equ	0xFE8
  6382                           indf1	equ	0xFE7
  6383                           postdec1	equ	0xFE5
  6384                           fsr1h	equ	0xFE2
  6385                           fsr1l	equ	0xFE1
  6386                           indf2	equ	0xFDF
  6387                           postinc2	equ	0xFDE
  6388                           postdec2	equ	0xFDD
  6389                           fsr2h	equ	0xFDA
  6390                           fsr2l	equ	0xFD9
  6391                           status	equ	0xFD8
  6392                           
  6393 ;; *************** function ___awtoft *****************
  6394 ;; Defined at:
  6395 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\awtoft.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;  c               2   40[COMRAM] int 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  sign            1   43[COMRAM] unsigned char 
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  3   40[COMRAM] float 
  6402 ;; Registers used:
  6403 ;;		wreg, status,2, status,0, cstack
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6409 ;;      Params:         3       0       0       0       0       0       0
  6410 ;;      Locals:         1       0       0       0       0       0       0
  6411 ;;      Temps:          0       0       0       0       0       0       0
  6412 ;;      Totals:         4       0       0       0       0       0       0
  6413 ;;Total ram usage:        4 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; Hardware stack levels required when called:    3
  6416 ;; This function calls:
  6417 ;;		___ftpack
  6418 ;; This function is called by:
  6419 ;;		_main
  6420 ;; This function uses a non-reentrant model
  6421 ;;
  6422                           
  6423                           	psect	text17
  6424  001F70                     __ptext17:
  6425                           	opt stack 0
  6426  001F70                     ___awtoft:
  6427                           	opt stack 0
  6428  001F70  FFFF               	dw	65535	; assembler added errata NOP
  6429                           
  6430                           ;incstack = 0
  6431  001F72  0E00               	movlw	0
  6432  001F74  6E2C               	movwf	___awtoft@sign,c
  6433  001F76  AE2A               	btfss	___awtoft@c+1,7,c
  6434  001F78  D006               	goto	l3728
  6435  001F7A  6C29               	negf	___awtoft@c,c
  6436  001F7C  1E2A               	comf	___awtoft@c+1,f,c
  6437  001F7E  B0D8               	btfsc	status,0,c
  6438  001F80  2A2A               	incf	___awtoft@c+1,f,c
  6439  001F82  0E01               	movlw	1
  6440  001F84  6E2C               	movwf	___awtoft@sign,c
  6441  001F86                     l3728:
  6442  001F86  FFFF               	dw	65535	; assembler added errata NOP
  6443  001F88  C029  F021         	movff	___awtoft@c,___ftpack@arg
  6444  001F8C  C02A  F022         	movff	___awtoft@c+1,___ftpack@arg+1
  6445  001F90  6A23               	clrf	___ftpack@arg+2,c
  6446  001F92  0E8E               	movlw	142
  6447  001F94  6E24               	movwf	___ftpack@exp,c
  6448  001F96  C02C  F025         	movff	___awtoft@sign,___ftpack@sign
  6449  001F9A  ECD9  F00D         	call	___ftpack	;wreg free
  6450  001F9E  C021  F029         	movff	?___ftpack,?___awtoft
  6451  001FA2  C022  F02A         	movff	?___ftpack+1,?___awtoft+1
  6452  001FA6  C023  F02B         	movff	?___ftpack+2,?___awtoft+2
  6453  001FAA  0012               	return		;funcret
  6454  001FAC  FFFF               	dw	65535	; errata NOP
  6455  001FAE                     __end_of___awtoft:
  6456                           	opt stack 0
  6457                           tblptru	equ	0xFF8
  6458                           tblptrh	equ	0xFF7
  6459                           tblptrl	equ	0xFF6
  6460                           tablat	equ	0xFF5
  6461                           prodh	equ	0xFF4
  6462                           prodl	equ	0xFF3
  6463                           indf0	equ	0xFEF
  6464                           postinc0	equ	0xFEE
  6465                           fsr0h	equ	0xFEA
  6466                           fsr0l	equ	0xFE9
  6467                           wreg	equ	0xFE8
  6468                           indf1	equ	0xFE7
  6469                           postdec1	equ	0xFE5
  6470                           fsr1h	equ	0xFE2
  6471                           fsr1l	equ	0xFE1
  6472                           indf2	equ	0xFDF
  6473                           postinc2	equ	0xFDE
  6474                           postdec2	equ	0xFDD
  6475                           fsr2h	equ	0xFDA
  6476                           fsr2l	equ	0xFD9
  6477                           status	equ	0xFD8
  6478                           
  6479 ;; *************** function ___ftpack *****************
  6480 ;; Defined at:
  6481 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.42\sources\common\float.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  arg             3   32[COMRAM] unsigned um
  6484 ;;  exp             1   35[COMRAM] unsigned char 
  6485 ;;  sign            1   36[COMRAM] unsigned char 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  3   32[COMRAM] float 
  6490 ;; Registers used:
  6491 ;;		wreg, status,2, status,0
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6497 ;;      Params:         5       0       0       0       0       0       0
  6498 ;;      Locals:         0       0       0       0       0       0       0
  6499 ;;      Temps:          3       0       0       0       0       0       0
  6500 ;;      Totals:         8       0       0       0       0       0       0
  6501 ;;Total ram usage:        8 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; Hardware stack levels required when called:    2
  6504 ;; This function calls:
  6505 ;;		Nothing
  6506 ;; This function is called by:
  6507 ;;		___awtoft
  6508 ;;		___ftmul
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text18
  6513  001BB2                     __ptext18:
  6514                           	opt stack 0
  6515  001BB2                     ___ftpack:
  6516                           	opt stack 0
  6517  001BB2  FFFF               	dw	65535	; assembler added errata NOP
  6518                           
  6519                           ;incstack = 0
  6520  001BB4  5024               	movf	___ftpack@exp,w,c
  6521  001BB6  B4D8               	btfsc	status,2,c
  6522  001BB8  D005               	goto	l3526
  6523  001BBA  5021               	movf	___ftpack@arg,w,c
  6524  001BBC  1022               	iorwf	___ftpack@arg+1,w,c
  6525  001BBE  1023               	iorwf	___ftpack@arg+2,w,c
  6526  001BC0  A4D8               	btfss	status,2,c
  6527  001BC2  D00E               	goto	l3532
  6528  001BC4                     l3526:
  6529  001BC4  FFFF               	dw	65535	; assembler added errata NOP
  6530  001BC6  0E00               	movlw	0
  6531  001BC8  6E21               	movwf	?___ftpack,c
  6532  001BCA  0E00               	movlw	0
  6533  001BCC  6E22               	movwf	?___ftpack+1,c
  6534  001BCE  0E00               	movlw	0
  6535  001BD0  6E23               	movwf	?___ftpack+2,c
  6536  001BD2  D04E               	goto	l734
  6537  001BD4                     l3530:
  6538  001BD4  FFFF               	dw	65535	; assembler added errata NOP
  6539  001BD6  2A24               	incf	___ftpack@exp,f,c
  6540  001BD8  90D8               	bcf	status,0,c
  6541  001BDA  3223               	rrcf	___ftpack@arg+2,f,c
  6542  001BDC  3222               	rrcf	___ftpack@arg+1,f,c
  6543  001BDE  3221               	rrcf	___ftpack@arg,f,c
  6544  001BE0                     l3532:
  6545  001BE0  FFFF               	dw	65535	; assembler added errata NOP
  6546  001BE2  0E00               	movlw	0
  6547  001BE4  1421               	andwf	___ftpack@arg,w,c
  6548  001BE6  6E26               	movwf	??___ftpack& (0+255),c
  6549  001BE8  0E00               	movlw	0
  6550  001BEA  1422               	andwf	___ftpack@arg+1,w,c
  6551  001BEC  6E27               	movwf	(??___ftpack+1)& (0+255),c
  6552  001BEE  0EFE               	movlw	254
  6553  001BF0  1423               	andwf	___ftpack@arg+2,w,c
  6554  001BF2  6E28               	movwf	(??___ftpack+2)& (0+255),c
  6555  001BF4  5026               	movf	??___ftpack,w,c
  6556  001BF6  1027               	iorwf	??___ftpack+1,w,c
  6557  001BF8  1028               	iorwf	??___ftpack+2,w,c
  6558  001BFA  B4D8               	btfsc	status,2,c
  6559  001BFC  D00D               	goto	l3538
  6560  001BFE  D7EA               	goto	l3530
  6561  001C00                     l3534:
  6562  001C00  FFFF               	dw	65535	; assembler added errata NOP
  6563  001C02  2A24               	incf	___ftpack@exp,f,c
  6564  001C04  0E01               	movlw	1
  6565  001C06  2621               	addwf	___ftpack@arg,f,c
  6566  001C08  0E00               	movlw	0
  6567  001C0A  2222               	addwfc	___ftpack@arg+1,f,c
  6568  001C0C  0E00               	movlw	0
  6569  001C0E  2223               	addwfc	___ftpack@arg+2,f,c
  6570  001C10  90D8               	bcf	status,0,c
  6571  001C12  3223               	rrcf	___ftpack@arg+2,f,c
  6572  001C14  3222               	rrcf	___ftpack@arg+1,f,c
  6573  001C16  3221               	rrcf	___ftpack@arg,f,c
  6574  001C18                     l3538:
  6575  001C18  FFFF               	dw	65535	; assembler added errata NOP
  6576  001C1A  0E00               	movlw	0
  6577  001C1C  1421               	andwf	___ftpack@arg,w,c
  6578  001C1E  6E26               	movwf	??___ftpack& (0+255),c
  6579  001C20  0E00               	movlw	0
  6580  001C22  1422               	andwf	___ftpack@arg+1,w,c
  6581  001C24  6E27               	movwf	(??___ftpack+1)& (0+255),c
  6582  001C26  0EFF               	movlw	255
  6583  001C28  1423               	andwf	___ftpack@arg+2,w,c
  6584  001C2A  6E28               	movwf	(??___ftpack+2)& (0+255),c
  6585  001C2C  5026               	movf	??___ftpack,w,c
  6586  001C2E  1027               	iorwf	??___ftpack+1,w,c
  6587  001C30  1028               	iorwf	??___ftpack+2,w,c
  6588  001C32  B4D8               	btfsc	status,2,c
  6589  001C34  D007               	goto	l3542
  6590  001C36  D7E4               	goto	l3534
  6591  001C38                     l3540:
  6592  001C38  FFFF               	dw	65535	; assembler added errata NOP
  6593  001C3A  0624               	decf	___ftpack@exp,f,c
  6594  001C3C  90D8               	bcf	status,0,c
  6595  001C3E  3621               	rlcf	___ftpack@arg,f,c
  6596  001C40  3622               	rlcf	___ftpack@arg+1,f,c
  6597  001C42  3623               	rlcf	___ftpack@arg+2,f,c
  6598  001C44                     l3542:
  6599  001C44  FFFF               	dw	65535	; assembler added errata NOP
  6600  001C46  BE22               	btfsc	___ftpack@arg+1,7,c
  6601  001C48  D003               	goto	l745
  6602  001C4A  0E02               	movlw	2
  6603  001C4C  6024               	cpfslt	___ftpack@exp,c
  6604  001C4E  D7F4               	goto	l3540
  6605  001C50                     l745:
  6606  001C50  FFFF               	dw	65535	; assembler added errata NOP
  6607  001C52  A024               	btfss	___ftpack@exp,0,c
  6608  001C54  9E22               	bcf	___ftpack@arg+1,7,c
  6609  001C56  90D8               	bcf	status,0,c
  6610  001C58  3224               	rrcf	___ftpack@exp,f,c
  6611  001C5A  5024               	movf	___ftpack@exp,w,c
  6612  001C5C  1223               	iorwf	___ftpack@arg+2,f,c
  6613  001C5E  5025               	movf	___ftpack@sign,w,c
  6614  001C60  A4D8               	btfss	status,2,c
  6615  001C62  8E23               	bsf	___ftpack@arg+2,7,c
  6616  001C64  C021  F021         	movff	___ftpack@arg,?___ftpack
  6617  001C68  C022  F022         	movff	___ftpack@arg+1,?___ftpack+1
  6618  001C6C  C023  F023         	movff	___ftpack@arg+2,?___ftpack+2
  6619  001C70                     l734:
  6620  001C70  FFFF               	dw	65535	; assembler added errata NOP
  6621  001C72  0012               	return		;funcret
  6622  001C74  FFFF               	dw	65535	; errata NOP
  6623  001C76                     __end_of___ftpack:
  6624                           	opt stack 0
  6625                           tblptru	equ	0xFF8
  6626                           tblptrh	equ	0xFF7
  6627                           tblptrl	equ	0xFF6
  6628                           tablat	equ	0xFF5
  6629                           prodh	equ	0xFF4
  6630                           prodl	equ	0xFF3
  6631                           indf0	equ	0xFEF
  6632                           postinc0	equ	0xFEE
  6633                           fsr0h	equ	0xFEA
  6634                           fsr0l	equ	0xFE9
  6635                           wreg	equ	0xFE8
  6636                           indf1	equ	0xFE7
  6637                           postdec1	equ	0xFE5
  6638                           fsr1h	equ	0xFE2
  6639                           fsr1l	equ	0xFE1
  6640                           indf2	equ	0xFDF
  6641                           postinc2	equ	0xFDE
  6642                           postdec2	equ	0xFDD
  6643                           fsr2h	equ	0xFDA
  6644                           fsr2l	equ	0xFD9
  6645                           status	equ	0xFD8
  6646                           
  6647 ;; *************** function _InitApp *****************
  6648 ;; Defined at:
  6649 ;;		line 28 in file "user.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;		None
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;		None
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1    wreg      void 
  6656 ;; Registers used:
  6657 ;;		wreg, status,2
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6663 ;;      Params:         0       0       0       0       0       0       0
  6664 ;;      Locals:         0       0       0       0       0       0       0
  6665 ;;      Temps:          0       0       0       0       0       0       0
  6666 ;;      Totals:         0       0       0       0       0       0       0
  6667 ;;Total ram usage:        0 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:    2
  6670 ;; This function calls:
  6671 ;;		Nothing
  6672 ;; This function is called by:
  6673 ;;		_main
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text19
  6678  001ECC                     __ptext19:
  6679                           	opt stack 0
  6680  001ECC                     _InitApp:
  6681                           	opt stack 0
  6682  001ECC  FFFF               	dw	65535	; assembler added errata NOP
  6683                           
  6684                           ;user.c: 29: PORTA = 0;
  6685                           
  6686                           ;incstack = 0
  6687  001ECE  0E00               	movlw	0
  6688  001ED0  6E80               	movwf	3968,c	;volatile
  6689                           
  6690                           ;user.c: 30: PORTB = 0;
  6691  001ED2  0E00               	movlw	0
  6692  001ED4  6E81               	movwf	3969,c	;volatile
  6693                           
  6694                           ;user.c: 31: PORTC = 0;
  6695  001ED6  0E00               	movlw	0
  6696  001ED8  6E82               	movwf	3970,c	;volatile
  6697                           
  6698                           ;user.c: 33: TRISBbits.RB0 = 0;
  6699  001EDA  9093               	bcf	3987,0,c	;volatile
  6700                           
  6701                           ;user.c: 34: TRISBbits.RB1 = 0;
  6702  001EDC  9293               	bcf	3987,1,c	;volatile
  6703                           
  6704                           ;user.c: 35: TRISBbits.RB2 = 0;
  6705  001EDE  9493               	bcf	3987,2,c	;volatile
  6706                           
  6707                           ;user.c: 36: TRISBbits.RB3 = 0;
  6708  001EE0  9693               	bcf	3987,3,c	;volatile
  6709                           
  6710                           ;user.c: 38: TRISA = 0;
  6711  001EE2  0E00               	movlw	0
  6712  001EE4  6E92               	movwf	3986,c	;volatile
  6713                           
  6714                           ;user.c: 41: TRISBbits.RB7 = 0;
  6715  001EE6  9E93               	bcf	3987,7,c	;volatile
  6716                           
  6717                           ;user.c: 42: T1CONbits.RD16 = 1;
  6718  001EE8  8ECD               	bsf	4045,7,c	;volatile
  6719                           
  6720                           ;user.c: 43: T1CONbits.T1CKPS = 0b11;
  6721  001EEA  0E30               	movlw	48
  6722  001EEC  12CD               	iorwf	4045,f,c	;volatile
  6723                           
  6724                           ;user.c: 44: T1CONbits.TMR1CS = 0;
  6725  001EEE  92CD               	bcf	4045,1,c	;volatile
  6726                           
  6727                           ;user.c: 45: T1CONbits.T1SYNC = 1;
  6728  001EF0  84CD               	bsf	4045,2,c	;volatile
  6729                           
  6730                           ;user.c: 46: T1CONbits.TMR1ON = 1;
  6731  001EF2  80CD               	bsf	4045,0,c	;volatile
  6732                           
  6733                           ;user.c: 47: PIE1bits.TMR1IE = 1;
  6734  001EF4  809D               	bsf	3997,0,c	;volatile
  6735                           
  6736                           ;user.c: 48: IPR1bits.TMR1IP = 1;
  6737  001EF6  809F               	bsf	3999,0,c	;volatile
  6738                           
  6739                           ;user.c: 49: TMR1 = 3036;
  6740  001EF8  0E0B               	movlw	11
  6741  001EFA  6ECF               	movwf	4047,c	;volatile
  6742  001EFC  0EDC               	movlw	220
  6743  001EFE  6ECE               	movwf	4046,c	;volatile
  6744                           
  6745                           ;user.c: 50: INTCONbits.GIE = 1;
  6746  001F00  8EF2               	bsf	intcon,7,c	;volatile
  6747                           
  6748                           ;user.c: 51: INTCONbits.PEIE = 1;
  6749  001F02  8CF2               	bsf	intcon,6,c	;volatile
  6750                           
  6751                           ;user.c: 55: TRISCbits.RC7 = 1;
  6752  001F04  8E94               	bsf	3988,7,c	;volatile
  6753                           
  6754                           ;user.c: 56: TRISCbits.RC6 = 0;
  6755  001F06  9C94               	bcf	3988,6,c	;volatile
  6756                           
  6757                           ;user.c: 57: SPBRG = 10;
  6758  001F08  0E0A               	movlw	10
  6759  001F0A  6EAF               	movwf	4015,c	;volatile
  6760                           
  6761                           ;user.c: 58: RCSTAbits.SPEN = 1;
  6762  001F0C  8EAB               	bsf	4011,7,c	;volatile
  6763                           
  6764                           ;user.c: 59: TXSTAbits.SYNC = 0;
  6765  001F0E  98AC               	bcf	4012,4,c	;volatile
  6766                           
  6767                           ;user.c: 60: TXSTAbits.BRGH = 1;
  6768  001F10  84AC               	bsf	4012,2,c	;volatile
  6769                           
  6770                           ;user.c: 61: TXSTAbits.TXEN = 1;
  6771  001F12  8AAC               	bsf	4012,5,c	;volatile
  6772                           
  6773                           ;user.c: 62: RCSTAbits.CREN = 1;
  6774  001F14  88AB               	bsf	4011,4,c	;volatile
  6775                           
  6776                           ;user.c: 63: PIE1bits.RCIE = 1;
  6777  001F16  8A9D               	bsf	3997,5,c	;volatile
  6778                           
  6779                           ;user.c: 64: IPR1bits.RCIP = 1;
  6780  001F18  8A9F               	bsf	3999,5,c	;volatile
  6781                           
  6782                           ;user.c: 67: PIE2bits.EEIE = 1;
  6783  001F1A  88A0               	bsf	4000,4,c	;volatile
  6784  001F1C  0012               	return		;funcret
  6785  001F1E  FFFF               	dw	65535	; errata NOP
  6786  001F20                     __end_of_InitApp:
  6787                           	opt stack 0
  6788                           tblptru	equ	0xFF8
  6789                           tblptrh	equ	0xFF7
  6790                           tblptrl	equ	0xFF6
  6791                           tablat	equ	0xFF5
  6792                           prodh	equ	0xFF4
  6793                           prodl	equ	0xFF3
  6794                           intcon	equ	0xFF2
  6795                           indf0	equ	0xFEF
  6796                           postinc0	equ	0xFEE
  6797                           fsr0h	equ	0xFEA
  6798                           fsr0l	equ	0xFE9
  6799                           wreg	equ	0xFE8
  6800                           indf1	equ	0xFE7
  6801                           postdec1	equ	0xFE5
  6802                           fsr1h	equ	0xFE2
  6803                           fsr1l	equ	0xFE1
  6804                           indf2	equ	0xFDF
  6805                           postinc2	equ	0xFDE
  6806                           postdec2	equ	0xFDD
  6807                           fsr2h	equ	0xFDA
  6808                           fsr2l	equ	0xFD9
  6809                           status	equ	0xFD8
  6810                           
  6811 ;; *************** function _ConfigureOscillator *****************
  6812 ;; Defined at:
  6813 ;;		line 24 in file "system.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;		None
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;		None
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  1    wreg      void 
  6820 ;; Registers used:
  6821 ;;		None
  6822 ;; Tracked objects:
  6823 ;;		On entry : 0/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6827 ;;      Params:         0       0       0       0       0       0       0
  6828 ;;      Locals:         0       0       0       0       0       0       0
  6829 ;;      Temps:          0       0       0       0       0       0       0
  6830 ;;      Totals:         0       0       0       0       0       0       0
  6831 ;;Total ram usage:        0 bytes
  6832 ;; Hardware stack levels used:    1
  6833 ;; Hardware stack levels required when called:    2
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_main
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text20
  6842  001FD2                     __ptext20:
  6843                           	opt stack 0
  6844  001FD2                     _ConfigureOscillator:
  6845                           	opt stack 0
  6846  001FD2  FFFF               	dw	65535	; assembler added errata NOP
  6847                           
  6848                           ;incstack = 0
  6849  001FD4  0012               	return		;funcret
  6850  001FD6  FFFF               	dw	65535	; errata NOP
  6851  001FD8                     __end_of_ConfigureOscillator:
  6852                           	opt stack 0
  6853                           tblptru	equ	0xFF8
  6854                           tblptrh	equ	0xFF7
  6855                           tblptrl	equ	0xFF6
  6856                           tablat	equ	0xFF5
  6857                           prodh	equ	0xFF4
  6858                           prodl	equ	0xFF3
  6859                           intcon	equ	0xFF2
  6860                           indf0	equ	0xFEF
  6861                           postinc0	equ	0xFEE
  6862                           fsr0h	equ	0xFEA
  6863                           fsr0l	equ	0xFE9
  6864                           wreg	equ	0xFE8
  6865                           indf1	equ	0xFE7
  6866                           postdec1	equ	0xFE5
  6867                           fsr1h	equ	0xFE2
  6868                           fsr1l	equ	0xFE1
  6869                           indf2	equ	0xFDF
  6870                           postinc2	equ	0xFDE
  6871                           postdec2	equ	0xFDD
  6872                           fsr2h	equ	0xFDA
  6873                           fsr2l	equ	0xFD9
  6874                           status	equ	0xFD8
  6875                           
  6876 ;; *************** function _low_isr *****************
  6877 ;; Defined at:
  6878 ;;		line 89 in file "interrupts.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;		None
  6881 ;; Auto vars:     Size  Location     Type
  6882 ;;		None
  6883 ;; Return value:  Size  Location     Type
  6884 ;;                  1    wreg      void 
  6885 ;; Registers used:
  6886 ;;		None
  6887 ;; Tracked objects:
  6888 ;;		On entry : 0/0
  6889 ;;		On exit  : 0/0
  6890 ;;		Unchanged: 0/0
  6891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6892 ;;      Params:         0       0       0       0       0       0       0
  6893 ;;      Locals:         0       0       0       0       0       0       0
  6894 ;;      Temps:         17       0       0       0       0       0       0
  6895 ;;      Totals:        17       0       0       0       0       0       0
  6896 ;;Total ram usage:       17 bytes
  6897 ;; Hardware stack levels used:    1
  6898 ;; Hardware stack levels required when called:    1
  6899 ;; This function calls:
  6900 ;;		Nothing
  6901 ;; This function is called by:
  6902 ;;		Interrupt level 1
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           	psect	intcodelo
  6907  000018                     __pintcodelo:
  6908                           	opt stack 0
  6909  000018                     _low_isr:
  6910                           	opt stack 0
  6911  000018  FFFF               	dw	65535	; assembler added errata NOP
  6912                           
  6913                           ;incstack = 0
  6914  00001A  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6915  00001C  CFD8 F010          	movff	status,??_low_isr
  6916  000020  CFE8 F011          	movff	wreg,??_low_isr+1
  6917  000024  CFE0 F012          	movff	bsr,??_low_isr+2
  6918  000028  CFFA F013          	movff	pclath,??_low_isr+3
  6919  00002C  CFFB F014          	movff	pclatu,??_low_isr+4
  6920  000030  CFE9 F015          	movff	fsr0l,??_low_isr+5
  6921  000034  CFEA F016          	movff	fsr0h,??_low_isr+6
  6922  000038  CFE1 F017          	movff	fsr1l,??_low_isr+7
  6923  00003C  CFE2 F018          	movff	fsr1h,??_low_isr+8
  6924  000040  CFD9 F019          	movff	fsr2l,??_low_isr+9
  6925  000044  CFDA F01A          	movff	fsr2h,??_low_isr+10
  6926  000048  CFF3 F01B          	movff	prodl,??_low_isr+11
  6927  00004C  CFF4 F01C          	movff	prodh,??_low_isr+12
  6928  000050  CFF6 F01D          	movff	tblptrl,??_low_isr+13
  6929  000054  CFF7 F01E          	movff	tblptrh,??_low_isr+14
  6930  000058  CFF8 F01F          	movff	tblptru,??_low_isr+15
  6931  00005C  CFF5 F020          	movff	tablat,??_low_isr+16
  6932  000060  C020  FFF5         	movff	??_low_isr+16,tablat
  6933  000064  C01F  FFF8         	movff	??_low_isr+15,tblptru
  6934  000068  C01E  FFF7         	movff	??_low_isr+14,tblptrh
  6935  00006C  C01D  FFF6         	movff	??_low_isr+13,tblptrl
  6936  000070  C01C  FFF4         	movff	??_low_isr+12,prodh
  6937  000074  C01B  FFF3         	movff	??_low_isr+11,prodl
  6938  000078  C01A  FFDA         	movff	??_low_isr+10,fsr2h
  6939  00007C  C019  FFD9         	movff	??_low_isr+9,fsr2l
  6940  000080  C018  FFE2         	movff	??_low_isr+8,fsr1h
  6941  000084  C017  FFE1         	movff	??_low_isr+7,fsr1l
  6942  000088  C016  FFEA         	movff	??_low_isr+6,fsr0h
  6943  00008C  C015  FFE9         	movff	??_low_isr+5,fsr0l
  6944  000090  C014  FFFB         	movff	??_low_isr+4,pclatu
  6945  000094  C013  FFFA         	movff	??_low_isr+3,pclath
  6946  000098  C012  FFE0         	movff	??_low_isr+2,bsr
  6947  00009C  C011  FFE8         	movff	??_low_isr+1,wreg
  6948  0000A0  C010  FFD8         	movff	??_low_isr,status
  6949  0000A4  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6950  0000A6  0010               	retfie	
  6951  0000A8  FFFF               	dw	65535	; errata NOP
  6952  0000AA                     __end_of_low_isr:
  6953                           	opt stack 0
  6954                           pclatu	equ	0xFFB
  6955                           pclath	equ	0xFFA
  6956                           tblptru	equ	0xFF8
  6957                           tblptrh	equ	0xFF7
  6958                           tblptrl	equ	0xFF6
  6959                           tablat	equ	0xFF5
  6960                           prodh	equ	0xFF4
  6961                           prodl	equ	0xFF3
  6962                           intcon	equ	0xFF2
  6963                           indf0	equ	0xFEF
  6964                           postinc0	equ	0xFEE
  6965                           fsr0h	equ	0xFEA
  6966                           fsr0l	equ	0xFE9
  6967                           wreg	equ	0xFE8
  6968                           indf1	equ	0xFE7
  6969                           postdec1	equ	0xFE5
  6970                           fsr1h	equ	0xFE2
  6971                           fsr1l	equ	0xFE1
  6972                           bsr	equ	0xFE0
  6973                           indf2	equ	0xFDF
  6974                           postinc2	equ	0xFDE
  6975                           postdec2	equ	0xFDD
  6976                           fsr2h	equ	0xFDA
  6977                           fsr2l	equ	0xFD9
  6978                           status	equ	0xFD8
  6979                           
  6980 ;; *************** function _high_isr *****************
  6981 ;; Defined at:
  6982 ;;		line 39 in file "interrupts.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;		None
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;		None
  6987 ;; Return value:  Size  Location     Type
  6988 ;;                  1    wreg      void 
  6989 ;; Registers used:
  6990 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6991 ;; Tracked objects:
  6992 ;;		On entry : 0/0
  6993 ;;		On exit  : 0/0
  6994 ;;		Unchanged: 0/0
  6995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6996 ;;      Params:         0       0       0       0       0       0       0
  6997 ;;      Locals:         0       0       0       0       0       0       0
  6998 ;;      Temps:         15       0       0       0       0       0       0
  6999 ;;      Totals:        15       0       0       0       0       0       0
  7000 ;;Total ram usage:       15 bytes
  7001 ;; Hardware stack levels used:    1
  7002 ;; This function calls:
  7003 ;;		Nothing
  7004 ;; This function is called by:
  7005 ;;		Interrupt level 2
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	intcode
  7010  000008                     __pintcode:
  7011                           	opt stack 0
  7012  000008                     _high_isr:
  7013                           	opt stack 0
  7014  000008  FFFF               	dw	65535	; assembler added errata NOP
  7015                           
  7016                           ;incstack = 0
  7017  00000A  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7018  00000C  EF95  F00C         	goto	int_func
  7019                           pclatu	equ	0xFFB
  7020                           pclath	equ	0xFFA
  7021                           tblptru	equ	0xFF8
  7022                           tblptrh	equ	0xFF7
  7023                           tblptrl	equ	0xFF6
  7024                           tablat	equ	0xFF5
  7025                           prodh	equ	0xFF4
  7026                           prodl	equ	0xFF3
  7027                           intcon	equ	0xFF2
  7028                           indf0	equ	0xFEF
  7029                           postinc0	equ	0xFEE
  7030                           fsr0h	equ	0xFEA
  7031                           fsr0l	equ	0xFE9
  7032                           wreg	equ	0xFE8
  7033                           indf1	equ	0xFE7
  7034                           postdec1	equ	0xFE5
  7035                           fsr1h	equ	0xFE2
  7036                           fsr1l	equ	0xFE1
  7037                           bsr	equ	0xFE0
  7038                           indf2	equ	0xFDF
  7039                           postinc2	equ	0xFDE
  7040                           postdec2	equ	0xFDD
  7041                           fsr2h	equ	0xFDA
  7042                           fsr2l	equ	0xFD9
  7043                           status	equ	0xFD8
  7044                           
  7045                           	psect	intcode_body
  7046  00192A                     __pintcode_body:
  7047                           	opt stack 27
  7048  00192A                     int_func:
  7049                           	opt stack 27
  7050  00192A  FFFF               	dw	65535	; errata NOP
  7051  00192C  CFFA F002          	movff	pclath,??_high_isr+1
  7052  001930  CFFB F003          	movff	pclatu,??_high_isr+2
  7053  001934  CFE9 F004          	movff	fsr0l,??_high_isr+3
  7054  001938  CFEA F005          	movff	fsr0h,??_high_isr+4
  7055  00193C  CFE1 F006          	movff	fsr1l,??_high_isr+5
  7056  001940  CFE2 F007          	movff	fsr1h,??_high_isr+6
  7057  001944  CFD9 F008          	movff	fsr2l,??_high_isr+7
  7058  001948  CFDA F009          	movff	fsr2h,??_high_isr+8
  7059  00194C  CFF3 F00A          	movff	prodl,??_high_isr+9
  7060  001950  CFF4 F00B          	movff	prodh,??_high_isr+10
  7061  001954  CFF6 F00C          	movff	tblptrl,??_high_isr+11
  7062  001958  CFF7 F00D          	movff	tblptrh,??_high_isr+12
  7063  00195C  CFF8 F00E          	movff	tblptru,??_high_isr+13
  7064  001960  CFF5 F00F          	movff	tablat,??_high_isr+14
  7065                           
  7066                           ;interrupts.c: 49: if (PIR1bits.RCIF == 1) {
  7067  001964  AA9E               	btfss	3998,5,c	;volatile
  7068  001966  D027               	goto	i2l3072
  7069                           
  7070                           ;interrupts.c: 50: dato = RCREG;
  7071  001968  CFAE F042          	movff	4014,_dato	;volatile
  7072                           
  7073                           ;interrupts.c: 51: if (dato != '\r') {
  7074  00196C  0E0D               	movlw	13
  7075  00196E  1842               	xorwf	_dato,w,c
  7076  001970  B4D8               	btfsc	status,2,c
  7077  001972  D010               	goto	i2l3066
  7078                           
  7079                           ;interrupts.c: 52: comando[n] = dato;
  7080  001974  0EC8               	movlw	low _comando
  7081  001976  0100               	movlb	0	; () banked
  7082  001978  25A7               	addwf	_n& (0+255),w,b
  7083  00197A  6ED9               	movwf	fsr2l,c
  7084  00197C  0E00               	movlw	high _comando
  7085  00197E  0100               	movlb	0	; () banked
  7086  001980  21A8               	addwfc	(_n+1)& (0+255),w,b
  7087  001982  6EDA               	movwf	fsr2h,c
  7088  001984  C042  FFDF         	movff	_dato,indf2
  7089                           
  7090                           ; BSR set to: 0
  7091                           ;interrupts.c: 53: n++;
  7092  001988  0100               	movlb	0	; () banked
  7093  00198A  4BA7               	infsnz	_n& (0+255),f,b
  7094  00198C  2BA8               	incf	(_n+1)& (0+255),f,b
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;interrupts.c: 54: tama++;
  7098  00198E  4A40               	infsnz	_tama,f,c
  7099  001990  2A41               	incf	_tama+1,f,c
  7100                           
  7101                           ;interrupts.c: 55: } else if (dato == '\r') {
  7102  001992  D00F               	goto	i2l3070
  7103  001994                     i2l3066:
  7104  001994  FFFF               	dw	65535	; assembler added errata NOP
  7105  001996  0E0D               	movlw	13
  7106  001998  1842               	xorwf	_dato,w,c
  7107  00199A  A4D8               	btfss	status,2,c
  7108  00199C  D00A               	goto	i2l3070
  7109                           
  7110                           ;interrupts.c: 56: n = 0;
  7111  00199E  0E00               	movlw	0
  7112  0019A0  0100               	movlb	0	; () banked
  7113  0019A2  6FA8               	movwf	(_n+1)& (0+255),b
  7114  0019A4  0E00               	movlw	0
  7115  0019A6  6FA7               	movwf	_n& (0+255),b
  7116                           
  7117                           ;interrupts.c: 57: enter = 1;
  7118  0019A8  0E00               	movlw	0
  7119  0019AA  0100               	movlb	0	; () banked
  7120  0019AC  6FAE               	movwf	(_enter+1)& (0+255),b
  7121  0019AE  0E01               	movlw	1
  7122  0019B0  6FAD               	movwf	_enter& (0+255),b
  7123  0019B2                     i2l3070:
  7124  0019B2  FFFF               	dw	65535	; assembler added errata NOP
  7125                           
  7126                           ;interrupts.c: 58: }
  7127                           ;interrupts.c: 61: PIR1bits.RCIF = 0;
  7128  0019B4  9A9E               	bcf	3998,5,c	;volatile
  7129  0019B6                     i2l3072:
  7130  0019B6  FFFF               	dw	65535	; assembler added errata NOP
  7131                           
  7132                           ;interrupts.c: 62: }
  7133                           ;interrupts.c: 64: if (PIR1bits.TMR1IF == 1) {
  7134  0019B8  A09E               	btfss	3998,0,c	;volatile
  7135  0019BA  D041               	goto	i2l48
  7136                           
  7137                           ;interrupts.c: 65: PIR1bits.TMR1IF = 0;
  7138  0019BC  909E               	bcf	3998,0,c	;volatile
  7139                           
  7140                           ;interrupts.c: 66: __nop();
  7141  0019BE  F000               	nop	
  7142                           
  7143                           ;interrupts.c: 67: led = 1;
  7144  0019C0  0E00               	movlw	0
  7145  0019C2  0100               	movlb	0	; () banked
  7146  0019C4  6FAC               	movwf	(_led+1)& (0+255),b
  7147  0019C6  0E01               	movlw	1
  7148  0019C8  6FAB               	movwf	_led& (0+255),b
  7149                           
  7150                           ;interrupts.c: 68: TMR1 = 3036;
  7151  0019CA  0E0B               	movlw	11
  7152  0019CC  6ECF               	movwf	4047,c	;volatile
  7153  0019CE  0EDC               	movlw	220
  7154  0019D0  6ECE               	movwf	4046,c	;volatile
  7155                           
  7156                           ; BSR set to: 0
  7157                           ;interrupts.c: 69: if (led == 1 && movimiento == 1) {
  7158  0019D2  0100               	movlb	0	; () banked
  7159  0019D4  05AB               	decf	_led& (0+255),w,b
  7160  0019D6  0100               	movlb	0	; () banked
  7161  0019D8  11AC               	iorwf	(_led+1)& (0+255),w,b
  7162  0019DA  A4D8               	btfss	status,2,c
  7163  0019DC  D030               	goto	i2l48
  7164                           
  7165                           ; BSR set to: 0
  7166  0019DE  0100               	movlb	0	; () banked
  7167  0019E0  05A9               	decf	_movimiento& (0+255),w,b
  7168  0019E2  0100               	movlb	0	; () banked
  7169  0019E4  11AA               	iorwf	(_movimiento+1)& (0+255),w,b
  7170  0019E6  A4D8               	btfss	status,2,c
  7171  0019E8  D02A               	goto	i2l48
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;interrupts.c: 70: __nop();
  7175  0019EA  F000               	nop	
  7176                           
  7177                           ;interrupts.c: 71: contadorled++;
  7178  0019EC  0100               	movlb	0	; () banked
  7179  0019EE  4B9D               	infsnz	_contadorled& (0+255),f,b
  7180  0019F0  2B9E               	incf	(_contadorled+1)& (0+255),f,b
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;interrupts.c: 72: if (contadorled >= 2) {
  7184  0019F2  0100               	movlb	0	; () banked
  7185  0019F4  BF9E               	btfsc	(_contadorled+1)& (0+255),7,b
  7186  0019F6  D01D               	goto	i2l3092
  7187  0019F8  0100               	movlb	0	; () banked
  7188  0019FA  519E               	movf	(_contadorled+1)& (0+255),w,b
  7189  0019FC  E105               	bnz	i2u229_40
  7190  0019FE  0E02               	movlw	2
  7191  001A00  0100               	movlb	0	; () banked
  7192  001A02  5D9D               	subwf	_contadorled& (0+255),w,b
  7193  001A04  A0D8               	btfss	status,0,c
  7194  001A06  D015               	goto	i2l3092
  7195  001A08                     i2u229_40:
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;interrupts.c: 73: LATBbits.LB7 = ~PORTBbits.RB7;
  7199  001A08  AE81               	btfss	3969,7,c	;volatile
  7200  001A0A  D002               	goto	i2u230_40
  7201  001A0C  0E01               	movlw	1
  7202  001A0E  D002               	goto	i2u230_46
  7203  001A10                     i2u230_40:
  7204  001A10  FFFF               	dw	65535	; assembler added errata NOP
  7205  001A12  0E00               	movlw	0
  7206  001A14                     i2u230_46:
  7207  001A14  FFFF               	dw	65535	; assembler added errata NOP
  7208  001A16  0AFF               	xorlw	255
  7209  001A18  6E01               	movwf	??_high_isr& (0+255),c
  7210  001A1A  3201               	rrcf	??_high_isr,f,c
  7211  001A1C  3201               	rrcf	??_high_isr,f,c
  7212  001A1E  508A               	movf	3978,w,c	;volatile
  7213  001A20  1801               	xorwf	??_high_isr,w,c
  7214  001A22  0B7F               	andlw	-129
  7215  001A24  1801               	xorwf	??_high_isr,w,c
  7216  001A26  6E8A               	movwf	3978,c	;volatile
  7217                           
  7218                           ; BSR set to: 0
  7219                           ;interrupts.c: 74: contadorled = 0;
  7220  001A28  0E00               	movlw	0
  7221  001A2A  0100               	movlb	0	; () banked
  7222  001A2C  6F9E               	movwf	(_contadorled+1)& (0+255),b
  7223  001A2E  0E00               	movlw	0
  7224  001A30  6F9D               	movwf	_contadorled& (0+255),b
  7225  001A32                     i2l3092:
  7226  001A32  FFFF               	dw	65535	; assembler added errata NOP
  7227                           
  7228                           ; BSR set to: 0
  7229                           ;interrupts.c: 75: }
  7230                           ;interrupts.c: 76: led = 0;
  7231  001A34  0E00               	movlw	0
  7232  001A36  0100               	movlb	0	; () banked
  7233  001A38  6FAC               	movwf	(_led+1)& (0+255),b
  7234  001A3A  0E00               	movlw	0
  7235  001A3C  6FAB               	movwf	_led& (0+255),b
  7236  001A3E                     i2l48:
  7237  001A3E  FFFF               	dw	65535	; assembler added errata NOP
  7238  001A40  C00F  FFF5         	movff	??_high_isr+14,tablat
  7239  001A44  C00E  FFF8         	movff	??_high_isr+13,tblptru
  7240  001A48  C00D  FFF7         	movff	??_high_isr+12,tblptrh
  7241  001A4C  C00C  FFF6         	movff	??_high_isr+11,tblptrl
  7242  001A50  C00B  FFF4         	movff	??_high_isr+10,prodh
  7243  001A54  C00A  FFF3         	movff	??_high_isr+9,prodl
  7244  001A58  C009  FFDA         	movff	??_high_isr+8,fsr2h
  7245  001A5C  C008  FFD9         	movff	??_high_isr+7,fsr2l
  7246  001A60  C007  FFE2         	movff	??_high_isr+6,fsr1h
  7247  001A64  C006  FFE1         	movff	??_high_isr+5,fsr1l
  7248  001A68  C005  FFEA         	movff	??_high_isr+4,fsr0h
  7249  001A6C  C004  FFE9         	movff	??_high_isr+3,fsr0l
  7250  001A70  C003  FFFB         	movff	??_high_isr+2,pclatu
  7251  001A74  C002  FFFA         	movff	??_high_isr+1,pclath
  7252  001A78  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7253  001A7A  0011               	retfie		f
  7254  001A7C  FFFF               	dw	65535	; errata NOP
  7255  001A7E                     __end_of_high_isr:
  7256                           	opt stack 0
  7257                           pclatu	equ	0xFFB
  7258                           pclath	equ	0xFFA
  7259                           tblptru	equ	0xFF8
  7260                           tblptrh	equ	0xFF7
  7261                           tblptrl	equ	0xFF6
  7262                           tablat	equ	0xFF5
  7263                           prodh	equ	0xFF4
  7264                           prodl	equ	0xFF3
  7265                           intcon	equ	0xFF2
  7266                           indf0	equ	0xFEF
  7267                           postinc0	equ	0xFEE
  7268                           fsr0h	equ	0xFEA
  7269                           fsr0l	equ	0xFE9
  7270                           wreg	equ	0xFE8
  7271                           indf1	equ	0xFE7
  7272                           postdec1	equ	0xFE5
  7273                           fsr1h	equ	0xFE2
  7274                           fsr1l	equ	0xFE1
  7275                           bsr	equ	0xFE0
  7276                           indf2	equ	0xFDF
  7277                           postinc2	equ	0xFDE
  7278                           postdec2	equ	0xFDD
  7279                           fsr2h	equ	0xFDA
  7280                           fsr2l	equ	0xFD9
  7281                           status	equ	0xFD8
  7282                           pclatu	equ	0xFFB
  7283                           pclath	equ	0xFFA
  7284                           tblptru	equ	0xFF8
  7285                           tblptrh	equ	0xFF7
  7286                           tblptrl	equ	0xFF6
  7287                           tablat	equ	0xFF5
  7288                           prodh	equ	0xFF4
  7289                           prodl	equ	0xFF3
  7290                           intcon	equ	0xFF2
  7291                           indf0	equ	0xFEF
  7292                           postinc0	equ	0xFEE
  7293                           fsr0h	equ	0xFEA
  7294                           fsr0l	equ	0xFE9
  7295                           wreg	equ	0xFE8
  7296                           indf1	equ	0xFE7
  7297                           postdec1	equ	0xFE5
  7298                           fsr1h	equ	0xFE2
  7299                           fsr1l	equ	0xFE1
  7300                           bsr	equ	0xFE0
  7301                           indf2	equ	0xFDF
  7302                           postinc2	equ	0xFDE
  7303                           postdec2	equ	0xFDD
  7304                           fsr2h	equ	0xFDA
  7305                           fsr2l	equ	0xFD9
  7306                           status	equ	0xFD8
  7307                           
  7308                           	psect	rparam
  7309  0000                     pclatu	equ	0xFFB
  7310                           pclath	equ	0xFFA
  7311                           tblptru	equ	0xFF8
  7312                           tblptrh	equ	0xFF7
  7313                           tblptrl	equ	0xFF6
  7314                           tablat	equ	0xFF5
  7315                           prodh	equ	0xFF4
  7316                           prodl	equ	0xFF3
  7317                           intcon	equ	0xFF2
  7318                           indf0	equ	0xFEF
  7319                           postinc0	equ	0xFEE
  7320                           fsr0h	equ	0xFEA
  7321                           fsr0l	equ	0xFE9
  7322                           wreg	equ	0xFE8
  7323                           indf1	equ	0xFE7
  7324                           postdec1	equ	0xFE5
  7325                           fsr1h	equ	0xFE2
  7326                           fsr1l	equ	0xFE1
  7327                           bsr	equ	0xFE0
  7328                           indf2	equ	0xFDF
  7329                           postinc2	equ	0xFDE
  7330                           postdec2	equ	0xFDD
  7331                           fsr2h	equ	0xFDA
  7332                           fsr2l	equ	0xFD9
  7333                           status	equ	0xFD8
  7334                           
  7335                           	psect	temp
  7336  00005F                     btemp:
  7337                           	opt stack 0
  7338  00005F                     	ds	1
  7339  0000                     int$flags	set	btemp
  7340                           pclatu	equ	0xFFB
  7341                           pclath	equ	0xFFA
  7342                           tblptru	equ	0xFF8
  7343                           tblptrh	equ	0xFF7
  7344                           tblptrl	equ	0xFF6
  7345                           tablat	equ	0xFF5
  7346                           prodh	equ	0xFF4
  7347                           prodl	equ	0xFF3
  7348                           intcon	equ	0xFF2
  7349                           indf0	equ	0xFEF
  7350                           postinc0	equ	0xFEE
  7351                           fsr0h	equ	0xFEA
  7352                           fsr0l	equ	0xFE9
  7353                           wreg	equ	0xFE8
  7354                           indf1	equ	0xFE7
  7355                           postdec1	equ	0xFE5
  7356                           fsr1h	equ	0xFE2
  7357                           fsr1l	equ	0xFE1
  7358                           bsr	equ	0xFE0
  7359                           indf2	equ	0xFDF
  7360                           postinc2	equ	0xFDE
  7361                           postdec2	equ	0xFDD
  7362                           fsr2h	equ	0xFDA
  7363                           fsr2l	equ	0xFD9
  7364                           status	equ	0xFD8


Data Sizes:
    Strings     48
    Constant    229
    Data        16
    BSS         183
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     45      94
    BANK0           128      3     128
    BANK1           256     29      54
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 9
		 -> devolver(CODE[9]), posicion_info(CODE[9]), movery(CODE[7]), moverx(CODE[7]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 25
		 -> tam(BANK0[20]), comando(BANK0[25]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_7(CODE[24]), STR_6(CODE[24]), STR_5(CODE[24]), STR_4(CODE[24]), 
		 -> STR_3(CODE[24]), STR_2(CODE[24]), STR_1(CODE[24]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 25
		 -> salida(BANK0[25]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    stringtolong@string	PTR unsigned char  size(2) Largest target is 25
		 -> entrada(BANK1[25]), 

    enviarTrama@datos	PTR unsigned char  size(2) Largest target is 65
		 -> norango(CODE[65]), salida(BANK0[25]), comandonoreconocido(CODE[22]), rangoy(CODE[44]), 
		 -> rangox(CODE[44]), saludo(CODE[12]), comando(BANK0[25]), 

    ptr_llegada	PTR unsigned char  size(2) Largest target is 25
		 -> NULL(NULL[0]), comando(BANK0[25]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _stringtolong->___lmul
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fttol->___awtoft
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->___ftmul
    ___fttol->___ftmul

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___fttol
    ___fttol->___ftmul

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   16405
                                             27 BANK1      2     2      0
                _ConfigureOscillator
                            _InitApp
                           ___awtoft
                            ___ftmul
                            ___fttol
                           _apagarM1
                           _apagarM2
                       _ejexnegativo
                       _ejexpositivo
                       _ejeynegativo
                       _ejeypositivo
                        _enviarTrama
                          _ledestado
                            _sprintf
                             _strcmp
                       _stringtolong
 ---------------------------------------------------------------------------------
 (1) _stringtolong                                         8     4      4    1304
                                              0 BANK1      8     4      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     522
                                             32 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               6     2      4     699
                                             32 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    17      6    2789
                                             44 COMRAM     1     1      0
                                              0 BANK1     13     7      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     412
                                             39 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     421
                                             32 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ledestado                                            3     1      2      98
                                             32 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _enviarTrama                                          2     0      2    1261
                                             32 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ejeypositivo                                         6     2      4     174
                                             32 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ejeynegativo                                         6     2      4     250
                                             32 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ejexpositivo                                         6     2      4      98
                                             32 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _ejexnegativo                                         6     2      4     174
                                             32 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _apagarM2                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _apagarM1                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4    1091
                                             12 BANK1     15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    4841
                                              0 BANK0      3     3      0
                                              0 BANK1     12     6      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    3626
                                             40 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2773
                                             32 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                             17    17      0       0
                                             15 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                            15    15      0       0
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___awtoft
     ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___fttol
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _apagarM1
   _apagarM2
   _ejexnegativo
   _ejexpositivo
   _ejeynegativo
   _ejeypositivo
   _enviarTrama
   _ledestado
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _strcmp
   _stringtolong
     ___lmul

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1D      36       7       21.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80      3      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2D      5E       1       74.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     114      15        0.0%
DATA                 0      0     114       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Nov 26 10:58:08 2017

                                                                _ptr_llegada 0036  
                                                                          _c 0099  
                                                                          _g 00A3  
                                                                          _h 008C  
                                                                          _i 003A  
                                                                          _n 00A7  
                                                                          _o 0088  
                                                                          _p 0084  
                                                                          _r 003C  
                                                              ?_ejexpositivo 0021  
                                                                         bsr 000FE0  
                                                              ?_ejeypositivo 0021  
                                                               __CFG_CP0$OFF 000000  
                                                               __CFG_CP1$OFF 000000  
                                                               __CFG_CP2$OFF 000000  
                                                               __CFG_CP3$OFF 000000  
                                                                __CFG_OSC$HS 000000  
                                                                        l221 07E8  
                                                                        l261 1CD8  
                                                                        l239 0AB2  
                                                                        l264 1CE2  
                                                                        l257 1CA0  
                                                                        l734 1C70  
                                                                        l815 1924  
                                                                        l745 1C50  
                                                                        l923 1DB2  
                                                                        l836 1BAC  
                                                                        l933 1F62  
                                                               __CFG_CPB$OFF 000000  
                                                               __CFG_CPD$OFF 000000  
                                                               __CFG_BOR$OFF 000000  
                                                                        _led 00AB  
                                                                        _tam 00E1  
                                                                        _vel 005D  
                                                                _stepsPerRev 00FB  
                                                               __CFG_BORV$20 000000  
                                                                        wreg 000FE8  
                                                               __CFG_LVP$OFF 000000  
                                                               __CFG_WDT$OFF 000000  
                                                                       l2312 1DE8  
                                                                       l4000 0838  
                                                                       l2308 1DD2  
                                                                       l4100 0B54  
                                                                       l4012 086E  
                                                                       l4006 0850  
                                                                       l2600 1172  
                                                                       l2440 1C7A  
                                                                       l2610 11A0  
                                                                       l4122 0C0A  
                                                                       l4050 09A6  
                                                                       l2700 138E  
                                                                       l2620 11CE  
                                                                       l2444 1CAA  
                                                                       l4124 0C14  
                                                                       l2710 13BC  
                                                                       l2630 11FC  
                                                                       l2606 118A  
                                                                       l2550 1076  
                                                                       l2462 1E7C  
                                                                       l4118 0BCE  
                                                                       l4038 095E  
                                                                       l2720 13EA  
                                                                       l2800 0F5A  
                                                                       l2632 1212  
                                                                       l2616 11B8  
                                                                       l2608 119A  
                                                                       l2560 10B2  
                                                                       l2640 126A  
                                                                       l2464 1E86  
                                                                       l3600 16AA  
                                                                       l4080 0AD2  
                                                                       l3530 1BD4  
                                                                       l2730 1418  
                                                                       l2706 13A6  
                                                                       l2650 1292  
                                                                       l2810 0F88  
                                                                       l2626 11E6  
                                                                       l2618 11C8  
                                                                       l2570 10E8  
                                                                       l2458 1E68  
                                                                       l3610 17B2  
                                                                       l4074 0AA8  
                                                                       l4066 0A64  
                                                                       l3540 1C38  
                                                                       l3532 1BE0  
                                                                       l2732 142E  
                                                                       l2716 13D4  
                                                                       l2708 13B6  
                                                                       l2660 12CE  
                                                                       l2740 1486  
                                                                       l2820 0FB6  
                                                                       l2628 11F6  
                                                                       l2580 1116  
                                                                       l2564 10CA  
                                                                       l2556 109C  
                                                                       l2900 0D2C  
                                                                       l3620 14DA  
                                                                       l2468 1EBC  
                                                                       l3542 1C44  
                                                                       l3534 1C00  
                                                                       l3526 1BC4  
                                                                       l3702 18A2  
                                                                       l2726 1402  
                                                                       l2718 13E4  
                                                                       l2670 1304  
                                                                       l2830 0FE4  
                                                                       l2806 0F72  
                                                                       l2590 1144  
                                                                       l2566 10D2  
                                                                       l2558 10AC  
                                                                       l2638 1226  
                                                                       l2910 0D5A  
                                                                       l2902 0D32  
                                                                       l3614 14BA  
                                                                       l3712 18E4  
                                                                       l2728 1412  
                                                                       l2680 1332  
                                                                       l2664 12E6  
                                                                       l2656 12B8  
                                                                       l2832 0FFA  
                                                                       l2816 0FA0  
                                                                       l2808 0F82  
                                                                       l2840 104E  
                                                                       l2576 1100  
                                                                       l2568 10E2  
                                                                       l2920 0D88  
                                                                       l2912 0D60  
                                                                       l3538 1C18  
                                                                       l2690 1360  
                                                                       l2666 12EE  
                                                                       l2658 12C8  
                                                                       l2738 1442  
                                                                       l2826 0FCE  
                                                                       l2818 0FB0  
                                                                       l2770 0EC8  
                                                                       l2754 0E74  
                                                                       l2586 112E  
                                                                       l2578 1110  
                                                                       l2930 0DB6  
                                                                       l2922 0D8E  
                                                                       l2850 0C26  
                                                                       l3650 1584  
                                                                       l3626 150E  
                                                                       l3802 011C  
                                                                       l3708 18C4  
                                                                       l2676 131C  
                                                                       l2668 12FE  
                                                                       l2828 0FDE  
                                                                       l2780 0EFE  
                                                                       l2756 0E84  
                                                                       l2748 0E4E  
                                                                       l2596 115C  
                                                                       l2588 113E  
                                                                       l2932 0DBC  
                                                                       l2908 0D4A  
                                                                       l2860 0C62  
                                                                       l2940 0DE2  
                                                                       l3564 1D78  
                                                                       l3636 1540  
                                                                       l3812 0152  
                                                                       l2686 134A  
                                                                       l2678 132C  
                                                                       l2790 0F2C  
                                                                       l2774 0EE0  
                                                                       l2766 0EB2  
                                                                       l2758 0E8A  
                                                                       l2838 100A  
                                                                       l2598 116C  
                                                                       l2934 0DD2  
                                                                       l2918 0D78  
                                                                       l2870 0C9A  
                                                                       l2942 0E26  
                                                                       l3566 1D82  
                                                                       l3638 1548  
                                                                       l3806 012E  
                                                                       l3728 1F86  
                                                                       l3680 181C  
                                                                       l3760 1B3E  
                                                                       l2696 1378  
                                                                       l2688 135A  
                                                                       l2776 0EE8  
                                                                       l2768 0EC2  
                                                                       l2928 0DA6  
                                                                       l2880 0CD0  
                                                                       l2872 0CA0  
                                                                       l2856 0C4C  
                                                                       l3576 1DA6  
                                                                       l3568 1D88  
                                                                       l3592 1F56  
                                                                       l3584 1F30  
                                                                       l3664 160A  
                                                                       l3656 15A4  
                                                                       l3762 1B48  
                                                                       l3770 1B7C  
                                                                       l2698 1388  
                                                                       l2786 0F16  
                                                                       l2778 0EF8  
                                                                       l2890 0CFE  
                                                                       l2882 0CD6  
                                                                       l2858 0C5C  
                                                                       l3586 1F3A  
                                                                       l3658 15AC  
                                                                       l3666 1618  
                                                                       l3914 04E0  
                                                                       l3842 025C  
                                                                       l3684 1832  
                                                                       l3756 1B28  
                                                                       l2796 0F44  
                                                                       l2788 0F26  
                                                                       l2892 0D04  
                                                                       l2876 0CB8  
                                                                       l2868 0C8A  
                                                                       l3588 1F40  
                                                                       l3668 1638  
                                                                       l3924 0510  
                                                                       l3860 0312  
                                                                       l3836 023A  
                                                                       l3828 020E  
                                                                       l3774 1B9A  
                                                                       l3766 1B5E  
                                                                       l2798 0F54  
                                                                       l2878 0CC0  
                                                                       l3918 04EE  
                                                                       l3942 05C2  
                                                                       l3862 031E  
                                                                       l3768 1B70  
                                                                       l2888 0CEE  
                                                                       l3952 063C  
                                                                       l3698 1882  
                                                                       l2898 0D1C  
                                                                       l3892 040A  
                                                                       l3868 0340  
                                                                       l3884 03DE  
                                                                       l3796 0104  
                                                                       l3788 00DC  
                                                                       l3984 07F2  
                                                                       l3994 081C  
                                                                       l3898 042C  
                                                                       l3996 0826  
                                                                       l3988 0804  
                                                                       STR_1 7FCE  
                                                                       STR_2 7FE6  
                                                                       STR_3 7FCE  
                                                                       STR_4 7FE6  
                                                                       STR_5 7FCE  
                                                                       STR_6 7FE6  
                                                                       STR_7 7FE6  
                                                                       _LATA 000F89  
                                                                       u1510 1CCE  
                                                                       _LATB 000F8A  
                                                                       u1517 1CC4  
                                                                       u1560 1E46  
                                                                       u3321 0AD0  
                                                                       u1490 1C9E  
                                                                       u1566 1E4A  
                                                                       u3271 086C  
                                                                       u1680 1092  
                                                                       u3280 0912  
                                                                       u1497 1C94  
                                                                       u1780 12AE  
                                                                       u1880 0E6A  
                                                                       u1980 0C42  
                                                                       u2941 1A96  
                                                                       u2871 17E6  
                                                                       u2960 1ACE  
                                                                       u2891 180C  
                                                                       u2965 1AC2  
                                                                       i2l48 1A3E  
                                                                       _TMR1 000FCE  
                                                                       _dato 0042  
                                                                       _help 0080  
                                                             ??_ejexnegativo 0025  
                                                                       _main 00AE  
                                                                       _lleg 0038  
                                                               ___ftpack@arg 0021  
                                                                       _tama 0040  
                                                               ___ftpack@exp 0024  
                                                                       fsr0h 000FEA  
                                                                       fsr1h 000FE2  
                                                                       indf0 000FEF  
                                                                       fsr2h 000FDA  
                                                                       fsr0l 000FE9  
                                                                       indf1 000FE7  
                                                                       indf2 000FDF  
                                                                       fsr1l 000FE1  
                                                                       fsr2l 000FD9  
                                                                       btemp 005F  
                                                             ??_ejeynegativo 0025  
                                                               ?_enviarTrama 0021  
                                                                       prodh 000FF4  
                                                                       prodl 000FF3  
                                                                       start 00AA  
                                                         stringtolong@string 0100  
                                                         ledestado@tiempoled 0021  
                                                               ___ftmul@cntr 010A  
                                                               ___param_bank 000000  
                                                               ___ftmul@sign 010B  
                                                            __end_of_InitApp 1F20  
                                                               ___fttol@exp1 011A  
                                                             ??_ejexpositivo 0025  
                                                               ___fttol@lval 0116  
                                                             ??_ejeypositivo 0025  
                                                              __CFG_OSCS$OFF 000000  
                                                                      ?_main 0001  
                                                                      _EEADR 000FA9  
                                                            __end_of___ftmul 192A  
                                                            __end_of___fttol 1BB2  
                                                            __end_of___lwdiv 1DC0  
                                                            __end_of___lwmod 1F70  
                                                                      _RCREG 000FAE  
                                                                      _SPBRG 000FAF  
                                                                      _PORTA 000F80  
                                                                      _PORTB 000F81  
                                                                      _PORTC 000F82  
                                                                      _TRISA 000F92  
                                                                      _TXREG 000FAD  
                                                        _ConfigureOscillator 1FD2  
                                                              __CFG_PWRT$OFF 000000  
                                                              __CFG_WRT0$OFF 000000  
                                                              __CFG_WRT1$OFF 000000  
                                                              __CFG_WRT2$OFF 000000  
                                                        ___lmul@multiplicand 0025  
                                                              __CFG_WRT3$OFF 000000  
                                                             __CFG_EBTR0$OFF 000000  
                                                             __CFG_EBTR1$OFF 000000  
                                                             __CFG_EBTR2$OFF 000000  
                                                             __CFG_EBTR3$OFF 000000  
                                                              __CFG_STVR$OFF 000000  
                                                              __CFG_WRTB$OFF 000000  
                                                              __CFG_WRTC$OFF 000000  
                                                              __CFG_WRTD$OFF 000000  
                                                             __CFG_EBTRB$OFF 000000  
                                                              ___awtoft@sign 002C  
                                                            __end_of_dpowers 7EF3  
                                                                      _enter 00AD  
                                                                      _tama1 0095  
                                                                      _tama2 0093  
                                                              ___ftpack@sign 0025  
                                                      __size_of_stringtolong 0184  
                                                        stringtolong@tamanio 0102  
                                                                      _xtrue 005B  
                                                                      _ytrue 0059  
                                                            __end_of_low_isr 00AA  
                                                                      pclath 000FFA  
                                                            __end_of_norango 7F34  
                                                                      tablat 000FF5  
                                                                      status 000FD8  
                                                            __end_of_sprintf 164A  
                                                       ?_ConfigureOscillator 0001  
                                                            __initialization 1CEE  
                                                               __end_of_main 0C22  
                                                                     ??_main 011B  
                                                              ___fttol@sign1 0115  
                                                              __activetblptr 000002  
                                                               _stringtolong 164A  
                                                                     _EEDATA 000FA8  
                                                                     _EECON2 000FA7  
                                                           __end_of___awtoft 1FAE  
                                                           __end_of___ftpack 1C76  
                                                                     i2l3070 19B2  
                                                                     i2l3072 19B6  
                                                                     i2l3066 1994  
                                                                     i2l3092 1A32  
                                                             __CFG_WDTPS$128 000000  
                                                           __end_of_apagarM1 1FD2  
                                                           __end_of_apagarM2 1FBC  
                                                                  ??_InitApp 0021  
                                                      ??_ConfigureOscillator 0021  
                                                           __end_of_devolver 7FB7  
                                                           __end_of_high_isr 1A7E  
                                                                     ___lmul 1DC0  
                                                                  ??___ftmul 00FD  
                                                __end_of_comandonoreconocido 7FA2  
                                                                  ??___fttol 0110  
                                                                  ??___lwdiv 0025  
                                                                  ??___lwmod 002C  
                                                              _visualizacion 009F  
                                                                     clear_0 1D34  
                                                                     clear_1 1D40  
                                                                     clear_2 1D4C  
                                                                     _salida 00AF  
                                                                     _rangox 7F60  
                                                                     _rangoy 7F34  
                                                                     _saludo 7FA2  
                                                                     _moverx 7FC7  
                                                                     _movery 7FC0  
                                                                     _stepsx 004B  
                                                                     _stepsy 0047  
                                                                     _strcmp 1E78  
                                                      ___ftmul@f3_as_product 0107  
                                                       __end_of_ejexnegativo 14AA  
                                                               __pdataCOMRAM 0053  
                                                       __end_of_ejeynegativo 128E  
                                                               __mediumconst 7EE8  
                                                                  ??_low_isr 0010  
                                                                     tblptrh 000FF7  
                                                                     tblptrl 000FF6  
                                                                     tblptru 000FF8  
                                                                  ??_sprintf 002D  
                                                       __end_of_ejexpositivo 1072  
                                                       __end_of_ejeypositivo 0E4A  
                                                                 __accesstop 0080  
                                                    __end_of__initialization 1D52  
                                                              ___rparam_used 000001  
                                                                 ___awtoft@c 0029  
                                                                 ___ftmul@f1 0100  
                                                                 ___ftmul@f2 0103  
                                                       __size_of_enviarTrama 0078  
                                                                 ___fttol@f1 010C  
                                                             __pcstackCOMRAM 0001  
                                                               __pidataBANK0 1FD8  
                                                         __size_of_ledestado 005A  
                                                                 __pbssBANK0 0080  
                                                                 __pbssBANK1 011D  
                                                                    ?___lmul 0021  
                                                           __CFG_CCP2MUX$OFF 000000  
                                                             ___lmul@product 0029  
                                                                  ?___awtoft 0029  
                                                                  ?___ftpack 0021  
                                                                    ?_strcmp 0021  
                                                                  ?_apagarM1 0001  
                                                                  ?_apagarM2 0001  
                                                                  ?_high_isr 0001  
                                                                    _InitApp 1ECC  
                                                          ejeypositivo@paso3 0021  
                                                                    __Hparam 0000  
                                                                    __Lparam 0000  
                                                            __size_of___lmul 005E  
                                                                    ___ftmul 17CE  
                                                                    ___fttol 1A7E  
                                                      __size_of_ejexnegativo 021C  
                                                                    ___lwdiv 1D60  
                                                                    ___lwmod 1F20  
                                                      __size_of_ejeynegativo 021C  
                                                          __end_of_ledestado 1E78  
                                                                    __pcinit 1CEE  
                                                                 ??___awtoft 002C  
                                                                 ??___ftpack 0026  
                                                                    __ramtop 0600  
                                                                    _digitos 0090  
                                                                    __ptext0 00AE  
                                                                    __ptext1 164A  
                                                                    __ptext2 1DC0  
                                                                    __ptext3 1E78  
                                                                    __ptext4 14AA  
                                                                    __ptext5 1F20  
                                                                    __ptext6 1D60  
                                                                    __ptext7 1E1E  
                                                                    __ptext8 1C76  
                                                                    __ptext9 0C22  
                                                                    _comando 00C8  
                                                            __size_of_strcmp 0054  
                                                                  _T1CONbits 000FCD  
                                                                    _entrada 011D  
                                                                    _dpowers 7EE9  
                                                                 ??_apagarM1 0021  
                                                                 ??_apagarM2 0021  
                                                      __size_of_ejexpositivo 0228  
                                                                    _low_isr 0018  
                                                                    _norango 7EF3  
                                                      __size_of_ejeypositivo 0228  
                                                                    _sprintf 14AA  
                                                      __end_of_posicion_info 7FC0  
                                                                 ??_high_isr 0001  
                                                             __pintcode_body 192A  
                                                       end_of_initialization 1D52  
                                                              __Lmediumconst 7EE8  
                                                                    int_func 192A  
                                                                _StepCounter 00A5  
                                                               _ejexnegativo 128E  
                                                               _ejeynegativo 1072  
                                                               _devolvertrue 0097  
                                                                  _RCSTAbits 000FAB  
                                                                    postdec1 000FE5  
                                                                    postdec2 000FDD  
                                                                    postinc0 000FEE  
                                                                    postinc2 000FDE  
                                                                 _movimiento 00A9  
                                                                    strcmp@r 0026  
                                                               _ejexpositivo 0E4A  
                                                                  _PORTBbits 000F81  
                                                               _ejeypositivo 0C22  
                                                                  _TRISBbits 000F93  
                                                                  _TRISCbits 000F94  
                                                __end_of_ConfigureOscillator 1FD8  
                                                                  _TXSTAbits 000FAC  
                                                                ___ftmul@exp 0106  
                                                             __end_of___lmul 1E1E  
                                                              __pidataCOMRAM 1FBC  
                                                             __end_of_rangox 7F8C  
                                                             __end_of_rangoy 7F60  
                                                             __end_of_saludo 7FAE  
                                                             __end_of_moverx 7FCE  
                                                             __end_of_movery 7FC7  
                                                             __end_of_strcmp 1ECC  
                                                           ejexpositivo@paso 0021  
                                                        start_initialization 1CEE  
                                                              ??_enviarTrama 0023  
                                                                   ??___lmul 0029  
                                                                __pdataBANK0 00F9  
                                                                   ??_strcmp 0025  
                                                          __size_of___awtoft 003E  
                                                          __size_of___ftpack 00C4  
                                                                __pbssCOMRAM 002E  
                                                              __pcstackBANK0 00FD  
                                                              __pcstackBANK1 0100  
                                                          ejexnegativo@paso2 0021  
                                                          __size_of_apagarM1 000A  
                                                          __size_of_apagarM2 000E  
                                                          __size_of_high_isr 1A76  
                                                                sprintf@flag 0108  
                                                                sprintf@prec 0109  
                                                                   ?_InitApp 0001  
                                                           ___lwdiv@dividend 0021  
                                                                  __pintcode 0008  
                                                              __pmediumconst 7EE8  
                                                        __end_of_enviarTrama 1CEE  
                                                                   ?___ftmul 0100  
                                                                   ?___fttol 010C  
                                                                   ?___lwdiv 0021  
                                                                   ?___lwmod 0028  
                                                                __pintcodelo 0018  
                                                              ?_stringtolong 0100  
                                                                  _ledestado 1E1E  
                                                                   ?_low_isr 0001  
                                                           ___lwdiv@quotient 0026  
                                                                   ?_sprintf 0100  
                                                                  _relacionx 0056  
                                                                  _relaciony 0053  
                                                                   _LATBbits 000F8A  
                                                                   _IPR1bits 000F9F  
                                                                   _PIE1bits 000F9D  
                                                                   _PIE2bits 000FA0  
                                                                   i2u230_40 1A10  
                                                                   i2u230_46 1A14  
                                                                   i2u229_40 1A08  
                                                                   _PIR1bits 000F9E  
                                                                   _PIR2bits 000FA1  
                                                                  _posicionx 0032  
                                                                  _posiciony 0034  
                                                             ??_stringtolong 0104  
                                                                _contadorled 009D  
                                                                  _stepcount 002E  
                                                            _stepsx_auxiliar 00F5  
                                                                 ?_ledestado 0021  
                                                            _stepsy_auxiliar 0043  
                                                          ___lmul@multiplier 0021  
                                                                  copy_data0 1D02  
                                                                  copy_data1 1D22  
                                                                 _EECON1bits 000FA6  
                                                                _enviarTrama 1C76  
                                                        _comandonoreconocido 7F8C  
                                                           __size_of_InitApp 0054  
                                                                   __Hrparam 0000  
                                                                   __Lrparam 0000  
                                                           __size_of___ftmul 015C  
                                                           __size_of___fttol 0134  
                                                           __size_of___lwdiv 0060  
                                                           __size_of___lwmod 0050  
                                                                   ___awtoft 1F70  
                                                                   ___ftpack 1BB2  
                                                                 sprintf@val 010A  
                                                           enviarTrama@datos 0021  
                                                                   _apagarM1 1FC8  
                                                                   _apagarM2 1FAE  
                                                                _currentstep 003E  
                                                            ___lwdiv@divisor 0023  
                                                            ___lwdiv@counter 0025  
                                                           __size_of_low_isr 0092  
                                                                   __ptext10 1072  
                                                                   __ptext11 0E4A  
                                                                   __ptext20 1FD2  
                                                                   __ptext12 128E  
                                                                   __ptext13 1FAE  
                                                                   __ptext14 1FC8  
                                                                   __ptext15 1A7E  
                                                                   __ptext16 17CE  
                                                                   __ptext17 1F70  
                                                                   __ptext18 1BB2  
                                                                   __ptext19 1ECC  
                                                                   _devolver 7FAE  
                                                                   _high_isr 0008  
                                                                   _cont_led 009B  
                                                           __size_of_sprintf 01A0  
                                                              __size_of_main 0B74  
                                                                   _infotrue 00F9  
                                               __size_of_ConfigureOscillator 0006  
                                                                   _muestreo 00A1  
                                                                   int$flags 005F  
                                                                ??_ledestado 0023  
                                                                 _INTCONbits 000FF2  
                                                          ejeynegativo@paso4 0021  
                                                              _posicion_info 7FB7  
                                                                   intlevel1 1FDC  
                                                                   intlevel2 1FDC  
                                                                  sprintf@ap 0106  
                                                                  sprintf@sp 0100  
                                                           ___lwmod@dividend 0028  
                                                       __end_of_stringtolong 17CE  
                                                                _movimientox 004F  
                                                                _movimientoy 0051  
                                                                   sprintf@c 010C  
                                                                   sprintf@f 0102  
                                                                   strcmp@s1 0021  
                                                                   strcmp@s2 0023  
                                                            ___lwmod@divisor 002A  
                                                            ___lwmod@counter 002C  
                                                              ?_ejexnegativo 0021  
                                                              ?_ejeynegativo 0021  
